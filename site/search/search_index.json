{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Kalp Studio Landing Page Welcome to Kalp Studio Documentation!                  Kalp Studio is a decentralized infrastructure platform designed to build, manage, and scale blockchain applications and networks. It serves as a comprehensive ecosystem for developers, offering a wide range of tools and services that simplify the complexities of blockchain technology, making it more accessible and efficient.                                              Build                                                         Getting started with Kalp Studio.                                                           Onboarding                                                              The onboarding process in kalp studio dashboard is designed to be seamless and user-friendly, guiding new users through the necessary steps to set up their accounts and begin using the platform effectively.                                                          Dashboard                                                         The Kalp studio dashboard provides an all-in-one overview of your smart contract projects, giving you real-time insights and control over your operations.                                                         Billing                                                         The billing section allows you to manage your payment methods, view invoices, and track your subscription details.                                                         Credits                                                         Credits in kalp studio can be used to access various services and features on the platform.                                                     Kalp Studio Wallet                                                 The Kalp studio Wallet is a secure cryptocurrency wallet integrated within kalp studio, supporting kalp blockchain.                                                     Kalp Instant Deployer                                                         Kalp Instant Deployer (KID) streamlines the deployment of smart contracts, providing real-time tracking and secure management.                                                                  API Gateway                                                                           The API gateway in kalp studio provides a centralized interface for managing and accessing your APIs.                                                                         Transaction Monitoring                                                                       Transaction monitoring in kalp studio provides tools to track and analyze blockchain transactions in real time.                                                                     API Key Generation                                                                   API key generation in kalp studio enables you to create and manage keys for authenticating API requests.                                                               Learn                                                               Further your understanding of entire kalp studio ecosystem.                                                            Kalp Studio Overview                                                             Kalp studio is the leading blockchain infrastructure platform powering web3 developers worldwide. We are a team of engineers, designers and visionaries who are solving hard problems and creating a superior user experience in the world of blockchains.                                                         Kalp Studio Console                                                             Kalp studio console dashboard allows developers, businesses, and enthusiasts to build, manage, and scale blockchain applications with ease.                                                            Kalp DLT                                                                     The Kalp Decentralized Network (KDN) is a ecosystem for secure tokenization of real-world assets. It uses KYC verification, A distributed certificate authority to enhance liquidity and market reach.                                                       Kalp Instant Deployer                                                   Kalp Instant Deployer (KID) is a service designed to handle the deployment of smart contracts and track their status post-deployment.                                                  What is Kalp Wallet                                                           Kalp wallet is a versatile cryptocurrency wallet that supports kalp blockchain and offers various wallet types to cater to different user needs and security preferences.                                                  Developer Resources                                                   For developers who know what they want to build and are ready to go with KALP Blockchain.                          Kalp DLT Based Deployments This guide provides an overview of the essential steps involved in deploying a smart contract on Kalp DLT chain, from setting up the development environment to deploying and verifying your contract on the network and managing your deployment journey on kalp studio. API Reference Kalp Studio Varioud products API reference provides a comprehensive suite of tools for building and managing blockchain-based applications. The API ensures secure, scalable, and efficient interactions with KALP DLT blockchain network. Video Tutorials Welcome to the Kalp Studio Video Tutorials, your go-to resource for blockchain development with Kalp Studio. Kalp studio tutorials provide clear explanations and practical demos to help you build secure and scalable blockchain applications. Quick Start                   Are you ready to start building with kalp studio?                   How to Sign Up and Log In to Kalp studio Platform How to Create and Connect Wallet to kalp studio How to Deploy a Smart Contract on kalp studio How to generate API endpoints How to generate API key How can I monitor all my transactions"},{"location":"API-Reference/Email-Gateway-Integration-Guide/","title":"Email Gateway Integration Guide","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#email-gateway-integration-guide-v1","title":"Email Gateway Integration Guide v1","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#1-introduction","title":"1. Introduction","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#purpose","title":"Purpose","text":"<p>The Email Gateway API enables seamless integration of email functionality into applications, allowing developers to send emails, manage authentication, retrieve logs, and handle webhooks efficiently. This guide provides a comprehensive overview of authentication mechanism, API endpoints, security best practices, and troubleshooting steps.</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#audience","title":"Audience","text":"<p>This guide is intended for developers, DevOps engineers, and product managers who need to integrate email-sending capabilities into their applications using the Email Gateway API.</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#api-version","title":"API Version","text":"<p>1.0.0</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#import-the-collection","title":"Import the collection","text":"<p>View Postman Collection</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#2-prerequisites","title":"2. Prerequisites","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#accounts","title":"Accounts","text":"<p>To access the API, Enter the Access token provided by service provider (Kalp Studio)</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#credentials","title":"Credentials","text":"<ul> <li>Email authkey (for sending emails)</li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#tools","title":"Tools","text":"<ul> <li> <p>Postman (Recommended for API testing)</p> </li> <li> <p>cURL (Command-line request testing)</p> </li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#permissions","title":"Permissions","text":"<ul> <li>Requires valid authentication credentials.</li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#3-authentication-authorization","title":"3. Authentication &amp; Authorization","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#methods","title":"Methods","text":"<ul> <li> <p>Uses email auth key validation.</p> </li> <li> <p>The emailauthkey would be validated and authenticated .</p> </li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#4-base-urls-environments","title":"4. Base URLs &amp; Environments","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#production-vs-sandbox","title":"Production vs. Sandbox","text":"<ul> <li>Production: <code>https://email-api.p2epl.io</code></li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#5-endpoint-reference","title":"5. Endpoint Reference","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#email-endpoints","title":"Email Endpoints","text":"<p>Method - POST</p> <p>Endpoint - <code>/v1/send/email</code></p> <p>Description - Send an email without an attachment</p> <p>Method - POST</p> <p>Endpoint - <code>/v1/send/attachemail</code></p> <p>Description - Send an email with or without an attachment</p> <p>Method - GET</p> <p>Endpoint - <code>/v1/logs</code></p> <p>Description - Retrieve email logs</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#6-error-handling","title":"6. Error Handling","text":"<p>400 - Unauthorized, you do not have permission to access this service.</p> <p>404 - Check your URL please</p> <p>400 - Invalid Request Format</p> <p>400 - Please take a moment before sending another email</p> <p>500 - Internal Server Error</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#example-error-response","title":"Example Error Response","text":"<pre><code>`{ \"status\": \"failure\", \"message\": \"Invalid Request Format\", \"customErrorNumber\": -999999, \"errorFields\": [ \"emailType\" ] }`\n</code></pre>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#7-rate-limits-quotas","title":"7. Rate Limits &amp; Quotas","text":"<ul> <li>5 requests per minute per email recipient.</li> </ul>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#8-api-reference","title":"8. API Reference","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#1-how-to-send-an-email-","title":"1. How to send an email -","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#example-request-curl-send-email-without-an-attachment","title":"Example Request (CURL) - Send Email without an attachment","text":"<p><code>curl --location 'https://email-api.p2epl.io/v1/send/email' \\ --header 'emailauthkey: keynames123 \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"emailTo\": \"subhankar.roy@mai.io\", \"emailFrom\": \"subhankar.roy@p2eppl.com\", \"subject\": \"FIRST MAIL\", \"message\": \"This is email from prod environment\", \"category\": \"account_related\", \"emailType\": \"account\" }'</code></p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-1-navigate-to-email-gateway-public","title":"Step 1: Navigate to Email-gateway Public","text":"<p>Workspace in Postman</p> <p></p> <p>Email-gateway Public</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-2-select-the-email-gateway-folder-in-the-collection-list","title":"Step 2: Select the \u201cEmail-gateway\u201c folder in the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-3-select-v1-email-folder-from-the-collection-list","title":"Step 3: Select \u201cv1 email\u201d folder from the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-4-select-post-sendemail-from-the-collection-list","title":"Step 4: Select \u201cPOST sendemail\u201d from the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-5-click-on-the-headers-tab-and-enter-your-emailauthkey","title":"Step 5: Click on the \"Headers\" tab and enter your emailauthkey.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-6-click-on-the-body-tab-and-enter-all-the-parameter-values","title":"Step 6: Click on the \"Body\" tab and enter all the parameter values.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-7-click-send","title":"Step 7: Click \"Send\"","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-8-the-response-body-will-receive-a-success-message-and-an-email-will-be-sent","title":"Step 8: The response body will receive a success message, and an email will be sent.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#2-how-to-send-an-email-with-an-attachment","title":"2. How to send an email with an attachment","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#example-request-curl-send-email-with-an-attachment","title":"Example Request (CURL) - Send Email with an attachment","text":"<p><code>curl --location 'https://email-api.p2epl.io/v1/send/attachemail' \\ --header 'emailauthkey: ancdef12345' \\ --form 'emailTo=\"testeme@yopmail.com\"' \\ --form 'emailFrom=\"test@p2eppl.com\"' \\ --form 'subject=\"test subject\"' \\ --form 'message=\"content test\"' \\ --form 'category=\"test\"' \\ --form 'emailType=\"transactional\"' \\ --form 'file=@\"/C:/Users/Joe/Downloads/Holiday List 2023.pdf\"' \\ --form 'emailCc[0]=\"testeme@yopmail.com\"'</code></p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-1-navigate-to-email-gateway-public_1","title":"Step 1: Navigate to Email-gateway public.","text":"<p>Email-gateway Public</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-2-select-the-email-gateway-folder-in-the-collection-list_1","title":"Step 2: Select the \u201cEmail-gateway\u201c folder in the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-3-select-v1-email-folder-from-the-collection-list_1","title":"Step 3: Select \u201cv1 email\u201d folder from the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-4-select-post-attachemail-from-the-collection-list","title":"Step 4: Select \u201cPOST attachemail\u201d from the collection list.","text":"<p>Send Email is the route for sending email with an attachment. The body content is in Form Data.</p> <p></p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-5-click-on-the-headers-tab-and-enter-your-emailauthkey_1","title":"Step 5: Click on the \"Headers\" tab and enter your emailauthkey.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-6-click-on-the-body-tab-and-enter-all-the-parameter-values_1","title":"Step 6: Click on the \"Body\" tab and enter all the parameter values.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-7-click-send_1","title":"Step 7: Click \"Send\"","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-8-the-response-body-will-receive-a-success-message-and-an-email-with-an-attachment-will-be-sent","title":"Step 8: The response body will receive a success message and an email with an attachment will be sent.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#3-how-to-retrieve-email-logs","title":"3. How to retrieve email logs","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#example-request-curl-how-to-retrieve-email-logs","title":"Example Request (CURL) - How to retrieve email logs","text":"<p><code>curl --location 'https://email-api.p2epl.io/v1/logs?pageNo=1&amp;pageSize=10' \\ --header 'emailauthkey: abcdef12345'</code></p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-1-navigate-to-email-gateway-public_2","title":"Step 1: Navigate to Email-gateway Public","text":"<p>Email-gateway Public</p>"},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-2-select-get-email-logs-in-v1-email-folder-from-the-collection-list","title":"Step 2: Select \"GET email logs\" in \u201cv1 email\u201d folder from the collection list.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-3-set-the-query-parameters-as-per-the-requirement-pageno-pagesize-or-other-parameters-in-the-params-tab","title":"Step 3: Set the query parameters as per the requirement. \"pageNo\" ,\"pageSize\" or other parameters in the \"Params\" tab.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-4-click-on-the-headers-tab-and-enter-your-emailauthkey","title":"Step 4: Click on the \"Headers\" tab and enter your emailauthkey.","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-5-click-send","title":"Step 5: Click \"Send\"","text":""},{"location":"API-Reference/Email-Gateway-Integration-Guide/#step-6-the-response-body-will-receive-a-success-message-and-all-email-logs","title":"Step 6: The response body will receive a success message and all email logs.","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/","title":"KS Pay API Documentation","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#ks-pay-api-integration-guide","title":"KS Pay API Integration Guide","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#1-introduction","title":"1. Introduction","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#purpose","title":"Purpose","text":"<p>Kalp Studio Payment Engine (PE) API enables businesses to integrate and manage financial transactions. A few of the key API functionalities are user authentication (sign-up, login, and KYB verification), company onboarding, and application management.</p> <p>Multi-step verification processes, including credentials, webhooks, and NPM integration, enable seamless interaction with payment gateways, enabling users to add, verify, and prioritize gateways.</p> <p>In addition, the API supports tax, product, and customer management. Customers can be created, invoices can be generated, bank accounts can be managed, and withdrawals can be initiated.</p> <p>Through customizable API keys, developers can automate billing and invoicing processes, track transaction statuses, and access payment analytics. A comprehensive documentation ensures smooth integration and secure financial operations, making Kalp Pay API a robust solution for businesses that manage payments.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#audience","title":"Audience","text":"<p>This guide is intended for developers, DevOps engineers, and product managers who need to integrate Payment engine capabilities into their applications using the KS Pay API.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#api-version","title":"API Version","text":"<p>1.0.0</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#postman-collection","title":"Postman Collection","text":"<p>KS Pay API Collection</p> <p>Base URL: https://payment-api.p2epl.io/v1</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#2-prerequisites","title":"2. Prerequisites","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#accounts","title":"Accounts","text":"<p>To access the API, Enter the Access token &amp; Referesh token.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#credentials","title":"Credentials","text":"<p>Merchant Token &amp; Authorization key</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#tools","title":"Tools","text":"<ul> <li> <p>Postman (Recommended for API testing)</p> </li> <li> <p>cURL (Command-line request testing)</p> </li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#permissions","title":"Permissions","text":"<ul> <li>Requires valid authentication credentials.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#3-authentication-authorization-error-codes","title":"3. Authentication &amp; Authorization &amp; Error codes","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#authentication","title":"Authentication","text":"<p>Authentication is handled via API key middleware guards. The API key ensures that the request is from a valid user with the correct permissions.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#steps-to-authenticate","title":"Steps to Authenticate","text":"<ol> <li> <p>Obtain API Key: Request an API key from login API.</p> </li> <li> <p>Include API Key in Request: Use the API key in the headers of your API requests.</p> </li> </ol>"},{"location":"API-Reference/KS-Pay-API-Documentation/#example-authentication-header","title":"Example Authentication Header","text":"<pre><code>Authorization:  YOUR_API_KEY\n\nMerchant Token:  YOUR_API_KEY\n</code></pre>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request-payloads","title":"Request Payloads","text":"<p>The Payment Engine API supports the following types of request payloads:</p> <ul> <li> <p>Form-Encoded: <code>Content-Type: application/x-www-form-urlencoded</code></p> </li> <li> <p>Raw</p> </li> <li> <p>Form Data</p> </li> <li> <p>JSON</p> </li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#responses","title":"Responses","text":"<p>Each response payload is encoded into JSON and contains a result indicating success or an error message for failed or rejected requests.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#error-codes","title":"Error Codes","text":"<p>Status codes other than 200 indicate an issue with the request. Here are some common error codes.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#common-api-error-codes","title":"Common API Error Codes","text":"<pre><code>const ErrorMessages = {\n  invalidId: {\n    message: (id) =&gt; `${id} not present in Request`,\n    httpStatus: 400,\n    code: -9,\n  },\n  notFoundUrl: {\n    message: (msg) =&gt; msg,\n    httpStatus: 404,\n    code: -10,\n  },\n  externalError: {\n    message: (msg) =&gt; msg,\n    httpStatus: 400,\n    code: -11,\n  },\n  invalidNanoid: {\n    message: (prefix, length) =&gt;\n      `ID must start with '${prefix}' and be ${length} characters long with alphanumeric characters following the prefix.`,\n    httpStatus: 400,\n    code: -17,\n  },\n  invalidPaymentMethodIds: {\n    message: (ids) =&gt;\n      `The following payment method IDs do not exist in DB: ${ids.join(', ')}`,\n    httpStatus: 400,\n    code: 13006,\n  },\n  environmentSetupError: {\n    message: (env) =&gt;\n      `The environment URL for ${env} is not defined. Try sending specific environment in params.`,\n    httpStatus: 400,\n    code: -13,\n  },\n  // Module specific errors\n  auth: {\n    tokenMissing: {\n      message: 'Token missing or incorrect',\n      httpStatus: 400,\n      code: 9000,\n    },\n    shortUrlTokenMissing: {\n      message: 'ShortUrlToken missing or incorrect',\n      httpStatus: 400,\n      code: 9001,\n    },\n    apiKeyMissing: {\n      message: 'Api Key is Missing',\n      httpStatus: 400,\n      code: 9002,\n    },\n    apiKeyNotGenerated: {\n      message: 'Api Key is not generated!',\n      httpStatus: 400,\n      code: 9003,\n    },\n    unauthorizedAccess: {\n      message: 'Unauthorized Access',\n      httpStatus: 401,\n      code: 9004,\n    },\n    unauthorized: {\n      message: 'Unauthorized! Please provide valid credentials.',\n      httpStatus: 401,\n      code: 9007,\n    },\n  },\n  currencyModule: {\n    currencyAlreadyExists: {\n      message: 'Currency already exists.',\n      httpStatus: 400,\n      code: 1051,\n    },\n    currencyNotExists: {\n      message: \"Currency doesn't exist\",\n      httpStatus: 400,\n      code: 1052,\n    },\n    currencyCodeAlreadyExists: {\n      message: 'Currency code already exists',\n      httpStatus: 400,\n      code: 1053,\n    },\n    invalidCurrencyCode: {\n      message: 'Invalid currency code',\n      httpStatus: 400,\n      code: 1054,\n    },\n    currencySubTypeAlreadyExists: {\n      message: 'Currency type and code already exist',\n      httpStatus: 400,\n      code: 1055,\n    },\n  },\n  companyModule: {\n    companyAlreadyExists: {\n      message: 'Company already exists for this user, try updating the existing company.',\n      httpStatus: 400,\n      code: 2000,\n    },\n    companyAlreadyExistsWithThisName: {\n      message: 'Company already exists with this name, try using a different name.',\n      httpStatus: 409,\n      code: 2001,\n    },\n    companyNotExists: {\n      message: \"Company doesn't exist.\",\n      httpStatus: 400,\n      code: 2002,\n    },\n    companyNameEmpty: {\n      message: \"Company name can't be empty\",\n      httpStatus: 400,\n      code: 2003,\n    },\n    companyNameError: {\n      message: 'Company name must be between at least 3 characters and a maximum of 60 characters',\n      httpStatus: 400,\n      code: 2004,\n    },\n    invalidCountry: {\n      message: 'Existing state does not belong to the new country',\n      httpStatus: 400,\n      code: 2005,\n    },\n    invalidState: {\n      message: 'New state does not belong to the existing country',\n      httpStatus: 400,\n      code: 2006,\n    },\n    invalidCountryState: {\n      message: 'State does not belong to the given country',\n      httpStatus: 400,\n      code: 2007,\n    },\n  },\n  appModule: {\n    appAlreadyExists: {\n      message: 'Platform already exists',\n      httpStatus: 400,\n      code: 2051,\n    },\n    appEmailAlreadyExists: {\n      message: 'Platform with this Email already exists',\n      httpStatus: 400,\n      code: 2052,\n    },\n    appNameAlreadyExists: {\n      message: 'Platform with this Name already exists',\n      httpStatus: 400,\n      code: 2053,\n    },\n    appPhoneAlreadyExists: {\n      message: 'Platform with this phone already exists',\n      httpStatus: 400,\n      code: 2054,\n    },\n    appNotExists: {\n      message: 'Platform either does not exist or is not Active!',\n      httpStatus: 400,\n      code: 2055,\n    },\n    appNameEmpty: {\n      message: \"Platform name can't be empty\",\n      httpStatus: 400,\n      code: 2056,\n    },\n    appNameError: {\n      message: 'Platform name must be between at least 3 characters and a maximum of 256 characters',\n      httpStatus: 400,\n      code: 2057,\n    },\n    appNotExist: {\n      message: 'No app assigned in this country',\n      httpStatus: 400,\n      code: 2058,\n    },\n    appNotExistWithThisUserID: {\n      message: 'This app is not assigned to this user',\n      httpStatus: 400,\n      code: 2059,\n    },\n    appGatewayNotExist: {\n      message: 'No gateway assigned in this app',\n      httpStatus: 400,\n      code: 2060,\n    },\n    invalidGstNo: {\n      message: 'Enter Valid GST Number',\n      httpStatus: 400,\n      code: 2061,\n    },\n  },\n  pagination: {\n    pageShouldBePositive: {\n      message: 'Page should be a positive number greater than 0',\n      httpStatus: 400,\n      code: 4089,\n    },\n    limitShouldBePositive: {\n      message: 'Limit should be a positive number greater than 0',\n      httpStatus: 400,\n      code: 4056,\n    },\n  },\n  countryModule: {\n    countryNotExists: {\n      message: 'Country with this name does not exist.',\n      httpStatus: 400,\n      code: 4052,\n    },\n  },\n  stateModule: {\n    stateDoesNotExists: {\n      message: 'The state with this name does not exist.',\n      httpStatus: 400,\n      code: 5051,\n    },\n    stateNotCorrect: {\n      message: 'The state does not belong to the specified country.',\n      httpStatus: 400,\n      code: 5052,\n    },\n  },\n  system: {\n    unauthorizedAccess: {\n      message: 'You do not have access to edit the details, kindly contact administrator.',\n      httpStatus: 401,\n      code: 23,\n    },\n    noDataFound: {\n      message: 'No data found with this ID!',\n      httpStatus: 404,\n      code: 24,\n    },\n    invalidRequest: {\n      message: 'Invalid Request',\n      httpStatus: 400,\n      code: 25,\n    },\n    oopsSomethingWentWrong: {\n      message: 'Oops! Something went wrong',\n      httpStatus: 500,\n      code: 26,\n    },\n    externalProviderIssue: {\n      message: 'External Provider issue!',\n      httpStatus: 400,\n      code: 27,\n    },\n    dbError: {\n      message: 'DB Error',\n      httpStatus: 400,\n      code: 28,\n    },\n    invalidApiKey: {\n      message: 'Invalid API key',\n      httpStatus: 400,\n      code: 29,\n    },\n    notAvailable: {\n      message: 'Currently we are not available in your country. Please contact the support team.',\n      httpStatus: 500,\n      code: 30,\n    },\n  },\n  custom: {\n    keyNotFoundInDB: {\n      message: 'No such key found in the system model',\n      httpStatus: 400,\n      code: 11001,\n    },\n    inactiveKeyInDB: {\n      message: 'The key provided is not active at the moment',\n      httpStatus: 400,\n      code: 11002,\n    },\n    invalidDecryptRes: {\n      message: 'The key did not return app ID on Decrypt',\n      httpStatus: 400,\n      code: 11003,\n    },\n    appNotFoundForDecryptId: {\n      message: 'No app associated with decrypted app ID',\n      httpStatus: 400,\n      code: 11004,\n    },\n    tooManyRequests: {\n      message: 'Too many requests made in a short period',\n      httpStatus: 429,\n      code: 11005,\n    },\n  },\n  paymentMethod: {\n    paymentMethodNotFound: {\n      message: 'Payment method not found for the provided ID',\n      httpStatus: 404,\n      code: 12001,\n    },\n    paymentMethodExists: {\n      message: 'Payment method with this name already exists',\n      httpStatus: 409,\n      code: 12002,\n    },\n    paymentMethodAlreadyEnabled: {\n      message: 'Payment method is already enabled',\n      httpStatus: 409,\n      code: 12003,\n    },\n    paymentMethodAlreadyDisabled: {\n      message: 'Payment method is already disabled',\n      httpStatus: 409,\n      code: 12004,\n    },\n    paymentMethodNotAllowed: {\n      message: 'This payment method is not allowed to be enabled',\n      httpStatu\n</code></pre>"},{"location":"API-Reference/KS-Pay-API-Documentation/#sandboxlive-api-error-codes","title":"Sandbox/Live API Error codes","text":"<pre><code>uuidErr: (id: string): ErrorMessage =&gt;\n\nthis.generateErrorMessage(`Invalid ID ${id}`, 400, -3),\n\ninvalidNanoid: (prefix: string, length: number): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`ID must start with '${prefix}' and be ${length} characters long with alphanumeric characters following the prefix.`,\n\n400,\n\n-17,\n\n),\n\ncustomError: (message: string): ErrorMessage =&gt;\n\nthis.generateErrorMessage(message, 400, -17),\n\ndecimalValueAmountError: (decimalValue: number): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`Number should have at most the allowed number of decimal places ie - ${decimalValue}`,\n\n400,\n\n-19,\n\n),\n\ninvalidPaymentMethodIds: (invalidIds: string[]): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`The following payment method IDs does not exist in DB: ${invalidIds.join(', ')}`,\n\n400,\n\n13006,\n\n),\n\nInvalidId: (id: string): ErrorMessage =&gt;\n\nthis.generateErrorMessage(`${id} not present in Request`, 400, -9),\n\nNotFoundUrl: (message: string): ErrorMessage =&gt;\n\nthis.generateErrorMessage(message, 404, -10),\n\nmissingGatewaySpecsKeys: (missingKeys: string[]): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`The following required fields are missing from the provided data: ${missingKeys.join(', ')}`,\n\n400,\n\n-13,\n\n),\n\ninvalidKeyValues: (invalidKeyValues: string[]): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`Invalid keys found for gateway: ${invalidKeyValues.join(', ')}`,\n\n400,\n\n-17,\n\n),\n\ninvalidCredentials: (name: string, currency: string): ErrorMessage =&gt;\n\nthis.generateErrorMessage(\n\n`Invalid credentials for gateway: ${name} for: ${currency}`,\n\n401,\n\n-34,\n\n),\n\nexternalError: (message: string, status: number): ErrorMessage =&gt;\n\nthis.generateErrorMessage(message, status, -11),\n\nauth: {\n\nauthTokenMissing: this.errorMessage('Token missing or incorrect', 400, 9000),\n\nshortUrlTokenMissing: this.errorMessage('ShortUrlToken missing or incorrect', 400, 9001),\n\nauthApiKeyMissing: this.errorMessage('Api Key is Missing', 400, 9002),\n\napiKeyNotGenerated: this.errorMessage('Api Key is not generated!', 400, 9003),\n\nunauthroizedAccess: this.errorMessage('Unauthorized Access', 400, 9004),\n\nunauthroizedApiKey: this.errorMessage('Invalid API key', 400, 9005),\n\nunauthorized: this.errorMessage('Unauthorized! Please provide valid credentials.', 401, 9007),\n\nrefreshTokenExpired: this.errorMessage('Refresh token has expired.', 401, 9008),\n\ntokenExpired: this.errorMessage('Token has expired.', 401, 9009),\n\ninvalidRefreshToken: this.errorMessage('Invalid token.', 401, 9008),\n\n},\n\nsystemError: {\n\nunauthorizedAccess: this.errorMessage(\n\n'You do not have access to edit or fetch the details, kindly contact the administrator.',\n\n404,\n\n23,\n\n),\n\nnoDataFound: this.errorMessage('No data found with this ID!', 404, 24),\n\ninvalidRequest: this.errorMessage('Invalid Request', 400, 25),\n\noopsSomethingWentWrong: this.errorMessage('Oops! Something went wrong', 500, 26),\n\nexternalProviderIssue: this.errorMessage('External Provider issue!', 400, 27),\n\ndbError: this.errorMessage('DB Error', 400, 28),\n\ninvalidApiKey: this.errorMessage('Invalid API key', 400, 29),\n\nnotAvailable: this.errorMessage('Currently, we are not available in your country. Please contact the support team.', 500, 30),\n\ninvalidOrigin: this.errorMessage('Access denied from this origin.', 403, 13007),\n\n},\n\ncustomErrors: {\n\nkeyNotFoundInDB: this.errorMessage('No such key found in the system model', 400, 11001),\n\ninactiveKeyInDB: this.errorMessage('The key provided is not active at the moment', 400, 11002),\n\ninvalidDecryptRes: this.errorMessage('The key did not return app ID on Decrypt', 400, 11003),\n\nappNotFoundForDecryptId: this.errorMessage('No app associated with decrypted app ID', 400, 11004),\n\ntooManyRequests: this.errorMessage('Too many requests made in a short period', 429, 11005),\n\ndatesExceedError: this.errorMessage('Date range exceeds limit! Date range should not exceed 90 days.', 400, 11006),\n\ndateRangeError: this.errorMessage(\"Error: 'fromDate' should be earlier than 'toDate'.\", 400, 11007),\n\nstartDateBeforeAppCreation: this.errorMessage(`The start date cannot be before the app creation date.`, 400, 11008),\n\nstartDateAfterToday: this.errorMessage(\"The start date cannot be after today's date.\", 400, 11009),\n\nstartAndEndDateRequired: this.errorMessage('Both start date and end date are required if one is provided.', 400, 11010),\n\nendDateAfterToday: this.errorMessage(\"The end date cannot be after today's date.\", 400, 11011),\n\n},\n\nkeyVaultErrors: {\n\ncredentialsNotFound: this.errorMessage('Credentials not found for the provided access key', 404, 11001),\n\nappNotFound: this.errorMessage('Application not found for the provided app ID', 404, 11002),\n\nuserDoesNotBelongToApp: this.errorMessage('User does not belong to the specified application', 403, 11003),\n\ninvalidSecretKey: this.errorMessage('Invalid credentials, please check the provided secret key', 400, 11004),\n\nsignatureExpired: this.errorMessage('The provided signature has expired', 400, 11005),\n\ninvalidSignatureFormat: this.errorMessage('The format of the provided signature is invalid', 400, 11006),\n\nencryptionError: this.errorMessage('Error occurred during encryption or decryption', 500, 11007),\n\naccessKeyMismatch: this.errorMessage('Access key does not match any active credentials', 400, 11008),\n\ngeneralVerificationError: this.errorMessage('An error occurred during signature verification', 500, 11009),\n\ncredentialsAlreadyViewed: this.errorMessage('Credentials already viewed or downloaded, try regenerating if lost.', 400, 11010),\n\nappDisabled: this.errorMessage('Application is disabled!', 404, 11011),\n\n},\n\ngatewayErrors: {\n\ngatewayNotFound: this.errorMessage('Gateway not found or is disabled for the provided ID', 404, 13001),\n\ngatewaySpecsNotFound: this.errorMessage('Gateway Specs not found for the provided ID', 404, 13002),\n\ngatewayNameExists: this.errorMessage('Gateway with this name already exists', 409, 13003),\n\ngatewayAlreadyExistForThisUser: this.errorMessage('Gateway with this name already exists for this user', 409, 13004),\n\ninvalidGatewayData: this.errorMessage('Provided data for gateway is invalid', 400, 13005),\n\ngatewayUpdateConflict: this.errorMessage('Gateway with this name already exists, cannot update', 409, 13006),\n\ninvalidCurrencyId: this.errorMessage('Invalid currency ID provided, check if currency is valid or disabled by administration', 400, 13007),\n\ncredentialsNotYetAdded: this.errorMessage('Credentials not yet updated, or step 1 is still pending', 400, 13008),\n\ncredentialStepFailed: this.errorMessage('Step 1 (Credential Status) is in a failed state; cannot update step 2 or step 3.', 400, 13009),\n\nstepAlreadyCompleted: this.errorMessage('Step already in verification state', 400, 13010),\n\nGatewayStatusInVerify: this.errorMessage(\"Gateway is in verification, can't reattempt\", 400, 13011),\n\nGatewayStatusNotVerified: this.errorMessage(\"Gateway is in verification, can't add domain\", 400, 13012),\n\nGatewayStatusNotVerifiedCannotDisable: this.errorMessage(\"Gateway is in verification, can't disable\", 400, 13013),\n\npaymentGatewayCannotBeEdited: this.errorMessage(\"Gateway can't be edited, reattempt the verification process to edit the details\", 400, 13014),\n\n},\n\n};\n\n}\n</code></pre>"},{"location":"API-Reference/KS-Pay-API-Documentation/#api-reference","title":"API Reference","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#server-to-server-s2s-api-flow","title":"Server-to-Server (S2S) API Flow","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#1-generate-token","title":"1. Generate Token","text":"<p>This API generates an access token and refresh token for authentication. The access token is required for subsequent API calls.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request","title":"Request","text":"<p>Method: <code>POST</code></p> <p>URL: <code>{{baseURL}}/auth/generate-token/{{appId}}</code></p> <p>Headers: <pre><code>{\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Body: <pre><code>{\n  \"accessKey\": \"{{accesskey}}\",\n  \"secretKey\": \"{{secretKey}}\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response","title":"Response","text":"<p>Status Code: <code>201 Created</code></p> <p>Body: <pre><code>{\n  \"status\": 201,\n  \"message\": \"success\",\n  \"result\": {\n    \"accessToken\": \"YOUR_ACCESS_TOKEN\",\n    \"refreshToken\": \"YOUR_REFRESH_TOKEN\"\n  }\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description","title":"Description","text":"<ul> <li>Authenticates the user using <code>accessKey</code> and <code>secretKey</code>.</li> <li>Returns an <code>accessToken</code> and <code>refreshToken</code>.</li> <li>The <code>accessToken</code> is short-lived and must be refreshed using the <code>refreshToken</code>.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#2-generate-signature","title":"2. Generate Signature","text":"<p>This API generates a signature for secure API requests.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_1","title":"Request","text":"<p>Method: <code>POST</code></p> <p>URL: <code>{{baseURL}}/auth/generate-signature/{{appId}}</code></p> <p>Headers: <pre><code>{\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Body: <pre><code>{\n  \"accessKey\": \"{{accesskey}}\",\n  \"secretKey\": \"{{secretKey}}\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_1","title":"Response","text":"<p>Status Code: <code>201 Created</code></p> <p>Body: <pre><code>{\n  \"status\": 201,\n  \"message\": \"success\",\n  \"result\": \"GENERATED_SIGNATURE\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_1","title":"Description","text":"<ul> <li>Generates a cryptographic signature using <code>accessKey</code> and <code>secretKey</code>.</li> <li>The signature is used to secure API requests.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#3-generate-refresh-token","title":"3. Generate Refresh Token","text":"<p>This API refreshes the access token using the refresh token.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_2","title":"Request","text":"<p>Method: <code>POST</code></p> <p>URL: <code>{{baseURL}}/auth/refresh-token</code></p> <p>Headers: <pre><code>{\n  \"Authorization\": \"{{r_token}}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Body: <pre><code>{\n  \"accessKey\": \"{{accesskey}}\",\n  \"secretKey\": \"{{secretKey}}\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_2","title":"Response","text":"<p>Status Code: <code>201 Created</code></p> <p>Body: <pre><code>{\n  \"status\": 201,\n  \"message\": \"success\",\n  \"result\": {\n    \"accessToken\": \"NEW_ACCESS_TOKEN\",\n    \"refreshToken\": \"NEW_REFRESH_TOKEN\"\n  }\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_2","title":"Description","text":"<ul> <li>Refreshes the <code>accessToken</code> using the <code>refreshToken</code>.</li> <li>Returns a new <code>accessToken</code> and <code>refreshToken</code>.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#4-fetch-currencies","title":"4. Fetch Currencies","text":"<p>This API retrieves a list of supported currencies.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_3","title":"Request","text":"<p>Method: <code>GET</code></p> <p>URL: <code>{{baseURL}}/currencies</code></p> <p>Headers: <pre><code>{\n  \"Authorization\": \"Bearer {{a_token}}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_3","title":"Response","text":"<p>Status Code: <code>200 OK</code></p> <p>Body: <pre><code>{\n  \"status\": 200,\n  \"message\": \"success\",\n  \"result\": [\n    {\n      \"name\": \"Rupees\",\n      \"code\": \"INR\",\n      \"symbol\": \"Rs\",\n      \"type\": \"FIAT\",\n      \"userId\": \"us_M6jVa85Zb\",\n      \"id\": \"c_WkmEe23LeI\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-08-03T11:57:59.647Z\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_3","title":"Description","text":"<ul> <li>Returns a list of supported currencies, including their codes, symbols, and types.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#5-fetch-payment-methods-for-currency","title":"5. Fetch Payment Methods for Currency","text":"<p>This API retrieves available payment methods for a specific currency.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_4","title":"Request","text":"<p>Method: <code>GET</code></p> <p>URL: <code>{{baseURL}}/{{currencyId}}/payment-methods</code></p> <p>Headers: <pre><code>{\n  \"Authorization\": \"Bearer {{a_token}}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_4","title":"Response","text":"<p>Status Code: <code>200 OK</code></p> <p>Body: <pre><code>{\n  \"status\": 200,\n  \"message\": \"success\",\n  \"result\": [\n    { \"id\": \"pm_Mk55VGvFm\", \"name\": \"NET BANKING\", \"isActive\": true },\n    { \"id\": \"pm_QtgkfiiWb\", \"name\": \"DEBIT CARD\", \"isActive\": true }\n  ]\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_4","title":"Description","text":"<ul> <li>Returns a list of available payment methods for a specific currency.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#6-initiate-transaction","title":"6. Initiate Transaction","text":"<p>This API initiates a payment transaction.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_5","title":"Request","text":"<p>Method: <code>POST</code></p> <p>URL: <code>{{baseURL}}/transaction/initiate</code></p> <p>Headers: <pre><code>{\n  \"x-signature\": \"{{Signature}}\"\n}\n</code></pre></p> <p>Body: <pre><code>{\n  \"currencyId\": \"c_JdzYuwqF6O\",\n  \"paymentMethodId\": \"pm_5LR93Agwv\",\n  \"amount\": 345.67,\n  \"referenceNumber\": \"{{referenceNumber}}\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_5","title":"Response","text":"<p>Status Code: <code>201 Created</code></p> <p>Body: <pre><code>{\n  \"status\": 201,\n  \"message\": \"success\",\n  \"result\": {\n    \"pe_txnId\": \"tx_UOVynlQ0j\",\n    \"providerOrderId\": \"order_P4sEpHDzofjQwV\",\n    \"amount\": 345.67,\n    \"currency\": \"INR\"\n  }\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#7-process-transaction","title":"7. Process Transaction","text":"<p>API Name: Process Transaction</p> <p>Description: Processes the initiated transaction using the generated signature.</p> <p>Endpoint: <pre><code>POST - /transaction/process\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"x-signature\": \"7b452bc7f5adfe1d65e...\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"order\": \"...\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_5","title":"Description","text":"<ul> <li>Initiates a payment transaction.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#8-fetch-transaction-by-id","title":"8. Fetch Transaction by ID","text":"<p>This API retrieves transaction details using its ID.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_6","title":"Request","text":"<p>Method: <code>GET</code></p> <p>URL: <code>{{baseURL}}/transaction/txnId/{{txnId}}</code></p> <p>Headers: <pre><code>{\n  \"Authorization\": \"Bearer {{a_token}}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#response_6","title":"Response","text":"<p>Status Code: <code>200 OK</code></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_6","title":"Description","text":"<ul> <li>Retrieves the details of a transaction using its unique ID.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#9-fetch-all-transactions","title":"9. Fetch All Transactions","text":"<p>This API retrieves all transactions.</p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#request_7","title":"Request","text":"<p>Method: <code>GET</code></p> <p>URL: <code>{{baseURL}}/transaction</code></p> <p>Headers: <pre><code>{\n  \"Authorization\": \"Bearer {{a_token}}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#description_7","title":"Description","text":"<ul> <li>Retrieves a list of all transactions.</li> </ul>"},{"location":"API-Reference/KS-Pay-API-Documentation/#ks-pay-api-sequence-to-use-npm-package","title":"KS-PAY API Sequence to Use NPM Package","text":""},{"location":"API-Reference/KS-Pay-API-Documentation/#1-generate-token_1","title":"1. Generate Token","text":"<p>API Name: Generate Token</p> <p>Description: This API generates an access token and refresh token for authentication.</p> <p>Endpoint: <pre><code>POST - auth/generate-token/{AppID}\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Request Body: <pre><code>{\n  \"accesskey\": \"publicKey\",\n  \"secretKey\": \"secretKey\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"accessToken\": \"...\",\n  \"refreshToken\": \"...\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#2-get-currencies","title":"2. Get Currencies","text":"<p>API Name: Get Available Currencies</p> <p>Description: Retrieves a list of available currencies for transactions.</p> <p>Endpoint: <pre><code>GET - /currencies\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"Authorization\": \"Bearer {accessToken}\"\n}\n</code></pre></p> <p>Response: <pre><code>[\n  { \"currencyId\": \"c_2xqOlqufc3\", \"name\": \"USD\" },\n\n]\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#3-get-payment-methods","title":"3. Get Payment Methods","text":"<p>API Name: Get Payment Methods</p> <p>Description: Retrieves a list of available payment methods for a specific currency.</p> <p>Endpoint: <pre><code>GET - /{currencyId}/payment-methods\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"Authorization\": \"Bearer {accessToken}\"\n}\n</code></pre></p> <p>Response: <pre><code>[\n  { \"paymentMethodId\": \"pm_67NoP7JaQ\", \"name\": \"Credit Card\" },\n\n]\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#4-initiate-transaction","title":"4. Initiate Transaction","text":"<p>API Name: Initiate Transaction</p> <p>Description: Initiates a transaction by specifying currency, payment method, amount, and a reference number.</p> <p>Endpoint: <pre><code>POST - /transaction/initiate\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"Authorization\": \"Bearer {accessToken}\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Request Body: <pre><code>{\n  \"currencyId\": \"c_2xqOlqufc3\",\n  \"paymentMethodId\": \"pm_67NoP7JaQ\",\n  \"amount\": 2,\n  \"referenceNumber\": \"OcrcZcu5z0Az1w2Z\",\n  \"appId\": \"ap_rtk2WdyQR\",\n  \"redirectUrl\": \"your_redirect_url\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"signature\": \"...\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#5-process-transaction","title":"5. Process Transaction","text":"<p>API Name: Process Transaction</p> <p>Description: Processes the initiated transaction using the generated signature.</p> <p>Endpoint: <pre><code>POST - /transaction/process\n</code></pre></p> <p>Request Headers: <pre><code>{\n  \"x-signature\": \"7b452bc7f5adfe1d65e...\",\n  \"Content-Type\": \"application/json\"\n}\n</code></pre></p> <p>Response: <pre><code>{\n  \"order\": \"...\"\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#6-pass-order-object-to-npm-package","title":"6. Pass Order Object to NPM Package","text":"<p>API Name: Pass Order Object</p> <p>Description: Pass the Order object received from the <code>/transaction/process</code> endpoint as a payload to the NPM package.</p> <p>Payload: <pre><code>{\n  \"order\": {\n    // Order object details\n  }\n}\n</code></pre></p>"},{"location":"API-Reference/KS-Pay-API-Documentation/#7-handle-payment-response","title":"7. Handle Payment Response","text":"<p>API Name: Handle Payment Response</p> <p>Description: After the payment is processed, the user will be redirected to the specified <code>redirectUrl</code> with the following parameters:</p> <ul> <li>payment_status: The status of the payment (e.g., \"success\", \"failed\").</li> <li>kspay_id: The unique identifier for the transaction in KS-PAY.</li> <li>provider_payment_id: The unique identifier for the transaction in the payment provider's system.</li> </ul> <p>The user can then decide what to do next, such as making an API call or redirecting to another page.</p> <p>This concludes the API sequence for integrating the KS-PAY payment gateway using the NPM package.</p>"},{"location":"API-Reference/Kalp-Storage-API-Documentation/","title":"Kalp Storage API Documentation","text":"<ul> <li> <p> Kalp Storage API Documentation</p> <p> Check API Reference </p> </li> </ul> <p>Visit the API Documentation - </p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/","title":"Kalp Wallet API Documentation","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#kalp-wallet-openapi-reference","title":"Kalp Wallet OpenAPI Reference","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#general-usage","title":"General Usage","text":"<p>Kalp Wallet OpenAPI provides an API that allows users to create and manage different types of wallets programmatically. The API supports the creation of self-custodial, MPC (Multi-Party Computation), and custodial wallets.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-response-error-codes","title":"Request, Response &amp; Error codes","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-payloads","title":"Request Payloads","text":"<p>The Kalp Wallet API supports the following types of request payloads:</p> <ul> <li> <p>Form-Encoded:  <code>Content-Type: application/x-www-form-urlencoded</code></p> </li> <li> <p>Raw</p> </li> <li> <p>Form Data</p> </li> <li> <p>JSON</p> </li> </ul>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#responses","title":"Responses","text":"<p>Each response payload is encoded into JSON and contains a result indicating success or an error message for failed or rejected requests.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#error-codes","title":"Error Codes","text":"<p>Status codes other than 200 indicate an issue with the request. Here are some common error codes:</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#auth-errors","title":"Auth Errors","text":"<ul> <li> <p>Unauthorized: Un Authorized , Invalid Access Token (Error Code: 1001)</p> </li> <li> <p>API Key Missing: auth Api Key Missing (Error Code: 1002)</p> </li> <li> <p>Max OTP Resend Attempts Exceeded: max Otp Resend Attempts Exceeded (Error Code: 1003)</p> </li> <li> <p>Invalid Phone Number: Please Enter Valid Phone Number (Error Code: 1004)</p> </li> <li> <p>OTP Expired: The OTP you entered has expired. Please request a new OTP to proceed. (Error Code: 1005)</p> </li> <li> <p>Invalid OTP: Please Enter Valid Otp (Error Code: 1006)</p> </li> <li> <p>Unable to Generate API Key: Unable to genrate Api key (Error Code: 1007)</p> </li> </ul>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#wallet-errors","title":"Wallet Errors","text":"<ul> <li> <p>Unsupported Blockchain Request: Invalid Request Blockchain Not Supported Yet (Error Code: 101001)</p> </li> <li> <p>RPC Node Not Found: RPC Node for the blockchain not found (Error Code: 101002)</p> </li> <li> <p>Wallet Address Not Found: wallet Address not found for Current user (Error Code: 101003)</p> </li> <li> <p>Wallet Type Is Self Custodial: wallet Type Is Self Custodial (Error Code: 101004)</p> </li> <li> <p>User Seed Phrase Mnemonics Mismatch: user Seed Phrase Mnemonics Mis Match (Error Code: 101005)</p> </li> <li> <p>Unable to Fetch Blockchain Network: RPC Node for the blockchain not found (Error Code: 101006)</p> </li> <li> <p>MPC Wallet User Shard Is Required: For Mpc Wallet User Shard Is Required , Pass User Shard and userIndentiity in Req Body (Error Code: 101007)</p> </li> <li> <p>No User Hashed Shard Found In DB: no User Hashed Shard Found In DB , Please input correct user Shard or Indentifier (Error Code: 101008)</p> </li> <li> <p>Self Custodial Wallet Seed Phrase Is Required: for Self Custodial Wallet Seed Phrase Is Required , Pass seed Phrase in Req Body (Error Code: 101009)</p> </li> <li> <p>Mnemonics Is Expired: mnemonics/seedPhrase Expired , Kindly Follow Instructions within 10 min (Error Code: 101010)</p> </li> <li> <p>Verify User Detail for MPC: for Mpc First Verfify User Detail from MPC Auth (Error Code: 101011)</p> </li> <li> <p>Seed Phrase Generation Only for Self Custodial Wallet: seed Phrase Generation Can Be Only Done For Self Custodial Wallet (Error Code: 101012)</p> </li> <li> <p>No Transaction ABI Data Found: No Transaction Abi Data Found (Error Code: 101013)</p> </li> <li> <p>MPC Wallet Cannot Send Route Transaction: for Mpc Wallet Can Not Send Route Transaction (Error Code: 101014)</p> </li> <li> <p>MPC Wallet Can Only Have User Shard: mpc Wallet Can Only Have User Shard (Error Code: 101015)</p> </li> <li> <p>MPC Wallet Can Only Be Verified: mpc Wallet Can Only Be Verifed (Error Code: 101016)</p> </li> <li> <p>Invalid API Key User: invalid Api Key ! Only Contract deployed User apiKey is vaild (Error Code: 101017)</p> </li> <li> <p>Only Custodial Wallet Address Can Sign Transaction: only Custodial Wallet Address Can Sign Transaction through Generated Routes (Error Code: 101018)</p> </li> <li> <p>Deployed Smart Contract Address Not Found in DB: deployed Smart Contract Address Not Found in Db (Error Code: 101019)</p> </li> <li> <p>User Auth Credential Already Exists: The social Auth Credential you have entered is already associated with an existing wallet. Please use a different one create a new MPC wallet or log in to your existing wallet. (Error Code: 101020)</p> </li> <li> <p>Invalid Credentials: Invalid credentials or access denied. Please check your credentials and try again. (Error Code: 101021).</p> </li> </ul>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#authentication","title":"Authentication","text":"<p>Authentication is handled via API key middleware guards. The API key ensures that the request is from a valid user with the correct permissions.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#steps-to-authenticate","title":"Steps to Authenticate","text":"<ol> <li> <p>Obtain API Key: Request an API key from the Kalp Wallet interface.</p> </li> <li> <p>Include API Key in Request: Use the API key in the headers of your API requests.</p> </li> </ol>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#example-authentication-header","title":"Example Authentication Header","text":"<pre><code>Authorization: Bearer YOUR_API_KEY\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#faq","title":"FAQ","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#general-faq","title":"General FAQ","text":"<p>Q1: What types of wallets can I create using the Kalp Wallet API? A1: You can create self-custodial, MPC (Multi-Party Computation), and custodial wallets using the Kalp Wallet API.</p> <p>Q2: What formats are supported for request payloads? A2: The Kalp Wallet API supports form-encoded (<code>Content-Type: application/x-www-form-urlencoded</code>), raw, form data, and JSON formats for request payloads.</p> <p>Q3: How are responses formatted? A3: Each response payload is encoded into JSON and contains either a successful result or an error message for failed or rejected requests.</p> <p>Q4: How is authentication handled? A4: Authentication is managed through API key middleware guards. The API key ensures that the request is from a valid user with the correct permissions.</p> <p>Q5: What should I do if I encounter an error code? A5: If you encounter an error code, refer to the detailed list of authentication and wallet errors provided. Each error code includes a description to help you understand the issue and how to resolve it.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#authentication-faq","title":"Authentication FAQ","text":"<p>Q6: What does the error \"Un Authorized , Invalid Access Token\" mean? A6: This error (Error Code: 1001) means that the access token provided is invalid. Ensure you are using a valid and authorized access token.</p> <p>Q7: What should I do if I receive the \"auth Api Key Missing\" error? A7: This error (Error Code: 1002) indicates that the API key is missing from your request. Ensure you include a valid API key in your request headers.</p> <p>Q8: What does \"max Otp Resend Attempts Exceeded\" mean? A8: This error (Error Code: 1003) occurs when you have exceeded the maximum number of OTP resend attempts. Wait for some time before requesting a new OTP.</p> <p>Q9: Why am I getting the \"Please Enter Valid Phone Number\" error? A9: This error (Error Code: 1004) indicates that the phone number entered is invalid. Ensure you enter a valid phone number.</p> <p>Q10: What does \"The OTP you entered has expired\" mean? A10: This error (Error Code: 1005) means that the OTP you entered has expired. Request a new OTP to proceed.</p> <p>Q11: What should I do if I get the \"Please Enter Valid Otp\" error? A11: This error (Error Code: 1006) indicates that the OTP entered is invalid. Ensure you enter the correct OTP sent to your phone or email.</p> <p>Q12: What does \"Unable to generate API key\" mean? A12: This error (Error Code: 1007) means that there was an issue generating the API key. Try again later or contact support for assistance.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#wallet-faq","title":"Wallet FAQ","text":"<p>Q13: What does the error \"Invalid Request Blockchain Not Supported Yet\" mean? A13: This error (Error Code: 101001) indicates that the requested blockchain is not supported by Kalp Wallet. Ensure you are requesting a supported blockchain.</p> <p>Q14: Why am I getting the \"RPC Node for the blockchain not found\" error? A14: This error (Error Code: 101002) means that the RPC node for the requested blockchain could not be found. Check your blockchain configuration.</p> <p>Q15: What does \"wallet Address not found for Current user\" mean? A15: This error (Error Code: 101003) indicates that the wallet address for the current user could not be found. Ensure the wallet address is correct and exists.</p> <p>Q16: What should I do if I see the \"wallet Type Is Self Custodial\" error? A16: This error (Error Code: 101004) means that the wallet type specified is self-custodial. Ensure you are handling the wallet type correctly.</p> <p>Q17: What does \"user Seed Phrase Mnemonics Mis Match\" mean? A17: This error (Error Code: 101005) indicates that the user seed phrase mnemonics do not match. Ensure the seed phrase is entered correctly.</p> <p>Q18: Why am I getting the \"RPC Node for the blockchain not found\" error again? A18: This error (Error Code: 101006) means the RPC node for the blockchain could not be fetched. Verify the blockchain network configuration.</p> <p>Q19: What does \"For Mpc Wallet User Shard Is Required\" mean? A19: This error (Error Code: 101007) indicates that a user shard is required for MPC wallet creation. Pass the user shard and user identity in the request body.</p> <p>Q20: What should I do if I get the \"no User Hashed Shard Found In DB\" error? A20: This error (Error Code: 101008) means that the user hashed shard could not be found in the database. Ensure you input the correct user shard or identifier.</p> <p>Q21: What does \"for Self Custodial Wallet Seed Phrase Is Required\" mean? A21: This error (Error Code: 101009) indicates that a seed phrase is required for self-custodial wallet creation. Pass the seed phrase in the request body.</p> <p>Q22: What does \"mnemonics/seedPhrase Expired\" mean? A22: This error (Error Code: 101010) means that the mnemonics or seed phrase has expired. Follow the instructions and complete the process within the specified time frame.</p> <p>Q23: What should I do if I see the \"for Mpc First Verify User Detail\" error? A23: This error (Error Code: 101011) indicates that you need to verify user details from MPC Auth before proceeding. Complete the verification step.</p> <p>Q24: What does \"seed Phrase Generation Can Be Only Done For Self Custodial Wallet\" mean? A24: This error (Error Code: 101012) indicates that seed phrase generation is only applicable for self-custodial wallets. Ensure you are using the correct wallet type.</p> <p>Q25: Why am I getting the \"No Transaction Abi Data Found\" error? A25: This error (Error Code: 101013) means that no transaction ABI data could be found. Verify the transaction details.</p> <p>Q26: What does \"for Mpc Wallet Can Not Send Route Transaction\" mean? A26: This error (Error Code: 101014) indicates that MPC wallets cannot send route transactions. Ensure the transaction type is supported.</p> <p>Q27: What should I do if I get the \"mpc Wallet Can Only Have User Shard\" error? A27: This error (Error Code: 101015) means that MPC wallets can only have user shards. Verify the wallet configuration.</p> <p>Q28: What does \"mpc Wallet Can Only Be Verified\" mean? A28: This error (Error Code: 101016) indicates that MPC wallets can only be verified. Complete the verification process.</p> <p>Q29: What does \"invalid Api Key ! Only Contract deployed User apiKey is valid\" mean? A29: This error (Error Code: 101017) means that the API key is invalid. Only the API key of the user who deployed the contract is valid.</p> <p>Q30: Why am I getting the \"only Custodial Wallet Address Can Sign Transaction through Generated Routes\" error? A30: This error (Error Code: 101018) means that only custodial wallet addresses can sign transactions through generated routes. Ensure you are using the correct wallet type.</p> <p>Q31: What does \"deployed Smart Contract Address Not Found in DB\" mean? A31: This error (Error Code: 101019) indicates that the deployed smart contract address could not be found in the database. Verify the smart contract address.</p> <p>Q32: What should I do if I see the \"user Auth Credential Already Exists\" error? A32: This error (Error Code: 101020) means that the social auth credential entered is already associated with an existing wallet. Use a different credential to create a new MPC wallet or log in to the existing wallet.</p> <p>Q33: Why am I getting the \"Invalid credentials or access denied\" error? A33: This error (Error Code: 101021) indicates that the credentials are invalid or access is denied. Check your credentials and try again.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-reference","title":"API Reference","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#1-generate-mnemonics","title":"1. Generate mnemonics","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/wallet/create-mnemonics</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description","title":"Description","text":"<p>This endpoint generates a new seed phrase for a self-custodial wallet. The seed phrase must be securely stored by the user, as it is essential for wallet recovery and access.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters","title":"Body Parameters","text":"<p>blockchain</p> <p>Specifies the blockchain on which the wallet will be created. Example values include ETH for Ethereum.</p> <p>Example: <code>\"ETH\"</code></p> <p>network</p> <p>Specifies the network of the blockchain to be used. Example values include SEPOLIA, which is a test network for Ethereum.</p> <p>Example: <code>\"SEPOLIA\"</code></p> <p>userId</p> <p>A unique identifier for the user requesting the wallet creation. This ID is used to associate the wallet with the user.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p> <p>walletType</p> <p>Specifies the type of wallet to be created. Example values include SELF_CUSTODIAL for a self-custodial wallet where the user controls the private keys. Example: <code>\"SELF_CUSTODIAL\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example","title":"Request Example","text":"<pre><code>{\n\n\"network\": \"SEPOLIA\",\n\n\"blockchain\": \"ETH\",\n\n\"walletType\": \"SELF_CUSTODIAL\",\n\n\"userId\": \"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example","title":"Response Example","text":"<p>Create seed phrase <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": \"lab narrow wheel picture plastic minimum cradle swear auto snow hover limit\"\n}\n</code></pre></p> <p>Self Custodial <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": \"key better reunion pact real soap cream fish basic crumble globe diagram\"\n}\n</code></pre></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#2-create-wallet","title":"2. Create Wallet","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_1","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/wallet/create-wallet</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_1","title":"Description","text":"<p>This endpoint allows users to create a new wallet. Users can choose between self-custodial, MPC, and custodial wallets. The request must include necessary details such as the wallet type and user information.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_1","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_1","title":"Body Parameters","text":"<p>blockchain</p> <p>Specifies the blockchain on which the wallet will be created. Example values include <code>ETH</code> for Ethereum.</p> <p>Example: <code>\"ETH\"</code></p> <p>mnemonics</p> <p>A seed phrase used for generating a self-custodial wallet. This should be kept secure and confidential.</p> <p>Example: <code>\"draw double tape end sibling rug armed have feed dumb mail latin\"</code></p> <p>network</p> <p>Specifies the network of the blockchain to be used. Example values include <code>testnet</code>, which is a test network for blockchain.</p> <p>Example: <code>\"testnet \"</code></p> <p>walletType</p> <p>Specifies the type of wallet to be created. Example values include <code>SELF_CUSTODIAL</code> for a self-custodial wallet where the user controls the private keys.</p> <p>Example: <code>\"SELF_CUSTODIAL\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_1","title":"Request example","text":"<p>Here update the network blockchain &amp; wallet type as per your need</p> <p>Following is the kalp MPC wallet request example <pre><code>{\n\n\"network\" : \"TESTNET\",\n\n\"blockchain\" : \"KALP\",\n\n\"walletType\" : \"MPC\",\n\n// \"mnemonic\" : \"badge dinner nephew version staff keen candy thank primary loop edge gun\",\n\n\"userId\" : \"709d7259-5b09-4252-9fa9-2a1f1ddae5b8\"\n\n}\n</code></pre></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_1","title":"Response example","text":"<p>Kalp custodial</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"e1fc14fa8faff3880395a65773db47b577fc04ca\",\n        \"CSRcertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDYTCCAwigAwIBAgIUbAt0PKD+xAHvMnFsrqBh4g1PGEQwCgYIKoZIzj0EAwIw\\ngbIxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhEZWxhd2FyZTFQME4GA1UEBxNHUDJF\\nIExBQlMgTExDICAxMDA3IE4gT3JhbmdlIFN0LiA0dGggRmxvb3IgU3RlIDEzODIg\\nV2lsbWluZ3RvbiBVLlMgMTk4MDExETAPBgNVBAoTCE1BSSBMYWJzMQ8wDQYDVQQL\\nEwZjbGllbnQxGjAYBgNVBAMTEW1haWxhYnMtaW50LWFkbWluMB4XDTI0MDUyNzEy\\nMDcwMFoXDTI1MDgzMDEwMTQwMFowgb0xCzAJBgNVBAYTAklOMRYwFAYDVQQIEw1Z\\nb3VyIFByb3ZpbmNlMRYwFAYDVQQHEw1Zb3VyIExvY2FsaXR5MRowGAYDVQQKExFZ\\nb3VyIE9yZ2FuaXphdGlvbjEvMA0GA1UECxMGY2xpZW50MA4GA1UECxMHY2xpZW50\\nczAOBgNVBAsTB21haWxhYnMxMTAvBgNVBAMTKGUxZmMxNGZhOGZhZmYzODgwMzk1\\nYTY1NzczZGI0N2I1NzdmYzA0Y2EwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAST\\nb4iHSrR+17A0OUlHcuonrpGZ0shdOeu/vloVKsWCpVD9q0R9KIlXCd2kl3K44Pjo\\nklJPcPy9kY9i6Hsax17eo4HuMIHrMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E\\nAjAAMB0GA1UdDgQWBBTfnTC78EeZiIyp3i06h01nKQw4+TAfBgNVHSMEGDAWgBQP\\nomAYvecJRvp4yFWVdUYay/PaaTCBigYIKgMEBQYHCAEEfnsiYXR0cnMiOnsiaGYu\\nQWZmaWxpYXRpb24iOiJtYWlsYWJzLmNsaWVudHMiLCJoZi5FbnJvbGxtZW50SUQi\\nOiJlMWZjMTRmYThmYWZmMzg4MDM5NWE2NTc3M2RiNDdiNTc3ZmMwNGNhIiwiaGYu\\nVHlwZSI6ImNsaWVudCJ9fTAKBggqhkjOPQQDAgNHADBEAiBVZH739bXWNLQP1js5\\nnkexdg6lSzyix9Qi+GO85/cX4gIgcyeJE3jMMb/547/Sa5yMCEJnlZxWJmSa+V+O\\ngcogayI=\\n-----END CERTIFICATE-----\\n\",\n        \"publicKey\": \"-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEk2+Ih0q0ftewNDlJR3LqJ66RmdLIXTnrv75aFSrFgqVQ/atEfSiJVwndpJdyuOD46JJST3D8vZGPYuh7Gsde3g==\\n-----END PUBLIC KEY-----\\n\"\n    }\n}\n</code></pre> <p>ETH Custodial</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"0xa0a3367ef9A9f8A956B57AC77723538d302F2fbE\",\n        \"balance\": \"0.0\",\n        \"publicKey\": \"0x04b1b526984c10efc45568f153182677eaf7bf2b52446bd6e83f3e15a67ffddd2f95ba100128277cf7e7064b011cb78a4dd409cef29583521f0ee1c8d039367011\"\n    }\n}\n</code></pre> <p>ETH Self-Custodial</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"0xB9833da5f14F8E9D22e8BEB9a7a27c758827a8b9\",\n        \"privateKey\": \"0xa7b5e77d3776b8f73390a1e32d6e9febabe2e7147c3eb554ef3368f3ae4054b0\",\n        \"balance\": \"0.0\",\n        \"publicKey\": \"0x0424b672e0080d09ffdad238ca34cb1c640a75deae9c5510ca14b1e1660544a5a82d543e30895b85014e25f7229a5ec67dd4a5b0e75092def27a330d6327092cd7\"\n    }\n}\n</code></pre> <p>Kalp Self-Custodial</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"77a1b6e7e250f5fe22082ace1e5ce88eadee1439\",\n        \"CSRcertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDYjCCAwigAwIBAgIUQuEY1t1KvtW8+GRWi5tu0+4z6O4wCgYIKoZIzj0EAwIw\\ngbIxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhEZWxhd2FyZTFQME4GA1UEBxNHUDJF\\nIExBQlMgTExDICAxMDA3IE4gT3JhbmdlIFN0LiA0dGggRmxvb3IgU3RlIDEzODIg\\nV2lsbWluZ3RvbiBVLlMgMTk4MDExETAPBgNVBAoTCE1BSSBMYWJzMQ8wDQYDVQQL\\nEwZjbGllbnQxGjAYBgNVBAMTEW1haWxhYnMtaW50LWFkbWluMB4XDTI0MDUyNzEy\\nMDcwMFoXDTI1MDgzMDEwMTgwMFowgb0xCzAJBgNVBAYTAklOMRYwFAYDVQQIEw1Z\\nb3VyIFByb3ZpbmNlMRYwFAYDVQQHEw1Zb3VyIExvY2FsaXR5MRowGAYDVQQKExFZ\\nb3VyIE9yZ2FuaXphdGlvbjEvMA0GA1UECxMGY2xpZW50MA4GA1UECxMHY2xpZW50\\nczAOBgNVBAsTB21haWxhYnMxMTAvBgNVBAMTKDc3YTFiNmU3ZTI1MGY1ZmUyMjA4\\nMmFjZTFlNWNlODhlYWRlZTE0MzkwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQL\\nh9oY2EMm5zUf8omsfsh8Vb0wZpPyKertfh9oNVPLK7ch10WKQbHg6cKQeVTKR2Oo\\nDhM4mkpHwseyw01LIQBTo4HuMIHrMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E\\nAjAAMB0GA1UdDgQWBBQctJcjndzm3M0AMq6ymwACKGMgIzAfBgNVHSMEGDAWgBQP\\nomAYvecJRvp4yFWVdUYay/PaaTCBigYIKgMEBQYHCAEEfnsiYXR0cnMiOnsiaGYu\\nQWZmaWxpYXRpb24iOiJtYWlsYWJzLmNsaWVudHMiLCJoZi5FbnJvbGxtZW50SUQi\\nOiI3N2ExYjZlN2UyNTBmNWZlMjIwODJhY2UxZTVjZTg4ZWFkZWUxNDM5IiwiaGYu\\nVHlwZSI6ImNsaWVudCJ9fTAKBggqhkjOPQQDAgNIADBFAiEAjD5HuOVfEM7DNEjw\\nW6EZMtWxFiy52lTjlLSXbzwDFoUCIA42NyhrMqk6lLP3mqdHciG1BEQE19M8TCWQ\\nvri58dtJ\\n-----END CERTIFICATE-----\\n\",\n        \"publicKey\": \"-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEC4faGNhDJuc1H/KJrH7IfFW9MGaT8inq7X4faDVTyyu3IddFikGx4OnCkHlUykdjqA4TOJpKR8LHssNNSyEAUw==\\n-----END PUBLIC KEY-----\\n\",\n        \"pemPrivateKey\": \"-----BEGIN PRIVATE KEY-----\\r\\nMEECAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcEJzAlAgEBBCA5P45UoCw+EI4BCj55\\r\\n5MmHSUJXL99DTQH+h5ArrDjhYw==\\r\\n-----END PRIVATE KEY-----\\r\\n\"\n    }\n}\n</code></pre> <p>KALP MPC Wallet</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"57c1dcf7688ae0945de233e750d56c65d3108a16\",\n        \"userShard\": \"CAFUVRQ4YmQjoBb0qxVbE/1pq4gHg/0jLsR7INzbhTWY7ar511s59ApwNBY6E+etdRuFEWogEpodInQyplLHA1IQ09+tzTXdcANVlueorsaQ4mbEyZuWH0Xg6pWigMZBzRK8AxIHGLXeG97A/Y3iCleSz7lJ0Hs3S07dxZ5Qh2BVuduV5pudLGuNtLCq85aQVizdajWyMejJ1bjJyQHs//TYW7zhLhbmeUjg1B72jFMOnHrQ6F9lJOLECzf3xKa55BMgbfWwCK7P4Go3XUBuTdSKWCUPKNn6+b0u6MoPd4/fgMCbrQ+iDcrVMGeRpWDSilnVZuZtpKAu7EdTdOjCbd1JygjtsdW3NkcUHQpR05nJrznBynVkx7x1YvrpvmD4BMXTbnWg/qGpQw8JWwruSFadAMG1x+JgGsV7Kp+UhIf4ig==\",\n        \"CSRcertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDYTCCAwigAwIBAgIUTqmH3QRGmHHf7UUs4AOiSqkTIxIwCgYIKoZIzj0EAwIw\\ngbIxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhEZWxhd2FyZTFQME4GA1UEBxNHUDJF\\nIExBQlMgTExDICAxMDA3IE4gT3JhbmdlIFN0LiA0dGggRmxvb3IgU3RlIDEzODIg\\nV2lsbWluZ3RvbiBVLlMgMTk4MDExETAPBgNVBAoTCE1BSSBMYWJzMQ8wDQYDVQQL\\nEwZjbGllbnQxGjAYBgNVBAMTEW1haWxhYnMtaW50LWFkbWluMB4XDTI0MDUyNzEy\\nMDcwMFoXDTI1MDgzMDEwMjIwMFowgb0xCzAJBgNVBAYTAklOMRYwFAYDVQQIEw1Z\\nb3VyIFByb3ZpbmNlMRYwFAYDVQQHEw1Zb3VyIExvY2FsaXR5MRowGAYDVQQKExFZ\\nb3VyIE9yZ2FuaXphdGlvbjEvMA0GA1UECxMGY2xpZW50MA4GA1UECxMHY2xpZW50\\nczAOBgNVBAsTB21haWxhYnMxMTAvBgNVBAMTKDU3YzFkY2Y3Njg4YWUwOTQ1ZGUy\\nMzNlNzUwZDU2YzY1ZDMxMDhhMTYwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATb\\nCOH7H5rNoKMB+8cjMsYypzJxXRxW1souGpKbOikqmoqabzkpDapFPN4iZyJmNRZP\\nJcvP4YTwA0kgalrgKMHKo4HuMIHrMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8E\\nAjAAMB0GA1UdDgQWBBR3TN7Mn1nQ/RAAdaBvFIBkdmCujzAfBgNVHSMEGDAWgBQP\\nomAYvecJRvp4yFWVdUYay/PaaTCBigYIKgMEBQYHCAEEfnsiYXR0cnMiOnsiaGYu\\nQWZmaWxpYXRpb24iOiJtYWlsYWJzLmNsaWVudHMiLCJoZi5FbnJvbGxtZW50SUQi\\nOiI1N2MxZGNmNzY4OGFlMDk0NWRlMjMzZTc1MGQ1NmM2NWQzMTA4YTE2IiwiaGYu\\nVHlwZSI6ImNsaWVudCJ9fTAKBggqhkjOPQQDAgNHADBEAiAisX+8xMTr8ftiv/Nx\\naNDHfAWBuu54G/FiK4cw2cG56AIgTHolExB6QaL+Vo9+Bmsns7WOlX6t7ydnnJu6\\n2UJz0/c=\\n-----END CERTIFICATE-----\\n\",\n        \"publicKey\": \"-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2wjh+x+azaCjAfvHIzLGMqcycV0cVtbKLhqSmzopKpqKmm85KQ2qRTzeImciZjUWTyXLz+GE8ANJIGpa4CjByg==\\n-----END PUBLIC KEY-----\\n\"\n    }\n}\n</code></pre> <p>ETH MPC Wallet</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"address\": \"0x65A0fA104d569Bc1f6955784C02bA0ca9c9Ee081\",\n        \"userShard\": \"CAGAoT8lCi8X85CS9XUUsIRP7WnShfmKDc77WqTCMyn9ZWhJN+GvBFqGVk8dMvEQD0mWkUUzjhcTkdUs0ReYXLAIBao9Mr/i8LHxNgwupY5bEdaMmjSQMQG8yMKkf3WovYCsBWHpVMykueLaKxU/wYEC1ko0Rb/7e5BleY4ykPA+Kvf7lWyx4cCmZ9C/ma1qllw=\",\n        \"balance\": \"0.0\",\n        \"publicKey\": \"0x04eaa83117f36750f18f10c7118472f2dfef7ba148b5431a70148f15d316fa202c0f466bf54c49f0b38e788b90dfe424aeff6c578ec55c65ca22f1f9103d012481\"\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#3-mpc-o-auth-verify","title":"3. MPC O Auth Verify","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_2","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/google/verify</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_2","title":"Description","text":"<p>This endpoint is used to verify user details through the MPC (Multi-Party Computation) OAuth process. It ensures that the user's identity and permissions are validated before proceeding with wallet creation or other sensitive operations.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_2","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_2","title":"Body Parameters","text":"<p>subId</p> <p>The subscription ID associated with the MPC O Auth verification request.</p> <p>Example: <code>\"sdjdafnaknffdafdafdafdafda\"</code></p> <p>userId</p> <p>The unique identifier for the user making the MPC O Auth verification request.</p> <p>Example: <code>\"9c1d4102-650f-47f5-bc34-222960cdad7d\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_2","title":"Request Example","text":"<pre><code>{\n\n\"subId\" : \"sdjjkhgjkgjjfdafnaknffdafdafddgdgdgdafdafda\",\n\n\"userId\" : \"ee818885-3962-4018-91cd-67c92070ce5b\",\n\n\"type\" : \"verify\"\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_2","title":"Response Example","text":"<pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"o_auth is verified\"\n        }\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#4-send-email-otp","title":"4. Send email OTP","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_3","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/email/send</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_3","title":"Description","text":"<p>This endpoint sends a One-Time Password (OTP) to the specified email address. The OTP is used for verifying the user's email during the registration or authentication process.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_3","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_3","title":"Body parameters","text":"<p>email</p> <p>The email address to which the OTP will be sent.</p> <p>Example: <code>\"jayantk7722@gmail.com\"</code></p> <p>userId</p> <p>The unique identifier for the user requesting the OTP.</p> <p>Example: <code>\"709d7259-5b09-4252-9fa9-2a1f1ddae5b6\"</code></p> <p>otp</p> <p>The OTP code sent to the user's email that needs to be verified.</p> <p>Example: <code>\"998707\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_3","title":"Request Example","text":"<pre><code>{\n\n\"email\" : \"jayantk7722@gmail.com\",\n\n\"userId\" : \"709d7259-5b09-4252-9fa9-2a1f1ddae5b6\",\n\n\"type\" : \"verify\"\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_3","title":"Response Example","text":"<p>Send email OTP</p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"Email OTP is sent\"\n        }\n    }\n}\n</code></pre> <p>MPC Wallet </p> <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"Email OTP is sent\"\n        }\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#5-verify-email-otp","title":"5. Verify email OTP","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_4","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/email/verify</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_4","title":"Description","text":"<p>This endpoint verifies the OTP that was sent to the user's email. It ensures that the email address is valid and belongs to the user, completing the email verification process.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_4","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_4","title":"Body parameters","text":"<p>email</p> <p>The email address to which the OTP was sent and is being verified.</p> <p>Example: <code>\"jayantk7722@gmail.com\"</code></p> <p>otp</p> <p>The OTP code sent to the user's email that needs to be verified.</p> <p>Example: <code>\"913707\"</code></p> <p>userId</p> <p>The unique identifier for the user whose email is being verified.</p> <p>Example: <code>\"709d7259-5b09-4252-9fa9-2a1f1ddae5b6\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_4","title":"Request Example","text":"<pre><code>{\n\n\"email\" : \"jayantk7722@gmail.com\",\n\n\"otp\" : \"5881\",\n\n\"userId\" : \"709d7259-5b09-4252-9fa9-2a1f1ddae5b6\",\n\n\"type\" : \"verify\"\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_4","title":"Response Example","text":"<p>Verify Email OTP <pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"Email OTP is verified\"\n        }\n    }\n}\n</code></pre></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#6-send-phone-sms","title":"6. Send phone SMS","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_5","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/phone/send</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_5","title":"Description","text":"<p>This endpoint sends a One-Time Password (OTP) via SMS to the specified phone number. The OTP is used for verifying the user's phone number during the registration or authentication process.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_5","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_5","title":"Body parameters","text":"<p>countryCode</p> <p>The country code for the phone number, without the '+' sign.</p> <p>Example: <code>\"91\"</code></p> <p>phone</p> <p>The phone number to which the SMS will be sent.</p> <p>Example: <code>\"7011094328\"</code></p> <p>userId</p> <p>The unique identifier for the user requesting the SMS.</p> <p>Example: <code>\"aac40ea5-8218-4634-8a85-9446236d47ce\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_5","title":"Request Example","text":"<pre><code>{\n\n\"countryCode\": \"91\",\n\n\"phone\": \"7011094328\",\n\n\"userId\": \"aac40ea5-8218-4634-8a85-9446236d47ce\"\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_5","title":"Response Example","text":"<pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"Phone OTP is sent\"\n        }\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#7-verify-phone-otp","title":"7. Verify phone OTP","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_6","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/phone/verify</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_6","title":"Description","text":"<p>This endpoint verifies the OTP that was sent to the user's phone number via SMS. It ensures that the phone number is valid and belongs to the user, completing the phone verification process.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_6","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_6","title":"Body parameters","text":"<p>countryCode</p> <p>The country code for the phone number, without the '+' sign.</p> <p>Example: <code>\"91\"</code></p> <p>otp</p> <p>The OTP code sent to the user's phone that needs to be verified.</p> <p>Example: <code>\"319239\"</code></p> <p>phone</p> <p>The phone number to which the OTP was sent and is being verified.</p> <p>Example: <code>\"7011094328\"</code></p> <p>userId</p> <p>The unique identifier for the user whose phone number is being verified.</p> <p>Example: <code>\"aac40ea5-8218-4634-8a85-9446236d47ce\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_6","title":"Request Example","text":"<pre><code>{\n    \"countryCode\": \"91\",\n    \"phone\": \"7011094328\",\n    \"otp\" : \"0917\",\n    \"userId\": \"aac40ea5-8218-4634-8a85-944665756d47ce\",\n     \"type\" : \"verify\"\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_6","title":"Response Example","text":"<pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"message\": \"Phone OTP is verified\"\n        }\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#8-mpc-verify","title":"8. MPC Verify","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_7","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/auth/mpc/verify</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_7","title":"Description","text":"<p>This endpoint verifies user details necessary for MPC (Multi-Party Computation) wallet operations. It ensures that the user's identity and permissions are validated, enabling secure and authorized interactions with the MPC wallet.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_7","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_7","title":"Body parameters","text":"<p>isInternalWallet</p> <p>A flag indicating whether the wallet is an internal wallet (true) or an external wallet (false).</p> <p>Example: <code>false</code></p> <p>userId</p> <p>The unique identifier for the user requesting the MPC verification.</p> <p>Example: <code>\"e4ccf0d3-5db9-4d65-a8dc-d48a2611781a\"</code></p> <p>userIndentifier</p> <p>A unique identifier associated with the user for the MPC verification process.</p> <p>Example: <code>\"sdjdafnaknffddeafdafdafdafda\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_7","title":"Request Example","text":"<pre><code>{\n\n\"userIndentifier\" : \"sdjdafnaknffddeafdafdafdafda\",\n\n\n\n\"userId\": \"e4ccf0d3-5db9-4d65-a8dc-d48a2611781a\",\n\n\n\n\"isInternalWallet\" : false\n\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_7","title":"Response Example","text":"<pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"status\": {\n            \"success\": true,\n            \"userShard\": \"CAENX3j7ccEeg25p9GfxGaIe/UQFcg1NdIHGEhYLQViU4cxTWsF6FE+Ckpd0xUKksEozaewYRUAlDuhcATkRg8MV1wDl8eM/P3oB78spEBJab6Z4ZOlE0ZEtkcSISXEU6Fzvl/tNG3TalNGevlyaVTJgD//3uVUhh0z/rA7o7GtpPR5Aw9a4dxJJnqWryFhrsFM=\",\n            \"userIndentifier\": \"sdjdafnaknffddeafdafdafdafda\",\n            \"AuthType\": \"GOOGLE\"\n        }\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#9-send-contract-deploy-request","title":"9. Send Contract Deploy Request","text":""},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#api-method-url_8","title":"API Method &amp; URL","text":"<p>Method - POST</p> <p>URL - https://wallet-api.kalp.studio/wallet/send-contract-deploy-request</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#description_8","title":"Description","text":"<p>This API endpoint is used to deploy a smart contract to a specified blockchain network. It accepts the contract file and deployment details as input parameters.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#header-parameters_8","title":"Header parameters","text":"<p>apikey </p> <p>A unique API key assigned to the user for authentication and authorization of API requests.</p> <p>Example: <code>\"31a057fa-a9eb-4527-b3df-b7a6f79fab6c\"</code></p> <p>contentype</p> <p>Specifies the content type</p> <p>Example: <code>\"multipart/form-data\"</code></p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#body-parameters_8","title":"Body parameters","text":"<p>blockchain</p> <p>The blockchain network to deploy the contract on (e.g., <code>POLY</code>, <code>ETH</code>).</p> <p>address</p> <p>The wallet address used for deploying the contract.</p> <p>solFile</p> <p>The Solidity file containing the smart contract code to be deployed.</p> <p>userShard</p> <p>A unique shard identifier for the user.</p> <p>userIdentity</p> <p>An optional identity string for the user.</p>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#request-example_8","title":"Request Example","text":"<pre><code>\"Authorization: Bearer YOUR_ACCESS_TOKEN\" \n\"Content-Type: multipart/form-data\" \n\"blockchain=POLY\"\n\"address=0xb4295b46DA1d9460419a1487b838CBA...\"  \"solFile=@MultiContractFunc.sol\" \"userShard=CAG26qxJo/WnzfqI8POPeEILG4ieRyUm...\" \"userIdentity=sdjdafnaknfffdafdafdafda\"\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#response-example_8","title":"Response Example","text":"<pre><code>{\n    \"status\": 200,\n    \"message\": \"success\",\n    \"result\": {\n        \"blockchain\": \"POLY\",\n        \"transactionType\": \"CONTRACT_DEPLOYMENT\",\n        \"fromAddress\": \"0xb4295b46DA1d9460419a1487b838CB776b5B2068\",\n        \"toAddress\": \"0x240fADAdD962171E7633Fa4EE4b0da5E0Ea0529A\",\n        \"transactionHash\": \"0xd1aecffc30b47d5a5e3807440783f597f55325ee7161242c1f4f6581825dc8a4\",\n        \"blockchainUrl\": \"https://www.oklink.com/amoy/tx/0xd1aecffc30b47d5a5e3807440783f597f55325ee7161242c1f4f6581825dc8a4\",\n        \"network\": \"AMOY\",\n        \"status\": \"COMPLETED\",\n        \"gasUsed\": 407396,\n        \"gasPrice\": 25.000000015,\n        \"contractAddress\": \"0x240fADAdD962171E7633Fa4EE4b0da5E0Ea0529A\",\n        \"contractName\": \"MultiFunctionContract\"\n    }\n}\n</code></pre>"},{"location":"API-Reference/Kalp-Wallet-API-Documentation/#feedback","title":"Feedback","text":"<p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/","title":"Smart contract & Go Lang SDK","text":""},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#smart-contract-and-kalp-golang-sdk","title":"Smart contract and KALP Golang SDK","text":""},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#a-guide-to-smart-contracts-and-kalp-golang-sdk","title":"A Guide to Smart Contracts and KALP Golang SDK","text":"<p>Smart contracts are revolutionizing the way we manage agreements and transactions. Just like traditional contracts, they lay out the terms of a deal. But what makes smart contracts different\u2014and \"smart\"\u2014is that they don\u2019t rely on paper or lawyers. Instead, they exist as code running on a blockchain. This means they can securely automate virtually any kind of deal or transaction, with no need for a middleman like a bank or a lawyer.</p> <p>Let\u2019s explore how smart contracts work and how the KALP Golang SDK can help you build powerful decentralized applications (dApps) using smart contracts.</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#what-is-a-smart-contract","title":"What is a Smart Contract?","text":"<p>A smart contract is a self-executing piece of code that enforces the terms of an agreement automatically. Think of it like a vending machine: you insert money, select your item, and the machine either gives you the product or returns your money if something goes wrong. All of this happens without any human intervention.</p> <p>In the same way, a smart contract automates actions based on pre-defined conditions. Once a smart contract is deployed on a blockchain like Ethereum, it cannot be easily altered or reversed, making it secure and reliable.</p> <p>Smart contracts are used in many different areas:</p> <ul> <li> <p>Decentralized Finance (DeFi): Automating loans, savings, and insurance without needing a bank.</p> </li> <li> <p>Gaming: Creating in-game economies where players can trade items securely.</p> </li> <li> <p>Supply Chain: Tracking goods and ensuring payment upon delivery.</p> </li> </ul> <p>Once a smart contract is on the blockchain, anyone can inspect its code and see exactly how it works.</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#how-smart-contracts-work","title":"How Smart Contracts Work","text":"<p>Smart contracts are written in programming languages like Solidity (for Ethereum) or Golang (for KALP blockchain). When you deploy a smart contract, its code is stored on the blockchain and is executed by every node (or computer) on the network. This decentralized execution ensures that smart contracts operate without any single authority controlling them.</p> <p>Here\u2019s how it works:</p> <ol> <li>Deployment: A developer writes the contract and deploys it to a blockchain.</li> <li>Execution: When a user interacts with the contract, its code is executed by all the nodes in the network.</li> <li>Consensus: Every node reaches an agreement on the contract\u2019s output, making the process tamper-proof.</li> </ol>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#introducing-the-kalp-golang-sdk","title":"Introducing the KALP Golang SDK","text":"<p>If you\u2019re ready to build your own smart contracts, the KALP Golang SDK provides everything you need to interact with the KALP blockchain. Whether you\u2019re developing financial tools or games, the KALP SDK streamlines the development process.</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#why-use-the-kalp-golang-sdk","title":"Why Use the KALP Golang SDK?","text":"<p>The KALP SDK simplifies smart contract development by providing tools to:</p> <ul> <li>Manage Transactions: Submit and track blockchain transactions easily.</li> <li>Integrate KYC Checks: Make sure users comply with regulations.</li> <li>Track Payments: Monitor payments in real-time for payable contracts.</li> <li>Debug Contracts: Use enhanced logging features to troubleshoot issues.</li> </ul>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#getting-started-with-kalp-sdk","title":"Getting Started with KALP SDK","text":"<p>Before diving in, you\u2019ll need the following:</p> <ol> <li>Go Programming Language: Since the KALP SDK is written in Go, you\u2019ll need to have Go installed on your system. Download it from Go\u2019s official site.</li> <li>Install the SDK: You can install the KALP SDK using this command: bash <pre><code>`go get -u github.com/p2eengineering/KALP-sdk-public/KALPsdk`\n</code></pre> Once installed, you can start building your smart contract by defining a Go struct and embedding the KALPsdk.Contract for key blockchain functionalities.</li> </ol>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#building-a-smart-contract-with-kalp-sdk","title":"Building a Smart Contract with KALP SDK","text":"<p>Here\u2019s a quick guide to creating a smart contract with the KALP SDK:</p> <ol> <li>Define the contract</li> </ol> <p><pre><code>type  MyContract  struct  {\n\nKALPsdk.Contract\n\n}\n</code></pre> This simple structure forms the foundation of your contract, allowing you to store data, manage transactions, and interact with the blockchain.</p> <ol> <li> <p>Key Features of KALP SDK:</p> </li> <li> <p>Data Management: Store and retrieve data on the blockchain using key-value storage.</p> </li> <li>Transaction Handling: Easily submit, query, and track transactions.</li> <li>Payment Tracking: Keep tabs on payments made through the contract.</li> <li>KYC Integration: Ensure regulatory compliance by embedding KYC checks.</li> </ol>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#how-to-write-smart-contract-with-kalp-sdk-on-kalp-blockchain","title":"How to write Smart Contract with KALP SDK on KALP Blockchain:","text":"<p>Creating and Starting Chaincode:</p> <ol> <li> <p>Create a new directory for your project.     a.  Execute the following command to create a new directory named for example-<code>my-smart-contract</code>     b.  Change the directory into the newly created project directory.</p> </li> <li> <p>Initialize a new Go module: Within the <code>my-smart-contract</code> directory, run the following command to initialize a new Go module named <code>my-smart-contract</code>:</p> </li> </ol> <p><pre><code>$ go mod init my-smart-contract\n</code></pre> 3. Getting Started with KALP-SDK: Use the <code>go get</code> command to download and install the KALP SDK library:</p> <pre><code>$ go get -u github.com/p2eengineering/KALP-sdk-public/KALP\n</code></pre> <ol> <li>Now create a new Go source file<code>.go</code> within your project directory. This file will house the core logic of your smart contract.</li> </ol> <p><pre><code>package main\n\nimport (\n\n\"fmt\"\n\n\"github.com/p2eengineering/KALP-sdk-public/KALPsdk\"\n\n)\n\ntype SmartContract struct {\n\nKALPsdk.Contract\n\n}\n\nfunc (sc *SmartContract) ExecuteTransaction() {\n\n// Implement the logic for executing transactions\n\nfmt.Println(\"Executing transaction...\")\n\n}\n\nfunc (c *SmartContract) Init(ctx KALPsdk.TransactionContextInterface) error {\n\n// Initialization logic return nil\n\n}\n</code></pre> For detailed guidelines on writing smart contracts, please refer Smart Contract Write,Test,Deploy&amp;Interact</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#example-usage-","title":"EXAMPLE USAGE-","text":"<p>Let's create a sample hello world smart contract -</p> <pre><code>package main\n\nimport (\n\n\"fmt\"\n\n\"github.com/p2eengineering/KALP-sdk-public/KALPsdk\"\n\n)\n\ntype HelloWorldContract struct {\n\nKALPsdk.Contract\n\n}\n\n// SetHelloWorld stores the \"Hello World\" message on the blockchain\n\nfunc (h *HelloWorldContract) SetHelloWorld(ctx KALPsdk.TransactionContextInterface, messageID string, message string) error {\n\n// Convert message to bytes for storage\n\nmessageAsBytes := []byte(message)\n\n// Store message in the world state using the KALP SDK\n\nerr := ctx.PutStateWithoutKYC(messageID, messageAsBytes)\n\nif err != nil {\n\nreturn fmt.Errorf(\"failed to set message: %s\", err.Error())\n\n}\n\nreturn nil\n\n}\n\nfunc main(){\n\n}\n</code></pre> <p>Build and package the smart contract:</p> <p><pre><code>go build .\n</code></pre> Compress your folder structure to a zip file and you are ready to deploy the contract.</p> <p>Folder Structure: After Executing the above commands, the folder Structure shows up as below:</p> <pre><code>Folder name\n\n\u251c\u2500\u2500vendor\n\n\u251c\u2500\u2500go.mod\n\n\u251c\u2500\u2500go.sum\n\n\u251c\u2500\u2500main.go\n\n\u2514\u2500\u2500 contract\n\n\u2514\u2500\u2500 contract.go\n</code></pre>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#how-to-deploy-","title":"How to Deploy-","text":"<p>For deployment after building the smart contract please refer -Smart Contract Write,Test,Deploy&amp;Interact</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#ready-to-use-smart-contract-templates","title":"Ready to use Smart Contract Templates:","text":"<p>KRC20 token contract: implemented(hlink) in Go, utilizing the KALPSDK, provides a comprehensive suite of functionalities for managing digital assets on a blockchain network. The contract leverages the KALP SDK for operations within a blockchain network, providing a framework for issuing, transferring, and managing tokenized assets compliant with the KRC20 standard.</p> <p>KRC721 token contract:  implemented in Go. This contract utilizes the KALP SDK to facilitate operations within a blockchain network, enabling the creation, management, and transfer of non-fungible tokens (NFTs).</p> <p>KRC1155 token contract:  implemented in Go, utilizing the KALP SDK for blockchain operations. The KRC1155 standard enables efficient multi-token transactions and interactions, supporting both fungible and non-fungible token types within a single contract.</p>"},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#conclusion","title":"Conclusion:","text":""},{"location":"Dev-documentation/Articles/Smart-contract-and-Kalp-Golang-SDK/#smart-contracts-and-the-future-of-decentralized-applications-dapps","title":"Smart Contracts and the Future of Decentralized Applications (DApps)","text":"<p>Smart contracts make it possible to automate complex transactions without needing banks or other third parties. With the help of the KALP SDK, developers can build powerful, secure dApps that can handle everything from finance to gaming.</p> <p>As you continue your journey into blockchain development, remember that smart contracts:</p> <ul> <li>Automate agreements: Removing the need for intermediaries.</li> <li>Offer security: Running on tamper-proof blockchain networks.</li> <li>Power DApps: Enabling new forms of decentralized finance, gaming, and more.</li> </ul> <p>With tools like the KALP Golang SDK, you\u2019re equipped to start building your own smart contracts and bring your innovative ideas to life on the blockchain!</p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/","title":"How To Write Smart Contract in Solidity","text":""},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#how-to-write-smart-contract-in-solidity","title":"How To Write Smart Contract in Solidity","text":""},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#5-step-tutorial-how-to-write-a-smart-contract-in-solidity","title":"5-Step Tutorial: How to Write a Smart Contract in Solidity","text":"<p>In the following sections, we\u2019ll show you how to write a smart contract in Solidity in five straightforward steps:</p> <ul> <li> <p>Step 1: Set Up Remix</p> </li> <li> <p>Step 2: Write the Smart Contract Code in Solidity</p> </li> <li> <p>Step 3: Set Up MetaMask</p> </li> <li> <p>Step 4: Get Testnet Tokens</p> </li> <li> <p>Step 5: Compile and Deploy the Solidity Smart Contract</p> </li> </ul> <p>The Solidity smart contract you\u2019ll write is really straightforward, allowing you to store and retrieve an unsigned integer. Consequently, this tutorial is intended for developers with little to no experience in Ethereum development.</p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#step-1-set-up-remix","title":"Step 1: Set Up Remix","text":"<p>You have many options for writing a smart contract in Solidity. However, to make this tutorial as beginner-friendly as possible, we\u2019ll use Remix. Remix is a web-based integrated development environment (IDE) for developing EVM-compatible smart contracts.</p> <p>It\u2019s straightforward and supports several features you need for this tutorial, including the ability to compile and deploy Solidity smart contracts at the click of a few buttons. As such, let\u2019s kick things off by visiting the Remix website.</p> <p>Clicking on the link above takes you to the following page, where you\u2019ll find a workspace called \u201ddefault_workspace\u201d:</p> <p></p> <p>From there, open the \u201dcontracts\u201d folder, delete all the default files, and create a new one called \u201dStorage.sol\u201d:</p> <p></p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#step-2-write-the-smart-contract-code-in-solidity","title":"Step 2: Write the Smart Contract Code in Solidity","text":"<p>For the second step, we\u2019ll show you how to write the smart contract code in Solidity. As such, solidity ahead and open the \u201dStorage.sol\u201d file and input the following code:</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract Storage {\n    uint data;\n    function set(uint x) public {\n        data = x;\n    }\n    function get() public view returns (uint) {\n        return data;\n    }\n} \n</code></pre> <p>The code above is the complete contract, and we\u2019ll now break down each row, starting from the top!</p> <ul> <li>On the initial line, we specify the SPDX license type. Whenever the source code of a contract is made publicly available, these licenses can help avoid and resolve copyright issues:</li> </ul> <pre><code>// SPDX-License-Identifier: MIT\n</code></pre> <p>The third line of the code declares which Solidity compiler you want to use. In this case, we\u2019re using any version upper than ^0.8.20;</p> <ul> <li>On the fifth line, we declare the contract, and in this case, we name it <code>_Storage_</code>. It\u2019s common practice to use the same name for the file and contract:</li> </ul> <pre><code>contract Storage \n</code></pre> <ul> <li>The sixth line declares an unsigned integer (uint) called <code>_data_</code>. This is the variable that will store the data you assign when executing the functions of the contract:</li> </ul> <pre><code>uint data;\n</code></pre> <ul> <li>On lines seven to nine, we declare the <code>_set()_</code> function. This function takes a uint variable as a parameter and assigns it to <code>_data_</code>. Furthermore, the keyword <code>_public_</code> ensures that anyone can call the <code>_set()_</code> function:</li> </ul> <pre><code>function set(uint x) public {data = x;}\n</code></pre> <ul> <li>In the last couple of lines, we add the <code>_get()_</code> function that returns the value of the <code>_data_</code> variable. The <code>_view_</code> keyword tells the Solidity compiler it\u2019s a read-only function, and the <code>_returns (uint)_</code> part specifies that the function is to return a uint variable:</li> </ul> <pre><code>function get() public view returns (uint) {return data;}\n</code></pre> <p>That\u2019s it; you now know how to write a smart contract in Solidity!</p> <p>In the next step, we\u2019ll show you how to set up MetaMask, which you\u2019ll need to compile and deploy the contract in the tutorial\u2019s final part!</p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#step-3-set-up-metamask","title":"Step 3: Set Up MetaMask","text":"<p>Now that you\u2019re done writing the code for your Solidity smart contract, the next thing you\u2019ll need is a Web3 wallet. And for this tutorial, we\u2019ll be using MetaMask. As such, if you haven\u2019t already, head on over to \u201cmetamask.io\u201d and hit the \u201dDownload\u201d button at the bottom left:</p> <p></p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#next-add-metamask-as-a-browser-extension","title":"Next, add MetaMask as a browser extension:","text":"<p>Once you add MetaMask to your browser, you\u2019ll be taken to the following page, where you can either set up a new wallet or import an existing one:</p> <p></p> <p>After you create a new or import a wallet, you should find yourself on a page looking something like this:</p> <p></p> <p>In addition to setting up a MetaMask account, you must add Ethereum\u2019s Sepolia testnet to your wallet. The reason for doing this is that we don\u2019t want to immediately commit to the Ethereum mainnet. Instead, you should deploy your smart contract to Sepolia so you can test it in a safe and secure environment.</p> <p>To add and switch to the Sepolia testnet, solidity ahead and hit the networks drop-down menu at the top right of your MetaMask interface, click on the \u201dShow test networks\u201d button, and select Sepolia:</p> <p></p> <p>Afterwards, it should now look something like this:</p> <p></p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#step-4-get-testnet-tokens","title":"Step 4: Get Testnet Tokens","text":"<p>Deploying a smart contract to a blockchain requires a network transaction, meaning you must pay a gas fee. Consequently, in order to deploy your Solidity smart contract, you need to load up on some Sepolia ETH. Fortunately, since Sepolia is a testnet, you can leverage a faucet to get free tokens. And the easiest way to find a legit faucet is to visit the solidityogle Faucet</p> <p></p> <p>Clicking this takes you to the following page where you need to input your MetaMask wallet address and click on \"Receive 0.05 sepolia ETH\"(It has max Testnet Tokens limit of 0.05 sepolia For 24 hr )</p> <p></p> <p>As soon as you claim them, the balance in your MetaMask wallet should update:</p> <p>From here, you can now use these testnet tokens to pay for transactions on the Sepolia testnet. This means you\u2019re now ready for the final step, where we\u2019ll show you how to compile and deploy your Solidity smart contract!</p>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#step-5-compile-and-deploy-the-solidity-smart-contract","title":"Step 5: Compile and Deploy the Solidity Smart Contract","text":""},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#requirements","title":"Requirements","text":"<ol> <li> <p>Solidity Version: Your smart contract must use Solidity version 0.8.0 or greater.</p> </li> <li> <p>Hardcoded Deploy Parameters: All deploy parameters should be hardcoded in the contract. Kalp Studio does not support passing parameters during deployment.</p> </li> </ol>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#smart-contract-structure","title":"Smart Contract Structure","text":"<p>Your smart contract should follow this general structure:</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract YourContractName {\n    // State variables\n    uint256 public someValue;\n    address public owner;\n// Events (if needed)\nevent ValueChanged(uint256 newValue);\n\n// Constructor with hardcoded values\nconstructor() {\n    someValue = 100;  // Hardcoded initial value\n    owner = msg.sender;\n}\n\n// Functions\nfunction setValue(uint256 _newValue) public {\n    require(msg.sender == owner, \"Only owner can set value\");\n    someValue = _newValue;\n    emit ValueChanged(_newValue);\n}\n\n// Other functions...\n}\n</code></pre>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#key-points","title":"Key Points","text":"<ol> <li> <p>Start with the SPDX license identifier.</p> </li> <li> <p>Specify the Solidity version (^0.8.0 or higher).</p> </li> <li> <p>Use a meaningful name for your contract.</p> </li> <li> <p>Declare state variables that will store your contract's data.</p> </li> <li> <p>Include a constructor that sets initial values. These values are hardcoded and cannot be changed during deployment in Kalp Studio.</p> </li> <li> <p>Implement functions to interact with your contract.</p> </li> </ol>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#example-token-contract","title":"Example: Token Contract","text":"<p>Here's an example of a simple token contract that would be compatible with Kalp Studio:</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SimpleToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n    mapping(address =&gt; uint256) public balanceOf;\nevent Transfer(address indexed from, address indexed to, uint256 value);\n\nconstructor() {\n    name = \"SimpleToken\";\n    symbol = \"SMPL\";\n    decimals = 18;\n    totalSupply = 1000000 * 10**uint256(decimals);\n    balanceOf[msg.sender] = totalSupply;\n}\n\nfunction transfer(address _to, uint256 _value) public returns (bool success) {\n    require(balanceOf[msg.sender] &gt;= _value, \"Insufficient balance\");\n    balanceOf[msg.sender] -= _value;\n    balanceOf[_to] += _value;\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n}\n}\n</code></pre>"},{"location":"Dev-documentation/EVM-SmartContract/How-To-Write-Smart-Contract-in-Solidity/#deployment-process","title":"Deployment Process","text":"<ol> <li> <p>Write your smart contract following the structure and requirements above.</p> </li> <li> <p>make sure that your contract is using a Solidity compiler that supports version 0.8.0 or higher.</p> </li> <li> <p>Review the contract details, ensuring all parameters are correct (remember, you can't change these during deployment).</p> </li> <li> <p>In Kalp Studio, navigate to the smart contract deployment section.</p> </li> </ol> <p></p> <ol> <li>Add Smart Contract name and Description to deploy the smart contract</li> </ol> <p></p> <ol> <li>Drag &amp; Drop your compiled contract code into the designated area.</li> </ol> <p></p> <ol> <li> <p>Click the \"Continue\" button to deploy your contract to the blockchain.</p> </li> <li> <p>Wait for the transaction to be confirmed on the blockchain.</p> </li> <li> <p>Once confirmed, Kalp Studio will provide you with the deployed contract address and transaction details.  </p> </li> </ol> <p>Remember, all initial values and parameters must be set within the contract code itself, as Kalp Studio does not support passing parameters during deployment.</p> <p>Note</p> <p>The smart contract will deploy to the network only which the wallet is connected to.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/","title":"KRC 1155 Token Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#krc1155-token-contract","title":"KRC1155 Token Contract","text":"<p>This guide serves as a roadmap, navigating you through the intricacies of crafting and deploying secure, versatile, and feature-rich KRC-1155 tokens that fuel innovation within the Kalp ecosystem.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#overview","title":"Overview","text":"<p>This document outlines the technical details and functionalities of an KRC1155 token contract implemented in Go, utilizing the Kalp SDK for blockchain operations. The KRC1155 standard enables efficient multi-token transactions and interactions, supporting both fungible and non-fungible token types within a single contract.</p> <p>Prerequisites</p> <ul> <li> <p>Basic understanding of Go programming language.</p> </li> <li> <p>Familiarity with blockchain concepts, KRC1155 token standards, and smart contract development.</p> </li> <li> <p>KalpSDK environment set up for blockchain interaction.</p> </li> <li> <p>The SDK is compatible with Go version 1.19&gt; or &lt;1.20.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#contract-functions","title":"Contract Functions","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#initialize-function","title":"Initialize Function","text":"<p>Within the Kalp NFT contract, the <code>Initialize</code> method serves as a meticulous architect, establishing the foundational configurations that shape the contract's identity and functionality. It acts as a crucial starting point, ensuring essential parameters are set before any subsequent interactions can occur.</p> <pre><code>func (s *SmartContract) Initialize(sdk kalpsdk.TransactionContextInterface, name string, symbol string) (bool, error) {\n    // Initialization logic here\n}\n</code></pre> <p>Key Parameters:</p> <ul> <li> <p>name (string): The chosen title that will gracefully adorn the token collection, defining its unique character within the Kalp ecosystem.</p> </li> <li> <p>symbol (string): A concise and potent emblem that will serve as the collection's identifier, akin to a heraldic crest in the digital realm.</p> </li> </ul> <p>Return Values:</p> <ul> <li> <p>bool: A boolean value indicating the outcome of the initialization endeavor:</p> <ul> <li> <p>true: The initialization process has successfully crafted a solid foundation, and the contract is poised for further interactions.</p> </li> <li> <p>false: Unexpected challenges have derailed the initialization attempt, requiring attention and corrective measures.</p> </li> </ul> </li> <li> <p>error: If obstacles arose during initialization, an error object emerges, carrying valuable insights into the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#mint-function","title":"Mint Function","text":"<p>The <code>Mint</code> method acts as a powerful sculptor, meticulously crafting and issuing NFTs into existence. It serves as the cornerstone for NFT creation, enabling the minting of a designated number of tokens and assigning them to a specified recipient.</p> <pre><code>func (s *SmartContract) Mint(sdk kalpsdk.TransactionContextInterface, account string, id uint64, amount uint64) error {\n    // Minting logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the intended recipient who will receive the newly minted NFTs.</p> </li> <li> <p>id (uint64): A numerical identifier that serves as a starting point for minting a sequence of NFTs.</p> </li> <li> <p>amount (uint64): The precise number of NFTs to be minted and bestowed upon the recipient.</p> </li> </ul> <p>Return Value:error: In the event of unforeseen minting obstacles, an error object surfaces, shedding light on the nature of the difficulty. It is important to note that the method signature only explicitly indicates an error return type, implying a successful mint operation wouldn't return anything specific.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#mintbatch-function","title":"MintBatch Function","text":"<p>The <code>MintBatch</code> method embodies the spirit of efficiency, enabling the creation and allocation of multiple NFTs in a single, streamlined operation. It empowers the minting of diverse NFT types, each with its unique identifier and quantity, fostering a more efficient workflow for creators and distributors.</p> <pre><code>func (s *SmartContract) MintBatch(sdk kalpsdk.TransactionContextInterface, account string, ids []uint64, amounts []uint64) error {\n    // Batch minting logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the intended recipient who will receive the minted NFTs.</p> </li> <li> <p>ids ([]uint64): An array of numerical identifiers, meticulously assigned to each NFT within the batch, establishing their distinct identities.</p> </li> <li> <p>amounts ([]uint64): An array of corresponding values, precisely indicating the quantity of NFTs to be minted for each respective identifier within the batch.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#burn-function","title":"Burn Function","text":"<p>The <code>Burn</code> method serves as a transformative force, deliberately removing NFTs from existence and reducing their overall supply. It acts as a counterbalance to minting, fostering scarcity and potentially enhancing the value of remaining tokens.</p> <pre><code>func (s *SmartContract) Burn(sdk kalpsdk.TransactionContextInterface, account string, id uint64, amount uint64) error {\n    // Burning logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the individual or entity that will relinquish their ownership of the NFTs, triggering their removal.</p> </li> <li> <p>id (uint64): The unique numerical identifier that pinpoints the specific type of NFTs destined for the burning process.</p> </li> <li> <p>amount (uint64): The precise quantity of NFTs to be extracted from the account and irrevocably removed from circulation.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#burnbatch-function","title":"BurnBatch Function","text":"<p>The <code>BurnBatch</code> method embodies efficiency and precision, enabling the coordinated removal and destruction of multiple NFT types within a single, streamlined transaction. It serves as an optimized approach to managing NFT supply and unlocking various functionalities within the Kalp ecosystem.</p> <pre><code>func (s *SmartContract) BurnBatch(sdk kalpsdk.TransactionContextInterface, account string, ids []uint64, amounts []uint64) error {\n    // Batch burning logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the individual or entity relinquishing ownership of the NFTs, initiating their irreversible removal.</p> </li> <li> <p>ids ([]uint64): An array of unique numerical identifiers, meticulously pinpointing the distinct types of NFTs destined for the synchronized burning process.</p> </li> <li> <p>amounts ([]uint64): An array of corresponding values, precisely indicating the quantities of each respective NFT type to be extracted from the account and permanently extinguished.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#transferfrom-function","title":"TransferFrom Function","text":"<p>The <code>TransferFrom</code> method acts as a facilitator, enabling the seamless transfer of ownership for designated NFTs from one account to another. It empowers vibrant secondary markets and fosters dynamic ownership experiences within the Kalp ecosystem.</p> <pre><code>func (s *SmartContract) TransferFrom(sdk kalpsdk.TransactionContextInterface, sender string, recipient string, id uint64, amount uint64) error {\n    // Single transfer logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>sender (string): The blockchain address of the individual or entity relinquishing ownership of the NFTs, initiating the transfer process.</p> </li> <li> <p>recipient (string): The blockchain address of the intended recipient who will receive the NFTs and assume ownership.</p> </li> <li> <p>id (uint64): The unique numerical identifier pinpointing the specific type of NFTs to be transferred.</p> </li> <li> <p>amount (uint64): The precise quantity of NFTs to be extracted from the sender's account and bestowed upon the recipient.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#batchtransferfrom-function","title":"BatchTransferFrom Function","text":"<p>The <code>BatchTransferFrom</code> method embodies efficiency and coordination, enabling the seamless transfer of ownership for diverse NFT types within a single, streamlined transaction. It fosters efficient exchange processes, minimizing transaction costs and enhancing user experience.</p> <pre><code>func (s *SmartContract) BatchTransferFrom(sdk kalpsdk.TransactionContextInterface, sender string, recipient string, ids []uint64, amounts []uint64) error {\n    // Batch transfer logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>sender (string): The blockchain address of the individual or entity initiating the transfer, relinquishing ownership of the NFTs.</p> </li> <li> <p>recipient (string): The blockchain address of the intended recipient who will assume ownership of the transferred NFTs.</p> </li> <li> <p>ids ([]uint64): An array of unique numerical identifiers, pinpointing the precise types of NFTs to be included in the batch transfer.</p> </li> <li> <p>amounts ([]uint64): A corresponding array of values, specifying the quantities of each respective NFT type to be transferred.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#setapprovalforall-function","title":"SetApprovalForAll Function","text":"<p>The <code>SetApprovalForAll</code> method acts as a delegation tool, enabling granular control over NFT management permissions. It empowers users to grant or revoke the ability for a designated operator (often another smart contract) to transfer all their NFTs on their behalf.</p> <pre><code>func (s *SmartContract) SetApprovalForAll(sdk kalpsdk.TransactionContextInterface, operator string, approved bool) error {\n    // Approval logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>operator (string): The blockchain address of the operator (typically another smart contract) to whom permissions are being granted or revoked.</p> </li> <li> <p>approved (bool): A boolean value signifying the desired authorization state:</p> <ul> <li> <p>true : Grants the specified operator permission to manage all of the caller's NFTs.</p> </li> <li> <p>false : Revokes any previously granted permission for the operator to manage the caller's NFTs.  </p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#isapprovedforall-function","title":"IsApprovedForAll Function","text":"<p>the <code>IsApprovedForAll</code> method acts as a transparency tool, enabling users and other smart contracts to verify the authorization status of a designated operator. It empowers informed decision-making and fosters trust within the Kalp ecosystem.</p> <pre><code>func (s *SmartContract) IsApprovedForAll(sdk kalpsdk.TransactionContextInterface, account string, operator string) (bool, error) {\n    // Check approval status here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the NFT owner whose permissions are being queried.</p> </li> <li> <p>operator (string): The blockchain address of the operator whose authorization status is being investigated.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#balanceof-function","title":"BalanceOf Function","text":"<p>the <code>BalanceOf</code> method serves as a meticulous bookkeeper, enabling the querying of NFT balances associated with a specific account and token type. It provides a transparent and accessible way to ascertain digital asset ownership within the Kalp ecosystem.</p> <pre><code>func (s *SmartContract) BalanceOf(sdk kalpsdk.TransactionContextInterface, account string, id uint64) (uint64, error) {\n    // Balance query logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>account (string): The blockchain address of the account whose NFT balance is being investigated.</p> </li> <li> <p>id (uint64): The unique numerical identifier representing the specific type of NFTs for which the balance is sought.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#balanceofbatch-function","title":"BalanceOfBatch Function","text":"<p>The <code>BalanceOfBatch</code> method embodies optimization, enabling the efficient querying of NFT balances for multiple accounts and token types within a single operation. It streamlines data retrieval, minimizing transaction costs and enhancing user experience within the Kalp ecosystem.</p> <pre><code>func (s *SmartContract) BalanceOfBatch(sdk kalpsdk.TransactionContextInterface, accounts []string, ids []uint64) ([]uint64, error) {\n    // Batch balance query logic here\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>accounts ([]string): An array of blockchain addresses representing the accounts for which NFT balances are being queried.</p> </li> <li> <p>ids ([]uint64): An array of unique numerical identifiers, each corresponding to a specific type of NFT for which balances are sought.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#helper-functions","title":"Helper Functions","text":"<p>Within the Kalp NFT smart contract, a suite of helper functions acts as the workhorses, meticulously handling fundamental operations. These functions encapsulate specific tasks, promoting code modularity, reusability, and maintainability.</p> <ul> <li> <p>Minting and Burning: Functions like <code>mintHelper</code>, <code>addBalance</code>, and <code>removeBalance</code> meticulously handle the creation and destruction of NFTs, ensuring accurate state updates and adherence to defined rules.</p> </li> <li> <p>Event Emissions: Dedicated functions manage the emission of events like <code>TransferSingle</code>, <code>TransferBatch</code>, and <code>ApprovalForAll</code>, keeping the Kalp ecosystem informed about crucial NFT-related activities.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#event-structures","title":"Event Structures","text":"<p>The contract meticulously defines event structures, serving as blueprints for the information broadcasted when events occur. These structures specify the data elements associated with each event, ensuring clarity and consistency in event communication:</p> <ul> <li> <p>Transfer Events: <code>TransferSingle</code> and <code>TransferBatch</code> events capture and broadcast details surrounding NFT transfers, including the sender, recipient, NFT type, and quantity.</p> </li> <li> <p>Approval Events: The <code>ApprovalForAll</code> event transmits information about changes in operator permissions, indicating which operator possesses the ability to manage the owner's NFTs.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#error-handling","title":"Error Handling","text":"<p>Robust error handling is a cornerstone of the contract, ensuring graceful management of exceptions and invalid operations. This includes:</p> <ul> <li> <p>Returning informative error objects: In case of unexpected issues, functions return error objects that precisely describe the encountered difficulty, aiding in troubleshooting and rectification.</p> </li> <li> <p>Validating user input: Meticulous input validation safeguards against invalid data being submitted to the contract, preventing unintended consequences and potential exploits.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#security-considerations","title":"Security Considerations","text":"<p>The contract prioritizes security, implementing robust mechanisms to protect NFT ownership and prevent malicious activity:</p> <ul> <li> <p>Access Controls: Granular access controls are enforced, meticulously restricting unauthorized access to critical functionalities like minting, burning, and transfers. Only authorized entities (e.g., contract owners or designated operators) can execute these actions.</p> </li> <li> <p>Validation of Operations: All operations undergo rigorous validation to ensure they adhere to pre-defined rules and restrictions, safeguarding against unauthorized actions or manipulation attempts.</p> </li> <li> <p>Arithmetic Safety: The contract employs safeguards to prevent overflow and underflow attacks during arithmetic operations, protecting against vulnerabilities that could manipulate NFT balances or lead to unexpected behavior.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-1155-Token-Contract/#conclusion","title":"Conclusion","text":"<p>This KRC1155 contract documentation provides a comprehensive overview for developers to interact with, including minting, burning, transferring, and managing tokens. Adherence to the KRC1155 standard enables efficient multi-token management within a single contract, supporting a wide range of use cases in digital assets.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/","title":"KRC 20 Token Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#krc20-token-contract","title":"KRC20 Token Contract","text":"<p>This guide serves as a roadmap, navigating you through the intricacies of crafting and deploying secure, versatile, and feature-rich KRC-20 tokens that fuel innovation within the Kalp ecosystem.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#overview","title":"Overview","text":"<p>This document outlines the technical details and functionalities of a KRC20 token contract implemented in Go. The contract leverages the Kalp SDK for operations within a blockchain network, providing a framework for issuing, transferring, and managing tokenized assets compliant with the KRC20 standard.</p> <p>Prerequisites</p> <ul> <li> <p>Familiarity with the Go programming language</p> </li> <li> <p>Basic understanding of blockchain concepts and KRC20 token standards</p> </li> <li> <p>Installation of the Kalp SDK</p> </li> <li> <p>The SDK is compatible with Go version 1.19&gt; or &lt;1.20.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#initialize-token-contract","title":"Initialize Token Contract","text":"<p>The <code>Initialize</code> function initializes a token contract with essential details, making it ready for subsequent interactions. This function must be called prior to any other contract functionalities to establish the token's name, symbol, and decimal places.</p> <p>Implementation (Go):</p> <pre><code>// Set information for a token and initialize contract.\nfunc (s *SmartContract) Initialize(sdk kalpsdk.TransactionContextInterface, name string, symbol string, decimals string) (bool, error) {\n    // Authorization and initialization checks omitted for brevity\n\n    err := sdk.PutStateWithoutKYC(nameKey, []byte(name))\n    if err != nil {\n        return false, fmt.Errorf(\"failed to set token name: %v\", err)\n    }\n\n    // Symbol and decimals setting omitted for brevity\n\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>name (string): The human-readable name of the token (e.g., \"MyCoin\").</p> </li> <li> <p>symbol (string): The abbreviated symbol of the token (e.g., \"MYC\").</p> </li> <li> <p>decimals (string): The number of decimal places the token utilizes (e.g., \"18\" for 18 decimal places representing cents).</p> </li> </ul> <p>Function Breakdown:</p> <ul> <li> <p>Initialize (sdk kalpsdk.TransactionContextInterface, name string, symbol string, decimals string) (bool, error):</p> <ul> <li> <p>This function accepts four arguments:</p> <ul> <li> <p><code>sdk</code>: Reference to the Kalp SDK for blockchain interaction.</p> </li> <li> <p><code>name</code>: The token name.</p> </li> <li> <p><code>symbol</code>: The token symbol.</p> </li> <li> <p><code>decimals</code>: The number of decimal places for the token.</p> </li> </ul> </li> <li> <p>Return: It returns a boolean value indicating success (<code>true</code>) or failure (<code>false</code>) along with any potential errors.</p> </li> </ul> </li> </ul> <p>Authorization: Yes, only authorized clients (e.g., Deployer) can call the <code>Initialize</code> function. This ensures proper control over token creation and prevents unauthorized deployments.</p> <p>Note</p> <p>Authorization checks are crucial and intentionally omitted for brevity. Specific authorization mechanisms depend on the smart contract's design and deployment environment.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#token-operations","title":"Token Operations","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#mint-function","title":"Mint Function","text":"<p>The <code>Mint</code> function enables the creation of new tokens and subsequent additions to the minter's account balance. This operation also increases the total supply of the token in circulation.</p> <p>Implementation (Go):</p> <pre><code>// Mint creates new tokens and adds them to minter's account balance.\nfunc (s *SmartContract) Mint(sdk kalpsdk.TransactionContextInterface, amount int) error {\n    // Authorization checks omitted for brevity\n\n    if amount &lt;= 0 {\n        return fmt.Errorf(\"mint amount must be a positive integer\")\n    }\n\n    // Update balance and total supply logic omitted for brevity\n\n    return nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>amount (int): The positive integer value represents the number of tokens to be minted.</li> </ul> <p>Return Value:</p> <ul> <li>error: This function returns an error object if the minting operation fails. The error message provides details about the encountered issue.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#burn-function","title":"Burn Function","text":"<p>The <code>Burn</code> function permanently removes a specified number of tokens from the minter's account balance, effectively reducing the total supply of tokens in circulation.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) Burn(sdk kalpsdk.TransactionContextInterface, amount int) error {\n    // Initialization and authorization checks omitted for brevity\n\n    if amount &lt;= 0 {\n        return errors.New(\"burn amount must be a positive integer\")\n    }\n\n    // Retrieve, update, and save the new balance and total supply logic omitted for brevity\n\n    return nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>amount (int): The positive integer value represents the number of tokens to be burned.</li> </ul> <p>Return Value:</p> <ul> <li>error: This function returns an error object if the burning operation fails. The error message provides details about the encountered issue.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#transfer-function","title":"Transfer Function","text":"<p>The <code>Transfer</code> function facilitates the movement of tokens between accounts within the Kalp ecosystem. It allows the caller (the account initiating the transaction) to send a specified number of tokens to a recipient account.</p> <p>Implementation (Go):</p> <pre><code>// Transfer transfers tokens from the client account to the recipient account.\nfunc (s *SmartContract) Transfer(sdk kalpsdk.TransactionContextInterface, recipient string, amount int) error {\n    // Initialization checks omitted for brevity\n\n    err := transferHelper(sdk, clientID, recipient, amount)\n    if err != nil {\n        return fmt.Errorf(\"failed to transfer: %v\", err)\n    }\n\n    // Emit Transfer event logic omitted for brevity\n\n    return nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>recipient (string): The unique identifier of the recipient account that will receive the tokens.</p> </li> <li> <p>amount (int): The positive integer value representing the number of tokens to be transferred.</p> </li> </ul> <p>Return Value:</p> <ul> <li>error: This function returns an error object if the transfer operation fails. The error message provides details about the encountered issue, such as insufficient funds or an invalid recipient address.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#balanceof-function","title":"BalanceOf Function","text":"<p>The <code>BalanceOf</code> function serves as a key tool for retrieving the token balance associated with a specific account within the Kalp ecosystem. It provides a reliable and transparent way to query account holdings.</p> <p>Implementation (Go):</p> <pre><code>// BalanceOf returns the balance of the given account.\nfunc (s *SmartContract) BalanceOf(sdk kalpsdk.TransactionContextInterface, account string) (int, error) {\n    // Initialization checks omitted for brevity\n\n    balanceBytes, err := sdk.GetState(account)\n    if err != nil {\n        return 0, fmt.Errorf(\"failed to read from world state: %v\", err)\n    }\n\n    balance, _ := strconv.Atoi(string(balanceBytes))\n\n    return balance, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>account (string): The unique identifier of the account whose balance is to be queried.</li> </ul> <p>Return Value:</p> <ul> <li> <p>int: The function returns an integer value representing the token balance of the specified account.</p> </li> <li> <p>error: If an error occurs during the balance retrieval process, the function returns an error object along with a descriptive error message.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#approval-function","title":"Approval Function","text":"<p>The <code>Approve</code> function empowers the caller (the account initiating the transaction) to grant spending authorization to another account, designated as the spender. This allows the spender to withdraw tokens from the caller's account multiple times up to a predefined maximum amount. This functionality underpins various use cases within decentralized applications (dApps) built on the Kalp blockchain.</p> <p>Implementation (Go):</p> <pre><code>// Approve allows the spender to withdraw from the calling client's token account.\nfunc (s *SmartContract) Approve(sdk kalpsdk.TransactionContextInterface, spender string, value int) error {\n    // Initialization checks omitted for brevity\n\n    // Create allowanceKey and update the state with the value\n    allowanceKey, _ := sdk.CreateCompositeKey(allowancePrefix, []string{owner, spender})\n    err := sdk.PutStateWithoutKYC(allowanceKey, []byte(strconv.Itoa(value)))\n    if err != nil {\n        return fmt.Errorf(\"failed to update state of smart contract for key %s: %v\", allowanceKey, err)\n    }\n\n    // Emit Approval event logic omitted for brevity\n\n    return nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>spender (string): The unique identifier of the account authorized to withdraw tokens.</p> </li> <li> <p>value (int): The positive integer value representing the maximum allowable withdrawal amount.</p> </li> </ul> <p>Return Value:</p> <ul> <li>error: The function returns an error object if the approval process fails. The error message provides details about the encountered issue, such as invalid parameters, permission errors, or issues with underlying SDK functions.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#allowance-function","title":"Allowance Function","text":"<p>The <code>Allowance</code> function serves as a vital tool for retrieving the remaining allowance granted to a specific spender by the owner of a token account. This information is crucial for understanding the authorized spending capacity of the spender and ensuring proper control over token transfers within the Kalp ecosystem.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) Allowance(sdk kalpsdk.TransactionContextInterface, owner string, spender string) (int, error) {\n    // Initialization checks omitted for brevity\n    allowanceKey, _ := sdk.CreateCompositeKey(allowancePrefix, []string{owner, spender})\n    allowanceBytes, err := sdk.GetState(allowanceKey)\n    if err != nil {\n        return 0, fmt.Errorf(\"failed to read allowance: %v\", err)\n    }\n    if allowanceBytes == nil {\n        return 0, nil // No allowance set\n    }\n    allowance, _ := strconv.Atoi(string(allowanceBytes))\n    return allowance, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>owner (string): The unique identifier of the account that owns the tokens.</p> </li> <li> <p>spender (string): The unique identifier of the account authorized to withdraw tokens.</p> </li> </ul> <p>Return Values:</p> <ul> <li> <p>int: The function returns an integer value representing the remaining number of tokens that the spender is authorized to withdraw from the owner's account.</p> </li> <li> <p>error: If an error occurs during the retrieval process, the function returns an error object along with a descriptive message explaining the encountered issue.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#transferfrom-function","title":"TransferFrom Function","text":"<p>The <code>TransferFrom</code> function empowers a designated spender to initiate token transfers on behalf of the owner, enabling a flexible and controlled mechanism for token movement within the Kalp ecosystem. It's particularly useful in scenarios where third-party services or applications need to manage tokens for users.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) TransferFrom(sdk kalpsdk.TransactionContextInterface, from string, to string, value int) error {\n    // Initialization checks omitted for brevity\n\n    // Retrieve and check the allowance of the spender\n    // Decrease the allowance\n    // Perform the transfer using `transferHelper`\n    // Logic omitted for brevity\n\n    return nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>from (string): The unique identifier of the account owning the tokens to be transferred.</p> </li> <li> <p>to (string): The unique identifier of the recipient account that will receive the tokens.</p> </li> <li> <p>value (int): The positive integer value representing the number of tokens to be transferred.</p> </li> </ul> <p>Return Value:</p> <ul> <li>error: The function returns an error object if the transfer process fails. The error message provides details about the encountered issue, such as insufficient allowance, invalid parameters, or other potential errors.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#token-information-function","title":"Token Information Function","text":"<p>The <code>Name</code> function serves as a fundamental tool for accessing the descriptive name associated with a token within the Kalp ecosystem. This information is crucial for identifying and understanding the token's purpose and characteristics within various applications and interactions.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) Name(sdk kalpsdk.TransactionContextInterface) (string, error) {\n     // Initialization checks omitted for brevity\n    bytes, err := sdk.GetState(nameKey)\n    if err != nil {\n        return \"\", fmt.Errorf(\"failed to get token name: %v\", err)\n    }\n    return string(bytes), nil\n</code></pre> <p>Return Values:</p> <ul> <li> <p>string: The function returns a string value representing the token's name. This name typically aligns with the token's intended use cases and branding.</p> </li> <li> <p>error: If an error occurs during the retrieval process, the function returns an error object along with a descriptive message explaining the issue, such as potential database errors or invalid access attempts.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#symbol-function","title":"Symbol Function","text":"<p>The <code>Symbol</code> function acts as a dedicated tool for retrieving the unique symbol associated with a token within the Kalp ecosystem. This symbol serves as a concise and recognizable identifier, enabling efficient communication and exchange across various applications and interfaces.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) Symbol(sdk kalpsdk.TransactionContextInterface) (string, error) {\n     // Initialization checks omitted for brevity\n    bytes, err := sdk.GetState(symbolKey)\n    if err != nil {\n        return \"\", fmt.Errorf(\"failed to get Symbol: %v\", err)\n    }\n    return string(bytes), nil\n}\n</code></pre> <p>Return Values:</p> <ul> <li> <p>string: The function returns a string value representing the token's symbol. This symbol typically adheres to conventional shorthand conventions for clarity and consistency (e.g., \"MTK,\" \"KALP\").</p> </li> <li> <p>error: If an error occurs during retrieval, the function returns an error object along with a descriptive message detailing the issue, aiding in troubleshooting and issue resolution.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#totalsupply-function","title":"TotalSupply Function","text":"<p>The <code>TotalSupply</code> function serves as a vital tool for retrieving the total number of tokens that have been created and issued within the Kalp ecosystem. This information provides a crucial metric for understanding the overall token distribution and scarcity, which are fundamental aspects of token economics and market dynamics.</p> <p>Implementation (Go):</p> <pre><code>func (s *SmartContract) TotalSupply(sdk kalpsdk.TransactionContextInterface) (int, error) {\n     // Initialization checks omitted for brevity\n    totalSupplyBytes, err := sdk.GetState(totalSupplyKey)\n    if err != nil {\n        return 0, fmt.Errorf(\"failed to retrieve total token supply: %v\", err)\n    }\n    if totalSupplyBytes == nil {\n        return 0, nil // No tokens minted yet\n    }\n    totalSupply, _ := strconv.Atoi(string(totalSupplyBytes))\n    return totalSupply, nil\n}\n</code></pre> <p>Return Values:</p> <ul> <li> <p>int: The function returns an integer value representing the total number of tokens currently in circulation within the Kalp ecosystem.</p> </li> <li> <p>error: If an error occurs during the retrieval process, the function returns an error object along with a descriptive message detailing the encountered issue, such as potential storage errors or invalid access attempts.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#helper-functions","title":"Helper Functions","text":"<p>Included are several helper functions for internal logic, such as <code>transferHelper</code>, <code>add</code>, <code>sub</code>, and <code>checkInitialized</code>, which ensures the correct execution of token operations and state management.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#error-handling","title":"Error Handling","text":"<p>All operations include detailed error reporting to ensure developers can diagnose and resolve issues during integration and interaction with the contract.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#events","title":"Events","text":"<p>The contract emits events for significant actions such as transfers and approvals, facilitating off-chain applications and services to react to contract state changes.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#security-considerations","title":"Security Considerations","text":"<ul> <li> <p>Ensure proper access control is enforced, particularly for sensitive operations like <code>Mint</code> and <code>Burn</code>.</p> </li> <li> <p>Validate input parameters to mitigate risks such as reentrancy attacks and overflow/underflow vulnerabilities.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-20-Token-Contract/#conclusion","title":"Conclusion","text":"<p>This KRC20 token contract implemented in Go, utilizing the KalpSDK, provides a comprehensive suite of functionalities for managing digital assets on a blockchain network. The documentation outlined above offers a detailed guide for developers to integrate and leverage these capabilities within their applications.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/","title":"KRC 721 Token Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#krc721-token-contract","title":"KRC721 Token Contract","text":"<p>This guide serves as a roadmap, navigating you through the intricacies of crafting and deploying secure, versatile, and feature-rich KRC-721 tokens that fuel innovation within the Kalp ecosystem.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#overview","title":"Overview","text":"<p>This document provides technical details and guidelines for interacting with an KRC721 token contract implemented in Go. This contract utilizes the Kalp SDK to facilitate operations within a blockchain network, enabling the creation, management, and transfer of non-fungible tokens (NFTs).</p> <p>Prerequisites</p> <ul> <li> <p>Understanding of Go programming language</p> </li> <li> <p>Basic knowledge of blockchain and NFT concepts</p> </li> <li> <p>Installed KalpSDK environment</p> </li> </ul> <p>Note</p> <p>The SDK is compatible with Go version 1.19&gt; or &lt;1.20.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#initialize-token-contract","title":"Initialize Token Contract","text":"<p>The <code>Initialize</code> method serves as a crucial first step in configuring a Kalp-based ERC721 token contract. It establishes the name and symbol that will be indelibly associated with the token collection, ensuring clarity and consistency throughout its lifecycle.</p> <p>Implementation (Go):</p> <pre><code>func (c *TokenERC721Contract) Initialize(ctx kalpsdk.TransactionContextInterface, name string, symbol string) (bool, error) {\n    // Authorization check omitted for brevity\n    err := ctx.PutStateWithoutKYC(nameKey, []byte(name))\n    if err != nil {\n        return false, fmt.Errorf(\"failed to set token name: %v\", err)\n    }\n    err = ctx.PutStateWithoutKYC(symbolKey, []byte(symbol))\n    if err != nil {\n        return false, fmt.Errorf(\"failed to set token symbol: %v\", err)\n    }\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>name (string): The human-readable name that designates the token collection, often aligning with its intended use cases or branding.</p> </li> <li> <p>symbol (string): A concise and recognizable symbol that serves as a shorthand identifier for the token collection, typically following conventional naming conventions (e.g., \"MTK\" or \"KALP\").</p> </li> </ul> <p>Return Values:(bool, error): The method returns a boolean value indicating success or failure, accompanied by an error object if any issues arise during initialization.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#mintwithtokenuri-function","title":"MintWithTokenURI Function","text":"<p>The <code>MintWithTokenURI</code> method holds the power to create brand-new NFTs (Non-Fungible Tokens) within the Kalp ecosystem, cementing their unique existence and linking them with rich metadata. It serves as a cornerstone for establishing ownership and unlocking the diverse possibilities that NFTs offer.</p> <pre><code>func (c *TokenERC721Contract) MintWithTokenURI(ctx kalpsdk.TransactionContextInterface, tokenId string, tokenURI string) (*Nft, error) {\n    // Initialization and authorization checks omitted for brevity\n    nft := &amp;Nft{TokenId: tokenId, Owner: /* Owner's identity */, TokenURI: tokenURI}\n    nftKey, _ := ctx.CreateCompositeKey(nftPrefix, []string{tokenId})\n    nftBytes, _ := json.Marshal(nft)\n    ctx.PutStateWithoutKYC(nftKey, nftBytes)\n    // Balance and Transfer event logic omitted for brevity\n    return nft, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>tokenId (string): An unequivocally unique identifier assigned to the NFT, ensuring its individuality and preventing any chance of duplication.</p> </li> <li> <p>tokenURI (string): A Universal Resource Identifier (URI), acting as a digital address that points to a JSON file containing comprehensive metadata about the NFT's attributes, details, and potential functionalities.</p> </li> </ul> <p>Return Values: (*Nft, error) : Upon successful minting, the method returns a pointer to the newly created <code>Nft</code> object, containing its essential information. It also includes an error object if any issues arise during the process.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#burn-function","title":"Burn Function","text":"<p>The <code>Burn</code> method wields the definitive power to permanently remove NFTs (Non-Fungible Tokens) from the Kalp ecosystem, executing an irreversible act of destruction that revokes their presence and ownership. It serves as a mechanism for managing token supply, addressing specific use cases, or even symbolizing artistic expression.</p> <pre><code>func (c *TokenERC721Contract) Burn(ctx kalpsdk.TransactionContextInterface, tokenId string) (bool, error) {\n    // Ownership and initialization checks omitted for brevity\n    nftKey, _ := ctx.CreateCompositeKey(nftPrefix, []string{tokenId})\n    ctx.DelStateWithoutKYC(nftKey)\n    // Remove from balance and emit Transfer event logic omitted for brevity\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>tokenId (string): The unique identifier that pinpoints the specific NFT destined for elimination.</li> </ul> <p>Return Values:(bool, error): The method indicates its success or failure by returning a boolean value, accompanied by an error object if any issues arise during the burning process.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#_1","title":"KRC 721 Token Contract","text":"<p>TransferFrom Function</p> <p>The <code>TransferFrom</code> method sits at the heart of NFT (Non-Fungible Token) movement within the Kalp ecosystem, meticulously orchestrating the transfer of ownership from one entity to another. It stands as the cornerstone for enabling seamless transactions, trading, and sharing of NFTs.</p> <pre><code>func (c *TokenERC721Contract) TransferFrom(ctx kalpsdk.TransactionContextInterface, from string, to string, tokenId string) (bool, error) {\n    // Initialization, ownership, and approval checks omitted for brevity\n    nft, _ := _readNFT(ctx, tokenId)\n    nft.Owner = to\n    nftKey, _ := ctx.CreateCompositeKey(nftPrefix, []string{tokenId})\n    nftBytes, _ := json.Marshal(nft)\n    ctx.PutStateWithoutKYC(nftKey, nftBytes)\n    // Update balance keys and emit Transfer event logic omitted for brevity\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>from (string): The current owner of the NFT, relinquishing their control.</p> </li> <li> <p>to (string): The designated recipient who will assume ownership of the NFT.</p> </li> <li> <p>tokenId (string): The unique identifier that unequivocally designates the specific NFT being transferred.</p> </li> </ul> <p>Return Values:(bool, error): The method signals its success or failure through a boolean value, also returning an error object if any issues arise during the transfer process.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#approve-function","title":"Approve Function","text":"<p>The <code>Approve</code> method empowers NFT (Non-Fungible Token) owners within the Kalp ecosystem to selectively bestow transfer authority upon designated accounts, granting them the ability to move specific NFTs on behalf of the owner. This flexibility facilitates a range of collaborative and trust-based interactions.</p> <pre><code>func (c *TokenERC721Contract) Approve(ctx kalpsdk.TransactionContextInterface, operator string, tokenId string) (bool, error) {\n    // Initialization and ownership checks omitted for brevity\n    nft, _ := _readNFT(ctx, tokenId)\n    nft.Approved = operator\n    nftKey, _ := ctx.CreateCompositeKey(nftPrefix, []string{tokenId})\n    nftBytes, _ := json.Marshal(nft)\n    ctx.PutStateWithoutKYC(nftKey, nftBytes)\n    // Omitted logic for emitting Approval event\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>operator (string): The account designated to receive transfer approval for the specified NFT.</p> </li> <li> <p>tokenId (string): The unique identifier that pinpoints the NFT for which authorization is being granted.</p> </li> </ul> <p>Return Values:(bool, error): The method indicates success or failure through a boolean value, accompanied by an error object if any issues arise during the approval process.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#setapprovalforall-function","title":"SetApprovalForAll Function","text":"<p>The <code>SetApprovalForAll</code> method within the Kalp ecosystem empowers NFT (Non-Fungible Token) owners to confer blanket approval to designated accounts (operators). This grants the operator the ability to transfer all of the owner's NFTs, acting as a powerful tool for managing large collections or streamlining specific use cases.</p> <pre><code>func (c *TokenERC721Contract) SetApprovalForAll(ctx kalpsdk.TransactionContextInterface, operator string, approved bool) (bool, error) {\n    // Initialization checks omitted for brevity\n    sender := /* Fetch sender's identity */\n    approvalKey, _ := ctx.CreateCompositeKey(approvalPrefix, []string{sender, operator})\n    approval := Approval{Owner: sender, Operator: operator, Approved: approved}\n    approvalBytes, _ := json.Marshal(approval)\n    ctx.PutStateWithoutKYC(approvalKey, approvalBytes)\n    // Emit ApprovalForAll event logic omitted for brevity\n    return true, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>operator (string): The account designated to receive approval for managing all the caller's NFTs.</p> </li> <li> <p>approved (bool): A flag indicating whether to grant (<code>true</code>) or revoke (<code>false</code>) approval for the operator.</p> </li> </ul> <p>Return Values:(bool, error): The method signals success or failure through a boolean value, along with an error object if any issues arise during the approval process.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#balanceof-function","title":"BalanceOf Function","text":"<p>The <code>BalanceOf</code> method acts as a digital accountant within the Kalp ecosystem, meticulously cataloging NFT (Non-Fungible Token) collections. It enables you to precisely determine the number of NFTs held by a specific account, serving as a crucial tool for understanding ownership patterns, token scarcity, and personal collections.</p> <pre><code>func (c *TokenERC721Contract) BalanceOf(ctx kalpsdk.TransactionContextInterface, owner string) int {\n    // Initialization checks omitted for brevity\n    iterator, _ := ctx.GetStateByPartialCompositeKey(balancePrefix, []string{owner})\n    balance := 0\n    for iterator.HasNext() {\n        iterator.Next()\n        balance++\n    }\n    return balance\n}\n</code></pre> <p>Parameters:</p> <ul> <li>owner (string): The account whose NFT holdings you wish to inspect.</li> </ul> <p>Return Value:int: A concise integer representing the exact quantity of NFTs owned by the specified account.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#ownerof-function","title":"OwnerOf Function","text":"<p>Within the Kalp NFT landscape, the <code>OwnerOf</code> method serves as a steadfast guide, revealing the rightful owner of a specified NFT. It acts as a fundamental tool for establishing ownership, ensuring responsible transfer, and upholding accountability within this dynamic ecosystem.</p> <pre><code>func (c *TokenERC721Contract) OwnerOf(ctx kalpsdk.TransactionContextInterface, tokenId string) (string, error) {\n    nft, err := _readNFT(ctx, tokenId)\n    if err != nil {\n        return \"\", err\n    }\n    return nft.Owner, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>tokenId (string): The unique identifier that singles out the NFT for which ownership information is sought.</li> </ul> <p>Return Values:</p> <ul> <li> <p>Owner Account: A string representing the account holding ownership of the inquired NFT.</p> </li> <li> <p>Error: In the event of unforeseen retrieval obstacles, an error object is returned, shedding light on the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#getapproved-function","title":"GetApproved Function","text":"<p>The <code>GetApproved</code> method acts as a trustworthy informant, revealing the account specifically authorized to transfer a designated NFT on behalf of its owner. It serves as a vital tool for understanding transfer permissions and managing collaborative ownership scenarios.</p> <pre><code>func (c *TokenERC721Contract) GetApproved(ctx kalpsdk.TransactionContextInterface, tokenId string) (string, error) {\n    nft, err := _readNFT(ctx, tokenId)\n    if err != nil {\n        return \"\", err\n    }\n    return nft.Approved, nil\n}\n</code></pre> <p>Parameters:</p> <ul> <li>tokenId (string): The unique identifier that pinpoints the NFT for which authorization information is sought.</li> </ul> <p>Return Values:</p> <ul> <li> <p>Approved Account: A string disclosing the account granted transfer authority for the queried NFT.</p> </li> <li> <p>Error: In the event of retrieval obstacles, an error object is returned, clarifying the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#isapprovedforall-function","title":"IsApprovedForAll Function","text":"<p>The <code>IsApprovedForAll</code> method assumes the role of a meticulous gatekeeper, determining whether a designated account (operator) holds sweeping authority to manage the entire collection of NFTs belonging to a specific owner. It acts as a cornerstone for managing extensive collections and facilitating collaborative ownership structures.</p> <pre><code>func (c *TokenERC721Contract) IsApprovedForAll(ctx kalpsdk.TransactionContextInterface, owner string, operator string) (bool, error) {\n    approvalKey, _ := ctx.CreateCompositeKey(approvalPrefix, []string{owner, operator})\n    approvalBytes, err := ctx.GetState(approvalKey)\n    if len(approvalBytes) &lt; 1 {\n        return false, nil\n    }\n    approval := new(Approval)\n    _ = json.Unmarshal(approvalBytes, approval)\n    return approval.Approved, err\n}\n</code></pre> <p>Parameters:</p> <ul> <li> <p>owner (string): The account whose NFTs are potentially subject to management by an operator.</p> </li> <li> <p>operator (string): The account seeking verification of their blanket approval status.</p> </li> </ul> <p>Return Values:</p> <ul> <li> <p>bool: A boolean value unequivocally indicating whether the operator holds comprehensive approval to manage the owner's entire NFT collection.</p> </li> <li> <p>error: In the unlikely event of unforeseen challenges, an error object emerges, revealing the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#name-function","title":"Name Function","text":"<p>the <code>Name</code> method fulfills the role of a skillful archivist, divulging the distinct title bestowed upon a token collection. It serves as a fundamental means of identifying and referencing collections, fostering clarity and discoverability.</p> <pre><code>func (c *TokenERC721Contract) Name(ctx kalpsdk.TransactionContextInterface) (string, error) {\n    bytes, err := ctx.GetState(nameKey)\n    if err != nil {\n        return \"\", err\n    }\n    return string(bytes), nil\n}\n</code></pre> <p>Return Values:</p> <ul> <li> <p>string: The collection's carefully chosen name, representing its unique identity.</p> </li> <li> <p>error: In the unlikely event of retrieval obstacles, an error object surfaces to illuminate the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#symbol-function","title":"Symbol Function","text":"<p>The <code>Symbol</code> method acts as a herald, disclosing the succinct and potent symbol that serves as a collection's emblematic signature. It empowers concise identification and efficient referencing, akin to a heraldic crest in the digital realm.</p> <pre><code>func (c *TokenERC721Contract) Symbol(ctx kalpsdk.TransactionContextInterface) (string, error) {\n    bytes, err := ctx.GetState(symbolKey)\n    if err != nil {\n        return \"\", err\n    }\n    return string(bytes), nil\n}\n</code></pre> <p>Return Values:</p> <ul> <li> <p>string: The collection's meticulously chosen symbol, acting as its concise identifier and resonant emblem.</p> </li> <li> <p>error: Should retrieval obstacles arise, an error object emerges to shed light on the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#tokenuri-function","title":"TokenURI Function","text":"<p>Returns the metadata URI of an NFT.</p> <p>Parameters:</p> <ul> <li><code>tokenId</code> (string): Unique identifier for the NFT.</li> </ul> <p>Function: TokenURI</p> <pre><code>func (c *TokenERC721Contract) TokenURI(ctx kalpsdk.TransactionContextInterface, tokenId string) (string, error) {\n    nft, err := _readNFT(ctx, tokenId)\n    if err != nil {\n        return \"\", err\n    }\n    return nft.TokenURI, nil\n}\n</code></pre> <p>Returns: (string, error) - Metadata URI and error if any.</p>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#totalsupply-function","title":"TotalSupply Function","text":"<p>the <code>TokenURI</code> method plays the role of a trusty navigator, leading explorers to a digital harbor brimming with an NFT's rich metadata. It serves as a fundamental gateway to an NFT's unique traits, captivating imagery, and captivating stories.</p> <pre><code>func (c *TokenERC721Contract) TotalSupply(ctx kalpsdk.TransactionContextInterface) int {\n    iterator, _ := ctx.GetStateByPartialCompositeKey(nftPrefix, []string{})\n    totalSupply := 0\n    for iterator.HasNext() {\n        iterator.Next()\n        totalSupply++\n    }\n    return totalSupply\n}\n</code></pre> <p>Parameters:</p> <ul> <li>tokenId (string): The distinct identifier that pinpoints the specific NFT whose secrets await revelation.</li> </ul> <p>Return Values:</p> <ul> <li> <p>string: The metadata URI, a web address leading to a wellspring of descriptive details, vibrant visuals, and captivating stories.</p> </li> <li> <p>error: In the unlikely event of retrieval obstacles, an error object emerges, casting light on the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#helper-methods","title":"Helper Methods","text":""},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#checkinitialized-function","title":"checkInitialized Function","text":"<p>the <code>checkInitialized</code> method serves as a vigilant sentinel, safeguarding system integrity and ensuring the contract is in a fit state for operation. It acts as a crucial checkpoint, guaranteeing all essential setup procedures have been meticulously completed before transactions and interactions can commence.</p> <p>Returns:</p> <ul> <li> <p>bool: A boolean value indicating the initialization status of the contract:</p> <ul> <li> <p>true: The contract has been successfully initialized and is ready for use.</p> </li> <li> <p>false: The contract has not yet undergone initialization and remains inoperable.</p> </li> </ul> </li> <li> <p>error: If unforeseen challenges arise during the check, an error object surfaces, providing valuable insights into the nature of the difficulty.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#error-handling","title":"Error Handling","text":"<p>The Kalp NFT contract prioritizes exceptional user experience by meticulously incorporating error-handling mechanisms. This ensures:</p> <ul> <li> <p>Clear and actionable feedback: When operations encounter roadblocks or invalid inputs are provided, informative error messages are conveyed, empowering users to rectify mistakes and navigate the system effectively.</p> </li> <li> <p>Reduced risk: By pinpointing the source of errors, developers and system operators can swiftly identify and address potential issues, mitigating operational risks and safeguarding the system's integrity.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#events","title":"Events","text":"<p>The contract leverages events as potent messengers, broadcasting crucial information about significant actions to external applications and services. This fosters:</p> <ul> <li> <p>Real-time monitoring: Off-chain applications can remain keenly aware of contract state changes, such as NFT transfers or approvals, enabling them to react dynamically and provide users with up-to-date information.</p> </li> <li> <p>Enhanced user experience: By staying abreast of contract events, external applications can trigger relevant functionalities, such as updating user interfaces or executing automated tasks, enriching the overall user experience.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#security-considerations","title":"Security Considerations","text":"<p>Security remains paramount within the Kalp NFT ecosystem. To safeguard the contract and its users, the following measures are implemented:</p> <ul> <li> <p>Granular access control: Sensitive operations, such as minting NFTs with custom URIs or burning existing ones, are subject to rigorous access control mechanisms. This ensures that only authorized individuals or processes can execute these actions, safeguarding against unauthorized modifications and potential misuse.</p> </li> <li> <p>Input validation: To thwart common vulnerabilities, the contract meticulously validates all user-provided input parameters. This involves verifying data formats and ensuring adherence to predefined constraints, effectively preventing malicious actors from exploiting unintended loopholes within the system.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/KRC-Token-Standard/KRC-721-Token-Contract/#conclusion","title":"Conclusion","text":"<p>This KRC721 token contract provides a comprehensive set of functionalities for managing NFTs, including the creation, transfer, and querying of ownership and metadata. The above documentation offers a detailed guide for developers to effectively interact with and integrate these capabilities within their applications or platforms.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/","title":"Lottery smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#lottery-smart-contract","title":"Lottery Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#overview","title":"Overview","text":"<p>This document outlines the technical details and functionalities of the Lottery Smart Contract implemented in Go. The contract utilizes the KalpSDK to facilitate the creation, management, and execution of lottery events on a blockchain network. The contract enables authorized users to start a lottery, allows participants to buy tickets, and selects a winner randomly, awarding the prize pool to the winner.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Familiarity with Go programming language: Understanding of basic Go syntax and constructs.</p> </li> <li> <p>Basic understanding of blockchain concepts: Knowledge of smart contracts, state management, and transaction contexts.</p> </li> <li> <p>Installation of the KalpSDK: The KalpSDK must be installed and set up to interact with the blockchain network.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#contract-initialization","title":"Contract Initialization","text":"<p>StartLottery</p> <p>Initializes a new lottery with a specified ticket price. Only authorized users can start a lottery.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>lotteryID</code> (string): Unique identifier for the lottery.</p> </li> <li> <p><code>ticketPrice</code> (int): Price of a single ticket in tokens.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) StartLottery(ctx kalpsdk.TransactionContextInterface, lotteryID string, ticketPrice int) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#lottery-operations","title":"Lottery Operations","text":"<p>BuyTicket</p> <p>Allows a participant to purchase a ticket for an active lottery. The ticket price is deducted from the participant\u2019s account balance, and the lottery\u2019s prize pool is updated accordingly.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>lotteryID</code> (string): Unique identifier for the lottery.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) BuyTicket(ctx kalpsdk.TransactionContextInterface, lotteryID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No, but the participant must have sufficient balance to purchase a ticket.</li> </ul> </li> </ul> <p>PickWinner</p> <p>Randomly selects a winner from the participants of an active lottery and transfers the prize pool to the winner's account. The lottery is then marked as inactive.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>lotteryID</code> (string): Unique identifier for the lottery.</li> </ul> </li> <li> <p>Example API Invocation: <pre><code>func (s *SmartContract) PickWinner(ctx kalpsdk.TransactionContextInterface, lotteryID string) error {\n    // Function implementation\n}\n</code></pre></p> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> </ul> <p>GetLottery</p> <p>Returns the details of a specified lottery, including the list of participants, ticket price, and prize pool.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>lotteryID</code> (string): Unique identifier for the lottery.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) GetLottery(ctx kalpsdk.TransactionContextInterface, lotteryID string) (*Lottery, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>*Lottery</code>: A pointer to the Lottery structure containing the lottery details.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#event-logging","title":"Event Logging","text":"<p>The contract logs events for significant actions such as ticket purchases and winner announcements. These events can be used by off-chain applications to react to state changes.</p> <ul> <li> <p>Example Event:</p> <pre><code>event := Event{Type: \"TicketPurchased\", Detail: fmt.Sprintf(\"Client %s purchased a ticket for lottery %s\", clientID, lotteryID)}\n</code></pre> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#security-considerations","title":"Security Considerations","text":"<ul> <li> <p>Access Control: Ensure that only authorized clients (e.g., users with specific MSP IDs) can perform sensitive operations like starting a lottery or picking a winner.</p> </li> <li> <p>Input Validation: Validate input parameters to prevent issues such as insufficient funds when purchasing tickets or attempts to interact with inactive lotteries.</p> </li> <li> <p>Randomness in Winner Selection: Use cryptographically secure methods to ensure the fairness of the winner selection process.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Lottery-smart-contract/#conclusion","title":"Conclusion","text":"<p>This Lottery Smart Contract implemented in Go provides a framework for creating and managing lotteries on a blockchain network using the KalpSDK. The contract includes functionalities for initializing lotteries, allowing participants to buy tickets, and selecting a random winner. With built-in event logging and strict access control, this contract ensures secure and transparent lottery operations.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/","title":"Soulbound smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#soulbound-token-sbt-smart-contract","title":"Soulbound Token (SBT) Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#overview","title":"Overview","text":"<p>This document provides a detailed description of the Soulbound Token (SBT) smart contract implemented in Go, using the KalpSDK. The contract manages the creation, storage, and querying of non-transferable tokens (SBTs) that are permanently bound to a specific owner. The SBT contract enforces the unique and soulbound nature of these tokens, ensuring that each owner can hold only one SBT, which cannot be transferred or traded.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Familiarity with Go programming language: Knowledge of Go syntax and basic programming constructs.</p> </li> <li> <p>Understanding of blockchain concepts: Concepts such as smart contracts, state management, and transaction contexts are essential.</p> </li> <li> <p>Installation of KalpSDK: The KalpSDK must be installed and configured to interact with the blockchain network.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#contract-initialization","title":"Contract Initialization","text":"<p>Initialize</p> <p>This function sets up the initial metadata for the Soulbound Token (SBT) contract and flags the contract as initialized to prevent re-initialization.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>metadata</code> (SBTMetadata): A structure containing the metadata for the SBT, including a description.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) Initialize(sdk kalpsdk.TransactionContextInterface, metadata SBTMetadata) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required, but the contract must not have been initialized previously.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#token-operations","title":"Token Operations","text":"<p>MintSBT</p> <p>Issues a new Soulbound Token (SBT) for the caller, ensuring that the caller does not already own an SBT.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None. The caller's ID is automatically used to assign the SBT.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) MintSBT(sdk kalpsdk.TransactionContextInterface) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required, but the caller must not already possess an SBT.</li> </ul> </li> </ul> <p>QuerySBT</p> <p>Retrieves the details of an SBT based on the owner's ID and the token ID.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>owner</code> (string): The ID of the owner.</p> </li> <li> <p><code>tokenID</code> (string): The unique ID of the token.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) QuerySBT(sdk kalpsdk.TransactionContextInterface, owner string, tokenID string) (*SoulboundToken, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>*SoulboundToken</code>: A pointer to the SoulboundToken structure containing the token details.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>GetSBTByOwner</p> <p>Retrieves the SBT associated with a given owner by their ID.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>owner</code> (string): The ID of the owner whose SBT is being queried.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) GetSBTByOwner(sdk kalpsdk.TransactionContextInterface, owner string) (*SoulboundToken, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>*SoulboundToken</code>: A pointer to the SoulboundToken structure containing the token details.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#transfer-operation","title":"Transfer Operation","text":"<p>TransferSBT</p> <p>Blocks any attempt to transfer an SBT, enforcing its soulbound nature. This function will always return an error, as SBTs are non-transferable.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>from</code> (string): The ID of the current owner.</p> </li> <li> <p><code>to</code> (string): The ID of the intended recipient.</p> </li> <li> <p><code>tokenID</code> (string): The unique ID of the token.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) TransferSBT(sdk kalpsdk.TransactionContextInterface, from string, to string, tokenID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message indicating that the transfer is not allowed.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required, as the operation is inherently blocked.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#error-handling","title":"Error Handling","text":"<p>All functions within the contract include comprehensive error handling to ensure that any issues during contract execution are clearly reported. This helps developers identify and address problems during contract interaction.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#security-considerations","title":"Security Considerations","text":"<ul> <li> <p>Single Ownership Enforcement: The contract enforces that each owner can have only one SBT, preventing duplicate token creation.</p> </li> <li> <p>Non-Transferability: The contract ensures that SBTs are non-transferable, maintaining the soulbound nature of these tokens.</p> </li> <li> <p>Initialization Check: The contract includes a check to prevent re-initialization, ensuring that metadata is set only once.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Soulbound-token-smart-contract/#conclusion","title":"Conclusion","text":"<p>This Soulbound Token (SBT) smart contract provides a robust framework for creating, storing, and querying non-transferable tokens using the KalpSDK. The contract enforces the unique and soulbound nature of the tokens, ensuring that they remain permanently attached to their original owner. This documentation outlines the key functionalities and provides guidance on how to interact with the contract.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/","title":"Splitwise smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#splitwise-smart-contract","title":"Splitwise Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#overview","title":"Overview","text":"<p>This document outlines the Splitwise Smart Contract implemented in Go using the KalpSDK. The contract manages shared expenses and debts between participants. It allows users to record expenses, calculate and split the cost among participants, and settle debts. The smart contract provides a transparent and decentralized way to manage shared financial obligations.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Familiarity with Go programming language: Understanding of basic Go syntax and constructs.</p> </li> <li> <p>Basic understanding of blockchain concepts: Knowledge of smart contracts, state management, and transaction contexts.</p> </li> <li> <p>Installation of the KalpSDK: The KalpSDK must be installed and set up to interact with the blockchain network.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#contract-functions","title":"Contract Functions","text":"<p>Function: CreateExpense</p> <p>Adds a new expense to the world state with the provided details, recording the description, amount, payer, and participants.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>expenseID</code> (string): A unique identifier for the expense.</p> </li> <li> <p><code>description</code> (string): A brief description of the expense.</p> </li> <li> <p><code>amount</code> (int): The total amount of the expense.</p> </li> <li> <p><code>payer</code> (string): The ID of the participant who paid for the expense.</p> </li> <li> <p><code>participants</code> ([]string): A list of IDs of participants involved in the expense.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) CreateExpense(ctx kalpsdk.TransactionContextInterface, expenseID string, description string, amount int, payer string, participants []string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: GetExpense</p> <p>Retrieves the details of an expense from the world state using the provided expense ID.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>expenseID</code> (string): The unique identifier of the expense to retrieve.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) GetExpense(ctx kalpsdk.TransactionContextInterface, expenseID string) (*Expense, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>*Expense</code>: A pointer to the Expense structure containing the expense details.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: SplitExpense</p> <p>Calculates the individual share of each participant in the expense and records the corresponding debts in the world state.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>expenseID</code> (string): The unique identifier of the expense to split.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) SplitExpense(ctx kalpsdk.TransactionContextInterface, expenseID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: SettleDebt</p> <p>Removes a debt from the world state once it has been settled between the participants.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>from</code> (string): The ID of the participant who owed the debt.</p> </li> <li> <p><code>to</code> (string): The ID of the participant who was owed the debt.</p> </li> <li> <p><code>expenseID</code> (string): The unique identifier of the expense associated with the debt.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) SettleDebt(ctx kalpsdk.TransactionContextInterface, from string, to string, expenseID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: QueryAllDebts</p> <p>Returns all debts recorded between users in the world state. This function retrieves all debts using a query that matches the \"DEBT_\" prefix in the state database.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (s *SmartContract) QueryAllDebts(ctx kalpsdk.TransactionContextInterface) ([]Debt, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>[]Debt</code>: A slice of Debt structures containing all debts recorded between users.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#error-handling","title":"Error Handling","text":"<p>Each function in the contract includes comprehensive error handling to ensure clear reporting of issues during contract execution. This aids developers in identifying and resolving problems during contract interaction.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#security-considerations","title":"Security Considerations","text":"<ul> <li> <p>Accurate Debt Recording: The contract ensures that all debts are accurately recorded in the world state, preventing discrepancies in financial obligations between participants.</p> </li> <li> <p>Data Integrity: The contract enforces data integrity by validating the existence of expenses before performing operations like splitting or settling debts.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Splitwise-smart-contract/#conclusion","title":"Conclusion","text":"<p>The Splitwise Smart Contract provides a decentralized and transparent way to manage shared expenses and debts among participants. With functionalities for creating expenses, splitting costs, and settling debts, it offers a complete solution for managing financial obligations on the blockchain. This documentation serves as a comprehensive guide to interacting with the contract.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/","title":"Supply chain smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#supply-chain-smart-contract","title":"Supply Chain Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#overview","title":"Overview","text":"<p>This document provides a detailed description of the Supply Chain Smart Contract implemented in Go using the KalpSDK. The contract manages participants, assets, and their movements across the supply chain. It allows for the creation of participants, the manufacturing and movement of assets, and querying of assets and participants. The contract ensures transparency and traceability in the supply chain process.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Familiarity with Go programming language: Knowledge of Go syntax and basic programming constructs.</p> </li> <li> <p>Understanding of blockchain concepts: Concepts such as smart contracts, state management, and transaction contexts are essential.</p> </li> <li> <p>Installation of KalpSDK: The KalpSDK must be installed and configured to interact with the blockchain network.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#contract-functions","title":"Contract Functions","text":"<p>Function: Init</p> <p>Initializes the smart contract by setting up the counters for participants and assets.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) Init(ctx kalpsdk.TransactionContextInterface) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: CreateParticipant</p> <p>Creates a new participant in the supply chain with a unique ID.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>name</code> (string): Name of the participant.</p> </li> <li> <p><code>userType</code> (string): Type of participant (e.g., Supplier, Plant, Quality, Warehouse, Distributor, Customer).</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) CreateParticipant(ctx kalpsdk.TransactionContextInterface, name, userType string) (string, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>string</code>: The ID of the newly created participant.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: CreateAsset</p> <p>Creates a new asset in the supply chain with a unique ID and associates it with a participant (manufacturer).</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>name</code> (string): Name of the asset.</p> </li> <li> <p><code>description</code> (string): Description of the asset.</p> </li> <li> <p><code>participantID</code> (string): ID of the participant (manufacturer) creating the asset.</p> </li> <li> <p><code>price</code> (uint64): Price of the asset.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) CreateAsset(ctx kalpsdk.TransactionContextInterface, name, description, participantID string, price uint64) (string, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>string</code>: The ID of the newly created asset.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: MoveAsset</p> <p>Moves an asset from one participant to another in the supply chain.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>assetID</code> (string): ID of the asset to be moved.</p> </li> <li> <p><code>participantID</code> (string): ID of the participant to whom the asset is being moved.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) MoveAsset(ctx kalpsdk.TransactionContextInterface, assetID, participantID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: UpdateAssetStatus</p> <p>Updates the status of an asset in the supply chain.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>assetID</code> (string): ID of the asset whose status is to be updated.</p> </li> <li> <p><code>ownerID</code> (string): ID of the current owner of the asset.</p> </li> <li> <p><code>newAssetStatus</code> (string): New status to be assigned to the asset.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) UpdateAssetStatus(ctx kalpsdk.TransactionContextInterface, assetID, ownerID, newAssetStatus string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: SendToCustomer</p> <p>Sells an asset to a customer, updating the ownership and status of the asset.</p> <ul> <li> <p>Parameters:</p> <ul> <li> <p><code>assetID</code> (string): ID of the asset to be sold.</p> </li> <li> <p><code>customerID</code> (string): ID of the customer receiving the asset.</p> </li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) SendToCustomer(ctx kalpsdk.TransactionContextInterface, assetID, customerID string) error {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li><code>error</code>: Error message if the operation fails.</li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: QueryAsset</p> <p>Retrieves the details of a specific asset from the world state.</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>assetID</code> (string): ID of the asset to query.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) QueryAsset(ctx kalpsdk.TransactionContextInterface, assetID string) (*Asset, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>*Asset</code>: A pointer to the Asset structure containing the asset details.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: QueryAllAssets</p> <p>Retrieves all assets stored in the world state within a specified range.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) QueryAllAssets(ctx kalpsdk.TransactionContextInterface) ([]Asset, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>[]Asset</code>: A slice of Asset structures containing the details of all assets.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: QueryAllParticipants</p> <p>Retrieves all participants stored in the world state within a specified range.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) QueryAllParticipants(ctx kalpsdk.TransactionContextInterface) ([]Participant, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>[]Participant</code>: A slice of Participant structures containing the details of all participants.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#helper-functions","title":"Helper Functions","text":"<p>Function: GetTxTimestampChannel</p> <p>Retrieves the transaction timestamp from the blockchain.</p> <ul> <li> <p>Parameters:</p> <ul> <li>None.</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func (t *SupplyChainContract) GetTxTimestampChannel(ctx kalpsdk.TransactionContextInterface) (string, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>string</code>: The transaction timestamp as a string.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> <li> <p>Authorization Required:</p> <ul> <li>No specific authorization is required.</li> </ul> </li> </ul> <p>Function: getCounter</p> <p>Retrieves the counter value for a specific type (e.g., asset or participant).</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>assetType</code> (string): The type of counter to retrieve (e.g., \"AssetCounterNO\", \"ParticipantCounterNO\").</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func getCounter(ctx kalpsdk.TransactionContextInterface, assetType string) (int, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>int</code>: The current counter value.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> </ul> <p>Function: incrementCounter</p> <p>Increments the counter value for a specific type (e.g., asset or participant).</p> <ul> <li> <p>Parameters:</p> <ul> <li><code>assetType</code> (string): The type of counter to increment (e.g., \"AssetCounterNO\", \"ParticipantCounterNO\").</li> </ul> </li> <li> <p>Example API Invocation:</p> <pre><code>func incrementCounter(ctx kalpsdk.TransactionContextInterface, assetType string) (int, error) {\n    // Function implementation\n}\n</code></pre> </li> <li> <p>Returns:</p> <ul> <li> <p><code>int</code>: The new counter value.</p> </li> <li> <p><code>error</code>: Error message if the operation fails.</p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#error-handling","title":"Error Handling","text":"<p>All functions within the contract include comprehensive error handling to ensure that any issues during contract execution are clearly reported. This aids developers in identifying and resolving problems during contract interaction.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#security-considerations","title":"Security Considerations","text":"<ul> <li> <p>Ownership Verification: The contract ensures that only the current owner can move or update the status of an asset.</p> </li> <li> <p>Participant Validation: The contract verifies the existence and type of participants before performing operations like asset creation or movement.</p> </li> <li> <p>Data Integrity: The contract enforces data integrity by validating inputs and ensuring accurate updates to the world state.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kalp-DLT-Go-lang-Template/Supply-chain-smart-contract/#conclusion","title":"Conclusion","text":"<p>The Supply Chain Smart Contract provides a decentralized and transparent way to manage participants, assets, and their movements within a supply chain. With functionalities for creating participants and assets, moving assets, updating statuses, and querying data, it offers a complete solution for managing supply chain processes on the blockchain. This documentation serves as a comprehensive guide to interacting with the contract.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/","title":"Kush Library","text":""},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#kush-library-documentation","title":"Kush Library Documentation","text":""},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#overview","title":"Overview:","text":"<ul> <li>The KUSH-Go Library is an open-source Go-based implementation of token standards such as ERC20, ERC721, and ERC1155, designed to work seamlessly with the Kalp SDK on the Kalp Blockchain.</li> <li>It is inspired by the popular OpenZeppelin contracts used in the Ethereum ecosystem, offering familiar functionality and security standards, but in a Go environment, specifically tailored for the Kalp Chain.</li> <li>The library is ideal for developers who want to build secure and modular smart contracts for decentralized applications (dApps) on the Kalp Chain.</li> <li>It provides reusable components for token creation, management, and transfer, supporting various use cases like fungible tokens (ERC20), non-fungible tokens (ERC721), and multi-token standards (ERC1155). By leveraging the Kalp SDK, the library ensures seamless interaction with the Kalp Blockchain for transaction execution and storage.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#key-features-of-kush-go-library","title":"Key Features of KUSH-Go Library:","text":"<p>Go-based Token Standard Implementations:  -   The KUSH-Go Library implements token standards like ERC20, ERC721, and ERC1155 using Go, providing a robust and high-performance solution for building smart contracts on the Kalp Blockchain.</p> <p>ERC20 \u2013 Fungible Token Support:    -   Create and manage fungible tokens (tokens where all units are identical, like cryptocurrencies). Includes functionalities like transferring tokens, querying balances, and minting new tokens.    -   Key Functions: <code>Transfer()</code>, <code>BalanceOf()</code>, <code>Mint()</code>, and <code>Approve()</code>.</p> <p>ERC721 \u2013 Non-Fungible Token (NFT) Support:  -   Build and manage non-fungible tokens (NFTs), allowing unique assets like digital art, collectibles, and game items to be tokenized on the Kalp Blockchain.  -   Key Functions: <code>MintTokenWithUri()</code>, <code>TransferFrom()</code>, <code>OwnerOf()</code>.</p> <p>ERC1155 \u2013 Multi-Token Standard: -   Manage multiple types of tokens (both fungible and non-fungible) within a single smart contract. Perfect for applications where multiple asset types are needed, like gaming platforms or collectibles. -   Key Functions: <code>Mint()</code>,<code>MintBatch()</code>,<code>Transfer() ,TransferBatch()</code>.</p> <p>Seamless Kalp SDK Integration:  -   The library integrates with the Kalp SDK, ensuring easy interaction with the Kalp Blockchain. Developers can create and manage tokens that are stored and executed securely on the Kalp Chain, without needing to worry about low-level blockchain interactions.</p> <p>Modular and Reusable Components:    -   KUSH-Go is designed to be modular, allowing developers to easily plug in and extend functionality according to their needs. The token standards and utilities are built as reusable components for easier contract management and scalability.</p> <p>Familiar OpenZeppelin-like Structure:    -   The library mirrors the functionality and structure of OpenZeppelin contracts, making it easier for developers familiar with Ethereum and Solidity to quickly adapt to the Kalp Chain environment using Go.</p> <p>Security Features:    -   Includes built-in security features like AccessControl for role-based permissions and Pausable contracts to allow administrators to halt contract activity in case of emergencies or vulnerabilities.</p> <p>Ideal for Decentralized Applications (dApps):</p> <ul> <li>Whether you\u2019re building DeFi platforms, gaming applications, or tokenized marketplaces, KUSH-Go provides the foundational building blocks to create smart contracts for decentralized applications.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#prerequisites","title":"Prerequisites:","text":"<p>Before you start, ensure you have the following installed:</p> <ul> <li>Go (maximum version is 1.20)</li> <li>Kalp SDK: Required for interacting with the Kalp Blockchain.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#installation-and-setup","title":"Installation and SetUp:","text":""},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#to-install-the-kush-library-use-the-following-command","title":"To install the KUSH library, use the following command:","text":"<pre><code>go get github.com/thekalpstudio/kush-go/contracts/token  \n</code></pre> <p>After installation, you can import the library into your Go project:</p> <pre><code>import \"github.com/thekalpstudio/kush-go/contracts/token\"\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#to-install-the-kalp-sdk-use-the-following-command","title":"To install the Kalp SDK, use the following command:","text":"<pre><code>go get -u github.com/p2eengineering/kalp-sdk-public/kalpsdk\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#project-structure","title":"Project Structure","text":"<p>The project is structured to mirror the OpenZeppelin contract functionality, with modules for ERC20, ERC721, and ERC1155-like token standards, adapted for Kalp Chain.</p> <ul> <li>/erc20: Contains the Go-based implementation of ERC20-like tokens.</li> <li>/erc721: Contains the Go-based implementation of ERC721-like tokens.</li> <li>/erc1155: Contains the Go-based implementation of ERC1155-like tokens.</li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#example-usage","title":"Example Usage:","text":""},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#creating-a-contract","title":"Creating a Contract:","text":"<p>Two structs have to be defined here:</p> <p>Define a Go struct to represent your contract and embed contracts.TokenERC721Contract for base functionalities</p> <p>For example let's create a MyTokenContract structure which inherits  the type of token you need to use direct from Kush Library.</p> <pre><code>type MyTokenContract struct {\n    token.TokenERC721Contract\n}\n</code></pre> <p>Here TokenERC721Contract inherits all the base functionalities defined under the package of ERC721 type token.</p> <p>Embedding token. TokenERC721Contract:</p> <p>To leverage the core functionalities provided by the library, embed the token.TokenERC721Contarct type within your custom contract <code>struct</code>. This grants your contract access to all the functionalities that are defined under ERC standards.</p> <p>Define a Go struct to represent your contract and embed <code>kalpsdk.Contract</code> for base functionalities</p> <pre><code>type SmartContract struct {\n    kalpsdk.Contract\n    MyTokenContract\n}\n</code></pre> <p>Struct Creation: Begin by defining a Go structure to represent your smart contract. This <code>struct</code>will serve as the foundation for encapsulating your contract's state variables, functions, and other relevant attributes.</p> <p>Embedding <code>kalpsdk.Contra</code>ct: To leverage the core functionalities provided by the Kalp SDK, embed the <code>kalpsdk.Contract</code> type within your custom contract <code>struct</code>. This grants your contract access to essential features like transaction management, key-value storage, and more.</p>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#creating-and-starting-chaincode","title":"Creating and Starting Chaincode:","text":"<p>Create a file main. go or else write the main function logic in the contract file itself.</p> <pre><code>func main() {\n// Sample payable contract object\ncontract := kalpsdk.Contract{IsPayableContract: true}\n\n// Initialize the contract with default values\n    contract := kalpsdk.Contract{IsPayableContract: false}\n    tokenContract := token.TokenERC721Contract{}\n\n// KalpSDK Logger object for enhanced operation visibility\ncontract.Logger = kalpsdk.NewLogger()\n\n// Initialize the SmartContract chaincode\n    smartContract := &amp;SmartContract{\n        Contract:        contract,\n        MyTokenContract: MyTokenContract{tokenContract},\n        isInitialized:   false,\n    }\n\n\n\nsmartContractChaincode, err := contractapi.NewChaincode(smartContract)\n    if err != nil {\n        contract.Logger.Errorf(\"Error creating SmartContract chaincode: %v\", err)\n        log.Panicf(\"Error creating SmartContract chaincode: %v\", err)\n    }\n\n\n// Initialize the MyTokenContract chaincode\n    myTokenContract := &amp;MyTokenContract{\n        TokenERC721Contract: tokenContract,\n    }\n\n    myTokenContractChaincode, err := contractapi.NewChaincode(myTokenContract)\n    if err != nil {\n        contract.Logger.Errorf(\"Error creating MyTokenContract chaincode: %v\", err)\n        log.Panicf(\"Error creating MyTokenContract chaincode: %v\", err)\n    }\n\n    tokenChaincode, err := kalpsdk.NewChaincode(myTokenContractChaincode)\n    if err != nil {\n        contract.Logger.Errorf(\"Error creating MyTokenContract chaincode wrapper: %v\", err)\n        log.Panicf(\"Error creating MyTokenContract chaincode wrapper: %v\", err)\n    }\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#start-the-chaincode","title":"Start the Chaincode:","text":"<pre><code>// Starting the SmartContract chaincode\n    contract.Logger.Info(\"Starting the SmartContract chaincode\")\n    if err := chaincode.Start(); err != nil {\n        contract.Logger.Errorf(\"Error starting SmartContract chaincode: %v\", err)\n        log.Panicf(\"Error starting SmartContract chaincode: %v\", err)\n    } else {\n        contract.Logger.Info(\"SmartContract chaincode started successfully\")\n    }\n\n\n\n// Starting the MyTokenContract chaincode\n    contract.Logger.Info(\"Starting the MyTokenContract chaincode\")\n    if err := tokenChaincode.Start(); err != nil {\n        contract.Logger.Errorf(\"Error starting MyTokenContract chaincode: %v\", err)\n        log.Panicf(\"Error starting MyTokenContract chaincode: %v\", err)\n    } else {\n        contract.Logger.Info(\"MyTokenContract chaincode started successfully\")\n    }\n\n    // Prevent the main function from exiting\n    select {}\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#initialize-method-for-smartcontract","title":"Initialize method for SmartContract:","text":"<pre><code>func (s *SmartContract) Initialize(ctx *kalpsdk.TransactionContext, name string, symbol string) (bool, error) {\n    // Initialize the contract\n    success, err := s.MyTokenContract.Initialize(ctx, name, symbol)\n    if err != nil || !success {\n        log.Panicf(\"Error initializing contract: %v\", err)\n    }\n    s.isInitialized = true\n\n    return true, nil\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#modules","title":"Modules:","text":"<p>The ERC20 module provides functionalities similar to the ERC20 standard in Solidity but here for the Kalp Chain this is defined in go.</p> <p>Example usage:</p> <pre><code>// Mint creates new tokens and assigns them to an address\nfunc (s *SmartContract) Mint(ctx *kalpsdk.TransactionContext, amount int, recipient string) error {\n    // Check if the contract is initialized\n    if !s.isInitialized {\n        return fmt.Errorf(\"contract options need to be set before calling any function, call Initialize() to initialize contract\")\n    }\n\n    // Mint new tokens using the ERC-20 contract's Mint method\n    err := s.MyTokenContract.Mint(ctx, amount, recipient)\n    if err != nil {\n        return fmt.Errorf(\"error minting tokens: %v\", err)\n    }\n\n    log.Printf(\"Minted %d tokens to %s\\n\", amount, recipient)\n    return nil\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#erc721","title":"ERC721","text":"<p>The ERC721 module provides functionalities similar to the ERC721 standard, enabling the creation and management of non-fungible tokens (NFTs) on the Kalp Chain.</p> <p>Example usage:</p> <pre><code>// TokenCreate method for SmartContract\nfunc (s *SmartContract) TokenCreate(ctx *kalpsdk.TransactionContext, tokenId string, tokenURI string) error {\n    // Check if the contract is initialized\n    if !s.isInitialized {\n        return fmt.Errorf(\"contract options need to be set before calling any function, call Initialize() to initialize contract\")\n    }\n\n    // Example mint operation\n    token, err := s.MyTokenContract.MintWithTokenURI(ctx, tokenId, tokenURI)\n    if err != nil {\n        return err\n    }\n    log.Printf(\"Minted NFT: %+v\\n\", token)\n    return nil\n}\n\n\n\n// Balanceof checks the balance of a specific owner\nfunc (s *SmartContract) Balanceof(ctx *kalpsdk.TransactionContextInterface, owner string) int {\n    // Check if the contract is initialized\n    if !s.isInitialized {\n        return 0\n    }\n    // Check the balance using the MyTokenContract's BalanceOf method\n    balance := s.MyTokenContract.BalanceOf(*ctx, owner)    \n\n    // Return the balance\n    return balance\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#erc1155","title":"ERC1155:","text":"<p>The ERC1155 module provides functionalities for multi-token standards, allowing the management of multiple token types within a single contract on the Kalp Chain.</p> <p>Example usage:</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"log\"\n\n    \"github.com/thekalpstudio/kush-go/contracts/token\"\n    \"github.com/hyperledger/fabric-contract-api-go/contractapi\"\n    \"github.com/p2eengineering/kalp-sdk-public/kalpsdk\"\n)\n\n// MintBatch mints multiple tokens (batch) and assigns them to a recipient\nfunc (s *SmartContract) MintBatch(ctx *kalpsdk.TransactionContext, ids []string, amounts []int, recipient string) error {\n    // Check if the contract is initialized\n    if !s.isInitialized {\n        return fmt.Errorf(\"contract options need to be set before calling any function, call Initialize() to initialize contract\")\n    }\n\n    // Mint multiple tokens using the ERC-1155 MintBatch function\n    err := s.MyTokenContract.MintBatch(ctx, ids, amounts, recipient)\n    if err != nil {\n        return fmt.Errorf(\"error minting batch tokens: %v\", err)\n    }\n\n    log.Printf(\"Minted batch tokens with ids %v and amounts %v to %s\\n\", ids, amounts, recipient)\n    return nil\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#modules-and-functions","title":"Modules and Functions:","text":"<p><code>ERC20</code>:</p> <ul> <li> <p>func (s SmartContract) Mint (ctx kalpsdk.TransactionContext, amount int, recipient string) error: Creates a new ERC20 token.</p> </li> <li> <p>func (s SmartContract) Transfer (ctx kalpsdk.TransactionContext, recipient string, amount int) error: Transfers tokens to a specified address.</p> </li> <li> <p>func (s SmartContract) BalanceOf(ctx kalpsdk.TransactionContext, owner string) uint256: Returns the balance of a specified account.</p> </li> </ul> <p><code>ERC721</code>:</p> <ul> <li>func (s SmartContract) MintNFT(ctx kalpsdk.TransactionContext, tokenId string, tokenURI string, recipient string) error: Creates a new ERC721 token.</li> <li>func (s SmartContract) TransferNFT(ctx kalpsdk.TransactionContext, from string, to string, tokenId string) error: Transfers tokens to a specified address.</li> <li>func (s SmartContract) BalanceOfNFT(ctx kalpsdk.TransactionContext, owner string) uint256: Returns the balance of a specified account.</li> </ul> <p><code>ERC1155</code>:</p> <ul> <li> <p>func (s SmartContract) MintBatch(ctx kalpsdk.TransactionContext, ids [] string, amounts []int, recipient string) error: Mints the nft in batch.</p> </li> <li> <p>func (s SmartContract) TransferBatch(ctx kalpsdk.TransactionContext, from string, to string, ids [] string, amounts []int) error: Transfers tokens to a specified address.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#architecture","title":"Architecture:","text":"<p>This architecture provides a high-level understanding of how the KUSH-Go Library interacts with the Kalp SDK and the Kalp Blockchain to facilitate the creation and management of Tokens using ERC satndards like smart contracts. </p> <p></p>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#flow-of-operations","title":"Flow of Operations","text":"<ol> <li>Smart Contract Layer (ERC20,721,1155 modules)</li> <li>When you use the KUSH-Go library to create or manage NFTs, you interact with the ERC721 Module.<ul> <li>Example: Calling <code>MintTokenWithUri()</code> triggers the process of minting a new NFT, which is passed to the Kalp SDK for blockchain execution.</li> </ul> </li> <li>Kalp SDK</li> <li>The Kalp SDK facilitates communication between the KUSH-Go library and the Kalp Blockchain.<ul> <li>It ensures that the smart contract operations (like minting and transferring NFTs) are securely executed on the blockchain and that the token data is stored properly.</li> </ul> </li> <li>Kalp Blockchain</li> <li>The Kalp Blockchain processes and records the transactions, maintaining the ledger of token ownership, minting, and transfers.</li> </ol>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#license","title":"License:","text":"<p>This project is licensed under the MIT License. See the <code>LICENSE</code> file for more information.</p> <p>This documentation provides a comprehensive overview of the KUSH-Go Library, guiding users through the setup, installation, and usage of the library in their projects. For more detailed examples and usage scenarios please refer to the modules and example usage</p> <p>This architecture provides a high-level understanding of how the KUSH-Go Library interacts with the Kalp SDK and the Kalp Blockchain to facilitate the creation and management of Tokens using ERC satndards like smart contracts. </p>"},{"location":"Dev-documentation/Kalp-DLT/Kush-Library/Kush-Library/#conclusion","title":"Conclusion","text":"<p>The KUSH-Go Library is a robust and flexible solution for developers looking to build decentralized applications on the Kalp Blockchain using Go. By offering ERC20, ERC721, and ERC1155 token standards, KUSH-Go provides familiar yet high-performance tools for creating and managing both fungible and non-fungible tokens. Seamless integration with the Kalp SDK, combined with modular and reusable components, ensures a smooth development experience, while built-in security features like role-based access control further enhance the reliability of smart contracts. Whether you're building DeFi platforms, gaming applications, or tokenized marketplaces, KUSH-Go is an ideal library that simplifies the development process on the Kalp Chain.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/","title":"Deploy the smart contract","text":"<p>Reference</p> <p>Warning</p> <p>Supported Smart Contract File Formats</p> <p>Please note that we only support the following file formats for uploading custom smart contracts:</p> <ul> <li><code>.tar.gz</code></li> <li><code>.tar.xz</code></li> <li><code>.zip</code></li> </ul> <p>Ensure that your smart contract files are compressed in one of the above formats before uploading. Files in other formats will not be accepted.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#how-to-deploy-a-smart-contract-on-kalp-studio","title":"How to Deploy a Smart Contract on Kalp Studio","text":"<p>For detailed steps on how to deploy a smart contract using Kalp Studio, refer to the Kalp Instant Deployer documentation.</p> <p>This guide provides an overview of the smart contract deployment process and covers the following:</p> <ul> <li>Setting up your environment</li> <li>Uploading your smart contract</li> <li>Configuring deployment settings</li> <li>Deploying the contract on the desired network</li> </ul> <p>Visit the documentation for a comprehensive step-by-step tutorial.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#how-to-deploy-a-smart-contract-on-kalp-studio_1","title":"How to Deploy a Smart Contract on Kalp Studio","text":"<p>Deploying a smart contract on Kalp Studio is a streamlined process that involves a few simple steps. This guide will walk you through the entire procedure, using the screenshots provided as visual aids.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#step-1-access-the-kalp-studio","title":"Step 1: Access the Kalp Studio","text":"<p>Log in to the Kalp Studio Platform and access the Dashboard.</p> <p></p> <p>Click on Get Started and the Kalp Instant Deployer dashboard will appear.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#dashboard-overview","title":"Dashboard Overview","text":"<p>When you first log in to KALP Studio, you'll be greeted by the dashboard. Here, you can see various options like \"Dashboard,\" \"Smart Contract,\" \"API Gateway,\" \"Transaction Monitoring,\" and more on the left-hand side menu.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#subscribing-to-the-smart-contract-deployer","title":"Subscribing to the Smart Contract Deployer","text":"<p>To begin deploying a smart contract, click the \"Subscribe\" button under the \"Smart Contract Deployer\" section. This will allow you to access the smart contract deployment tools.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#step-2-creating-a-new-smart-contract","title":"Step 2: Creating a New Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#building-smart-contracts","title":"Building Smart Contracts","text":"<p>After subscribing, you'll see the main deployment screen. Click on the \"Create New\" button to start building a smart contract.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#entering-smart-contract-details","title":"Entering Smart Contract Details","text":"<p>In this step, you need to enter the details of your smart contract:</p> <ul> <li> <p>Name: Enter a name for your smart contract.</p> </li> <li> <p>Category: Choose a category for your smart contract.</p> </li> <li> <p>Description: Optionally, you can add a description for your smart contract.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#step-3-uploading-the-extension-file","title":"Step 3: Uploading the Extension File","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#uploading-files","title":"Uploading Files","text":"<p>Once the details are filled in, you will be prompted to upload an extension file. You can drag and drop your file into the designated area or browse your computer to select the file. The supported formats include .tar.gz, .tar.xz, and .zip, with a maximum size of 50 MB.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#successful-upload-confirmation","title":"Successful Upload Confirmation","text":"<p>After successfully uploading your file, you will see a confirmation message. If needed, you can change the file at this stage.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#step-4-selecting-a-template","title":"Step 4: Selecting a Template","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#kalp-template-selection","title":"KALP Template Selection","text":"<p>You can choose from a list of ready-to-use templates offered by KALP Studio. These templates can be selected from here and directly the smart contract is deployed, and amended as necessary before re-uploading to obtain API endpoints. This step helps you directly deploy smart contracts using pre-built templates.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#step-5-reviewing-and-deploying","title":"Step 5: Reviewing and Deploying","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#review-details","title":"Review Details","text":"<p>Review all the details of your smart contract, including the name, category, description, and selected template. Make sure everything is correct before proceeding.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Deploy-the-smart-contract/#deployment","title":"Deployment","text":"<p>Finally, click on \"Continue\" to deploy your smart contract. You will receive a confirmation message indicating that the new smart contract has been successfully deployed.</p> <p></p> <p>Deploying a smart contract on Kalp Studio is a user-friendly process that involves subscribing to the smart contract deployer, entering contract details, uploading the necessary files, selecting a template, and reviewing before deploying. Follow these steps, and you'll have your smart contract deployed in no time.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/","title":"Interacting with smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#interacting-with-smart-contract","title":"Interacting with smart contract","text":"<p>Interacting with blockchain through smart contract is possible generating API endpoints and kalp studio helps you in creating it and also help you navigate the list of smart contracts.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#how-to-generate-api-endpoints","title":"How to generate API endpoints?","text":"<p>API endpoints are essential for integrating and automating various processes in blockchain development. Kalp Studio provides a robust platform that allows developers to efficiently create, manage, and generate API endpoints for their smart contracts.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#login-to-kalp-studio","title":"Login to Kalp Studio","text":"<p>Navigate to the Kalp Studio login page and enter your credentials to access your dashboard. Click on Build Smart Contract.</p> <p></p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#access-the-api-gateway-section","title":"Access the API Gateway Section","text":"<p>On the left-hand menu, select \"API Gateway.\"</p> <p></p> <p></p> <p>If you haven't subscribed to any API Gateway, you'll see a message prompting you to subscribe.</p> <p>Note</p> <p>To create and manage API endpoints, you need to subscribe to one of the plans offered by Kalp Studio. Ensure you upgrade your plan if you're currently on the free tier to access more features and higher limits.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#create-or-select-a-smart-contract","title":"Create or Select a Smart Contract","text":"<p>Once subscribed, you can manage and generate API endpoints for your smart contracts. Select the desired smart contract from the list or create a new one.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#generate-endpoints","title":"Generate Endpoints","text":"<p>For the selected smart contract, click \"Generate Endpoints.\" This action will create the necessary API endpoints.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#endpoint-generated","title":"Endpoint Generated","text":"<p>Once you select generate endpoint, a pop-up will appear, notifying that the endpoint has been generated.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#view-and-manage-endpoints","title":"View and Manage Endpoints","text":"<p>After generating the endpoints, you can view and manage them. The status of each endpoint (success or failure) will be displayed, along with details like the network and blockchain used.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#check-and-use-api-parameters","title":"Check and Use API Parameters","text":"<p>Click on \"Check Params\" to view the details and parameters for each API endpoint. This will help you understand how to integrate and use these endpoints in your applications.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#how-to-navigate-to-the-list-of-smart-contract","title":"How to Navigate to the List of Smart Contract?","text":"<p>Navigating the Kalp Studio platform to access the smart contract list is a straightforward process. Follow these steps to seamlessly move through the dashboard and find the information you need.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#step-by-step-guide","title":"Step-by-Step Guide","text":"<p>Access the Dashboard:</p> <p>Upon logging into Kalp Studio, you will land on the Dashboard. The dashboard provides an overview of your activities and quick access to essential features.</p> <p></p> <p>Locate the Sidebar Menu: On the left-hand side, you will find a vertical sidebar menu. This menu contains various options including:</p> <ul> <li> <p>Dashboard</p> </li> <li> <p>Credits</p> </li> <li> <p>Docs</p> </li> <li> <p>Wallet</p> </li> <li> <p>Faucet</p> </li> <li> <p>Help and Support</p> </li> </ul> <p>Select the 'Smart Contract' Option:</p> <p>Click on the Smart Contract tab in the sidebar. This will redirect you to the section dedicated to managing and deploying smart contracts.</p> <p></p> <p>Navigate to API Gateway:</p> <p>Within the Smart Contract section, look for the API Gateway tab. Clicking on this will bring you to the page where you can manage API endpoints related to your smart contracts.</p> <p></p> <p>View Smart Contract List:</p> <p>The API Gateway page will display a list of smart contracts you have created. This list includes details such as:</p> <ul> <li> <p>ID</p> </li> <li> <p>Name</p> </li> <li> <p>Category</p> </li> <li> <p>Status</p> </li> <li> <p>Network</p> </li> <li> <p>Blockchain</p> </li> <li> <p>Creation Date</p> </li> <li> <p>Actions available (e.g., Generate Endpoint, Re-Generate Endpoint)</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#key-features-on-the-smart-contract-list-page","title":"Key Features on the Smart Contract List Page","text":"<ul> <li>Search and Filter:</li> </ul> <p>Use the search bar and filters to quickly find specific smart contracts.</p> <ul> <li>Actions:</li> </ul> <p>Perform actions such as generating or re-generating endpoints for your smart contracts.</p> <ul> <li>Status Monitoring:</li> </ul> <p>Easily monitor the status of your smart contracts to ensure they are active and functioning correctly.</p> <ul> <li>Pagination:</li> </ul> <p>If you have numerous smart contracts, use the pagination controls at the bottom to navigate through the pages.</p> <p>By following these steps, you can efficiently navigate to the smart contract list within Kalp Studio, manage your smart contracts, and utilize the platform's full potential.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#postman-testing-for-kalp-smart-contract-api-endpoints","title":"Postman Testing for Kalp Smart Contract API Endpoints","text":"<p>Following successful smart contract deployment and API endpoint generation within Kalp Studio, delve into the essential steps for testing these endpoints using Postman:</p> <p>1 .  Reading from the Smart Contract</p> <p>Kalp Studio enables efficient data retrieval from deployed smart contracts using  read-only methods. These methods allow your application to query the blockchain ledger without modifying its state.</p> <p>Example:  To retrieve a user's account balance, you would invoke the  <code>ClientAccountBalance</code>  function through the generated API endpoint. This function would fetch the relevant data from the ledger and return it to your application.</p> <p>By leveraging read-only methods, you can access crucial information from the blockchain without altering its state, ensuring data integrity and facilitating various application functionalities.</p> <p></p> <p>2 .  Writing to the Smart Contract</p> <p>Kalp Studio empowers developers to perform  write operations, which involve modifying the state of the blockchain ledger through smart contract interactions. These operations typically involve sending transactions to specific contract functions provided by the Kalp SDK.</p> <p>Example:  To transfer tokens, you would utilize the appropriate function (e.g.,  <code>Transfer</code>) through the generated API endpoint. This function would initiate a transaction on the blockchain, deducting tokens from the sender's account and crediting them to the recipient's account.</p> <p></p> <p>3 .  Transaction Management:  With the Kalp SDK, developers can efficiently manage transactions on the blockchain network. It provides functions for submitting transactions, querying transaction information, and retrieving transaction history. This simplifies the process of interacting with the blockchain and ensures the integrity of transactional operations.</p> <p>Example:  All the Functions provided as:  <code>PutStateWithKYC, DelStateWithoutKYC, DelStateWithKYC, GetState, GetTxID, GetChannelD, SetEvent, GetUserID.</code></p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Interacting-with-smart-contract/#conclusion","title":"Conclusion","text":"<p>You're now ready to begin your journey as a Kalp blockchain developer. Experiment with different types of smart contracts, explore the functionalities offered by the Kalp SDK, and start building innovative DApps on the Kalp blockchain.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Test-the-smart-contract/","title":"Test the smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Test-the-smart-contract/#test-the-smart-contract","title":"Test the Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Test-the-smart-contract/#smart-contract-verification-and-testing","title":"Smart Contract Verification and Testing","text":"<p>Step 1: Verify your smart contract's syntax and functionality by compiling it using the following command:</p> <pre><code>$ go build .\n</code></pre> <p>Step 2: A successful compilation signifies that your code adheres to Go language syntax rules and is free of errors.</p> <p>Step 3: Proceed to test your smart contract to ensure its behavior aligns with your expectations. Utilize appropriate testing frameworks or unit tests to simulate interactions with your smart contract and verify its outputs. This step is crucial for identifying and rectifying any potential issues before deployment.</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/","title":"Write the smart contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#write-the-smart-contract","title":"Write the Smart Contract","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#overview","title":"Overview","text":"<p>We require Kalp SDK to a comprehensive Golang package that simplifies the development of smart contracts on the Kalp blockchain network. It is specifically designed to enable developers to write and create Aa Kalp-blockchain-compliant smart contracts with a set of powerful functionalities.</p>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Golang installation and setup</p> <p>A recent version of Go is recommended preferably 1.19 or earlier 1.20. Compatibility with newer versions might not be guaranteed for all Kalp functionalities.</p> </li> <li> <p>Kalp Software Development Kit (SDK) Installation:</p> <ul> <li> <p>Installation: Install the Kalp SDK by following the official installation instructions provided by the Kalp team. These instructions may involve downloading a pre-built binary or building the SDK from the source code.</p> </li> <li> <p>Documentation: Familiarize yourself with the Kalp SDK documentation, which outlines available functionalities, usage examples, and best practices for interacting with the Kalp platform through your Go applications.</p> </li> </ul> </li> <li> <p>Basic Understanding of Blockchain Fundamentals:</p> <p>Possess a basic understanding of blockchain networks, including concepts like distributed ledgers, consensus mechanisms, and smart contracts.</p> </li> <li> <p>Go Programming Proficiency:</p> <p>Prior experience and proficiency in the Go programming language are essential prerequisites for contributing to Kalp development. This includes understanding core Go syntax, data structures, control flow statements, and error-handling mechanisms.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#set-up-your-development-environment","title":"Set up your Development Environment","text":"<ul> <li> <p>Download and install the appropriate Golang binary for your operating system from the official Golang download page:  https://go.dev/doc/install. Follow the provided installation instructions to ensure proper integration with your system.</p> </li> <li> <p>Set up your Go workspace, with the following process:</p> <ul> <li> <p>GOPATH: Set the <code>GOPATH</code> environment variable to define your preferred location for storing Go source code, compiled packages, and downloaded dependencies. It's recommended to choose a dedicated directory outside your system directories (e.g., <code>/home/your_username/go</code>).</p> </li> <li> <p>PATH Update: Add the <code>$GOPATH/bin</code> directory to your system's <code>PATH</code> environment variable. This allows you to execute Go commands (like <code>go build</code>, <code>go run</code>) from any terminal location without specifying the full path.</p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#creating-and-starting-chaincode","title":"Creating and Starting Chaincode","text":"<ol> <li> <p>Create a new directory for your project.</p> <ol> <li> <p>Execute the following command to create a new directory named <code>my-smart-contract</code></p> </li> <li> <p>Change the directory into the newly created project directory.</p> </li> </ol> </li> </ol> <pre><code>$ mkdir my-smart-contract\n$ cd my-smart-contract\n</code></pre> <ol> <li>Initialize a new Go module: Within the <code>my-smart-contract</code> directory, run the following command to initialize a new Go module named <code>my-smart-contract</code>:</li> </ol> <p><pre><code>$ go mod init my-smart-contract\n</code></pre> 1.  Getting Started with Kalp-SDK: Use the <code>go get</code> command to download and install the Kalp SDK library:</p> <pre><code>$ go get -u github.com/p2eengineering/kalp-sdk-public/kalp\n</code></pre> <p>Response:</p> <pre><code>go: downloading golang.org/x/exp v0.0.0-20240222234643-814bf88cf225\ngo: downloading golang.org/x/sys v0.17.0\ngo: downloading google.golang.org/grpc v1.62.0\ngo: downloading golang.org/x/net v0.21.0\ngo: downloading google.golang.org/genproto/googleapis/rpc v0.0.0-20240221002015-b0ce06bbee7c\ngo: downloading google.golang.org/genproto v0.0.0-20240221002015-b0ce06bbee7c\ngo: downloading github.com/go-openapi/spec v0.20.14\ngo: downloading github.com/go-openapi/swag v0.22.9\ngo: downloading google.golang.org/genproto v0.0.0-20240213162025-012b6fc9bca9\ngo: downloading golang.org/x/mod v0.15.0\ngo: added github.com/go-openapi/jsonpointer v0.20.2\ngo: added github.com/go-openapi/jsonreference v0.20.4\ngo: added github.com/go-openapi/spec v0.20.14\ngo: added github.com/go-openapi/swag v0.22.9\ngo: added github.com/gobuffalo/envy v1.10.2\ngo: added github.com/gobuffalo/packd v1.0.2\ngo: added github.com/gobuffalo/packr v1.30.1\ngo: added github.com/golang/protobuf v1.5.3\ngo: added github.com/hyperledger/fabric-chaincode-go v0.0.0-20240124143825-7dec3c7e7d45\ngo: added github.com/hyperledger/fabric-contract-api-go v1.2.2\ngo: added github.com/hyperledger/fabric-protos-go v0.3.3\ngo: added github.com/joho/godotenv v1.5.1\ngo: added github.com/josharian/intern v1.0.0\ngo: added github.com/konsorten/go-windows-terminal-sequences v1.0.3\ngo: added github.com/mailru/easyjson v0.7.7\ngo: added github.com/p2eengineering/kalp-sdk-public v0.0.0-20240118070807-283512298976\ngo: added github.com/rogpeppe/go-internal v1.12.0\ngo: added github.com/sirupsen/logrus v1.9.3\ngo: added github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb\ngo: added github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415\ngo: added github.com/xeipuuv/gojsonschema v1.2.0\ngo: added golang.org/x/exp v0.0.0-20240222234643-814bf88cf225\ngo: added golang.org/x/mod v0.15.0\ngo: added golang.org/x/net v0.21.0\ngo: added golang.org/x/sys v0.17.0\ngo: added golang.org/x/text v0.14.0\ngo: added google.golang.org/genproto v0.0.0-20240213162025-012b6fc9bca9\ngo: added google.golang.org/genproto/googleapis/rpc v0.0.0-20240221002015-b0ce06bbee7c\ngo: added google.golang.org/grpc v1.62.0\ngo: added google.golang.org/protobuf v1.32.0\ngo: added gopkg.in/yaml.v2 v2.4.0\ngo: added gopkg.in/yaml.v3 v3.0.1\n</code></pre> <ol> <li>Create a new Go source file<code>.go</code> within your project directory. This file will house the core logic of your smart contract. Utilize your preferred text editor or IDE to create the file and ensure it's saved with the <code>.go</code> extension.</li> </ol> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"github.com/p2eengineering/kalp-sdk-public/kalpsdk\"\n)\n\ntype SmartContract struct {\n     kalpsdk.Contract\n}\n\nfunc (sc *SmartContract) ExecuteTransaction() {\n    // Implement the logic for executing transactions\n    fmt.Println(\"Executing transaction...\")\n}\n\nfunc (c *SmartContract) Init(ctx kalpsdk.TransactionContextInterface) error {\n// Initialization logic return nil\n}\n</code></pre> <p>This newly created file will encompass the following core elements:</p> <ul> <li> <p>Package Declaration: <code>package main</code>: This line specifies that the code within this file belongs to the <code>main</code> package, which is the entry point for your smart contract application.</p> </li> <li> <p>Imports:</p> <ul> <li> <p><code>fmt</code>: This import statement allows you to utilize the <code>fmt</code> package, providing functionalities for formatted printing and input/output operations.</p> </li> <li> <p><code>github.com/p2eengineering/kalp-sdk-public/kalpsdk</code>: This import statement brings the Kalp SDK library into your project, granting access to the necessary functionalities for interacting with the Kalp blockchain ecosystem.</p> </li> </ul> </li> <li> <p>Smart Contract Definition: <code>type SmartContract struct { ... }</code>: This part defines a custom struct named <code>SmartContract</code> which serves as the blueprint for your smart contract. It embeds the <code>kalpsdk.Contract</code> type, inheriting functionalities offered by the Kalp SDK framework.</p> </li> <li> <p>Transaction Execution Function: <code>func (sc *SmartContract) ExecuteTransaction() { ... }</code>: This function, named <code>ExecuteTransaction</code>, represents the core logic that will be executed whenever a transaction interacts with your smart contract. Customize this function to encapsulate the specific business logic your smart contract is designed to handle.</p> </li> <li> <p>Initialization Function: <code>func (c *SmartContract) Init(ctx kalpsdk.TransactionContextInterface) error { ... }</code>: This function, named <code>Init</code>, serves as the initialization entry point for your smart contract. It typically defines any setup tasks or initialization logic required for your smart contract to function correctly. It takes a <code>kalpsdk.TransactionContextInterface</code> argument, providing access to contextual information about the ongoing transaction.</p> </li> <li> <p>Create <code>main.go</code> file in the following way.</p> </li> </ul> <pre><code>package main\n\nimport (\n    \"log\"\n\n    \"github.com/p2eengineering/kalp-sdk/kalpsdk\"\n)\n\nfunc main() {\n\n    contract := kalpsdk.Contract{IsPayableContract: true}\n\n    contract.Logger = kalpsdk.NewLogger()\n    chaincode, err := kalpsdk.NewChaincode(&amp;SmartContract{contract})\n    contract.Logger.Info(\"My KAPL SDK sm4\")\n\n    // Create a new instance of your KalpContractChaincode with your smart contract\n    // chaincode, err := kalpsdk.NewChaincode(&amp;SmartContract{kalpsdk.Contract{IsPayableContract: true}})\n    // kalpsdk.NewLogger()\n    if err != nil {\n        log.Panicf(\"Error creating KalpContractChaincode: %v\", err)\n    }\n\n    // Start the chaincode\n    if err := chaincode.Start(); err != nil {\n        log.Panicf(\"Error starting chaincode: %v\", err)\n    }\n</code></pre> <p>The <code>main.go</code> file stands as the conductor that orchestrates the initialization and execution of your smart contract within the Kalp blockchain environment. It serves as the entry point for your application, bringing your carefully crafted smart contract logic to life. Here's a detailed explanation of its structure:</p> <ul> <li> <p>Necessary Imports:</p> <ul> <li> <p>log package: This package empowers you to issue logging messages, providing valuable insights into the execution flow and potential errors for debugging purposes.</p> </li> <li> <p>github.com/p2eengineering/kalp-sdk/kalpsdk package: This import statement grants access to the essential Kalp SDK functionalities for interacting with the blockchain network and managing your smart contract.</p> </li> </ul> </li> <li> <p>The main Function: This function serves as the starting point for your application when it's executed. It undertakes the following crucial tasks:</p> </li> <li> <p>Contract Configuration:</p> <ul> <li> <p>contract := kalpsdk.Contract{IsPayableContract: true} : This line initializes a new <code>Contract</code> object, defining key properties of your smart contract. The <code>IsPayableContract: true</code> setting designates that your contract will be capable of receiving payments from users.</p> </li> <li> <p>contract.Logger = kalpsdk.NewLogger() : This statement creates a new logger instance and assigns it to the contract, enabling you to generate logging messages for tracking events and debugging.</p> </li> </ul> </li> <li> <p>Chaincode Instantiation:</p> <ul> <li> <p>chaincode, err := kalpsdk.NewChaincode(&amp;SmartContract{contract}) : This line constructs a new instance of the <code>KalpContractChaincode</code> type. It integrates your custom <code>SmartContract</code> implementation, effectively bridging your contract logic with the Kalp SDK framework.</p> </li> <li> <p>contract.Logger.Info(\"My KAPL SDK sm4\") : This statement logs an informative message using the logger, indicating that the chaincode is initialized and ready to commence operations.</p> </li> </ul> </li> <li> <p>Crucial Error Handling:if err != nil { ... } blocks: These conditional blocks diligently check for potential errors during chaincode creation and startup. If errors occur, the <code>panicf</code> the function is invoked, terminating execution with an informative error message. This assertive error handling safeguards the integrity of your application and facilitates debugging efforts.</p> </li> <li> <p>Chaincode Activation: if err := chaincode.Start(); err != nil { ... } : This block calls the <code>Start()</code> function on the instantiated chaincode, triggering the execution of your smart contract within the Kalp blockchain environment. Once again, error handling is incorporated to gracefully address any issues that might impede chaincode startup.</p> </li> </ul> <p>Payment Tracking for Payable Contracts</p> <p>Pass your contract struct as an argument to the NewChaincode _function and specify whether the contract is payable or not.  This places the external dependencies for your smart contract into a local <code>vendor</code> directory.</p> <pre><code>$ go mod vendor\n</code></pre> <ol> <li>Folder Structure: After Executing the above command the folder Structure shows up as below:</li> </ol> <pre><code>Folder name\n\u251c\u2500\u2500vendor\n\u251c\u2500\u2500go.mod\n\u251c\u2500\u2500go.sum\n\u251c\u2500\u2500main.go\n\u2514\u2500\u2500 contract\n    \u2514\u2500\u2500 contract.go\n</code></pre> <ol> <li>Save your changes.</li> </ol>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#implementation-steps-with-kalp-sdk","title":"Implementation Steps with Kalp SDK","text":"<ol> <li>Define a New Go Struct: Represent your contract with a new Go struct and embed the <code>kalpsdk.Contract</code> struct to inherit base contract functionalities.</li> </ol> <pre><code>type MyContract struct {\nkalpsdk.Contract\n}\n</code></pre> <ol> <li>Implement the Contract Interface: Define the <code>Init</code> and <code>Invoke</code> methods for initialization logic and invocation handling.</li> </ol> <pre><code>func (c *MyContract) Init(ctx kalpsdk.TransactionContextInterface) error {\n// Initialization logic return nil\n}\nfunc (c *MyContract) Invoke(ctx kalpsdk.TransactionContextInterface, data string) error {\n// Invoke logic return nil\n}\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#blockchain-data-management","title":"Blockchain Data Management","text":"<p>This section details the core functionalities available for managing data on the blockchain:</p> <p>Writing to the Blockchain:</p> <ul> <li> <p>PutStateWithKyc : This function facilitates writing data onto the blockchain ledger. Crucially, it enforces mandatory KYC (Know Your Customer) verification as part of the write operation, ensuring compliance with regulatory requirements or specific platform policies.</p> </li> <li> <p>PutStateWithoutKyc : This function enables writing data to the blockchain ledger. Unlike its counterpart, it bypasses the KYC verification step, potentially catering to situations where regulatory constraints are not applicable or KYC checks have already been performed at an earlier stage.</p> </li> </ul> <p>Reading from the Blockchain:</p> <ul> <li>GetState : This function retrieves the data from the blockchain ledger. It allows querying the current state of the ledger to obtain information relevant to your application's needs.</li> </ul> <p>Deleting from the Blockchain:</p> <ul> <li> <p>DelStateWithKyc : This function enables deleting data from the blockchain ledger. Similar to <code>PutStateWithKyc</code>, it enforces mandatory KYC verification before proceeding with the deletion operation.</p> </li> <li> <p>DelStateWithoutKyc : This function allows the deleting data from the blockchain ledger. Just as with <code>PutStateWithoutKyc</code>, it bypasses the KYC verification step, potentially catering to specific scenarios where deletion is permitted without additional verification.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#sample-code-examples","title":"Sample Code Examples","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#writing-to-the-blockchain","title":"Writing to the Blockchain","text":""},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#putstatewithkyc","title":"PutStateWithKyc","text":"<pre><code>err := ctx.PutStateWithKyc(\"myKey\", []byte(\"myValue\")) \nif err != nil {\n  // Handle error \n } else {\n  // Data successfully written to the blockchain with KYC verification\n }\n</code></pre>"},{"location":"Dev-documentation/Kalp-DLT/Smart-Contract-Write-Test-Deploy-Interact/Write-the-smart-contract/#putstatewithoutkyc","title":"PutStateWithoutKyc","text":"<pre><code>err := ctx.PutStateWithoutKyc(\"myKey\", []byte(\"myValue\"))\nif err != nil {\n    // Handle error\n} else {\n    // Data successfully written to the blockchain without KYC verification\n}\n</code></pre> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/","title":"Kalp Golang SDK","text":""},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#kalp-golang-sdk","title":"Kalp Golang SDK","text":"<p>This documentation provides an in-depth guide to the Kalp Software Development Kit (SDK), tailored for developers aiming to interact with the Kalp blockchain network.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#overview","title":"Overview","text":"<p>The Kalp SDK is engineered to streamline the development process for Kalp blockchain applications. It offers a suite of tools and functionalities that enable developers to efficiently read and write data, manage transactions, perform KYC checks, track payments for payable contracts, and enhance debugging through logger functionality.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#key-features","title":"Key Features","text":"<p>The Kalp SDK empowers developers with a robust suite of functionalities designed to simplify and enhance smart contract interaction:</p> <ul> <li> <p>Data Management:: Key-Value Storage: Efficiently store and retrieve data on the blockchain using a key-value pair structure. This functionality allows persistent data management within your smart contracts.</p> </li> <li> <p>Transaction Handling:: Comprehensive Transaction Management: Seamlessly submit, query, and retrieve the history of transactions associated with your smart contracts. This comprehensive suite of tools streamlines transaction management workflows.</p> </li> <li> <p>KYC Integration:: Integrated KYC Checks: Enforce compliance with regulatory requirements or implement access control mechanisms by integrating KYC verification processes directly within your smart contracts.</p> </li> <li> <p>Payment Tracking:: Streamlined Payment Monitoring: Effortlessly track payments initiated through your smart contracts, particularly within the context of payable contracts. This functionality facilitates accurate record-keeping and financial reconciliation.</p> </li> <li> <p>Debugging Support:: Enhanced Logging: Gain valuable insights into the behavior and execution of your smart contracts through comprehensive logging capabilities. This functionality aids in debugging and troubleshooting potential issues.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following installed:</p> <p>Go Programming Language: Kalp blockchain contracts are written in Go. Make sure you have Go installed on your system. Download Go.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#kalp-sdk-installation","title":"Kalp SDK Installation","text":"<p>Integrating the Kalp SDK into your project is a breeze. To install the Kalp-SDK, use the following Go command:</p> <pre><code>go get -u github.com/p2eengineering/kalp-sdk-public/kalpsdk\n</code></pre> <p>This command utilizes the <code>go get</code> package management tool within Go to download and install the Kalp SDK from the specified GitHub repository. The <code>-u</code> flag ensures you receive the latest available version.</p> <p>Done! The Kalp SDK is ready to be imported and utilized within your Go project, empowering you to interact with Kalp smart contracts and leverage the platform's functionalities.</p> <p>Note</p> <p>The SDK is compatible with_ Go version 1.20__. For newer versions of Go, update your <code>_go.mod_</code> file to specify version 1.20.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#examples","title":"Examples","text":""},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#creating-a-contract","title":"Creating a Contract","text":"<p>Define a Go struct to represent your contract and embed <code>kalpsdk.Contract</code> for base functionalities.</p> <pre><code>type MyContract struct {\n    kalpsdk.Contract\n}\n</code></pre> <p>Struct Creation: Begin by defining a Go struct to represent your smart contract. This <code>struct</code>will serve as the foundation for encapsulating your contract's state variables, functions, and other relevant attributes.</p> <p>Embedding <code>**kalpsdk.Contract**</code>: To leverage the core functionalities provided by the Kalp SDK, embed the <code>kalpsdk.Contract</code> type within your custom contract <code>struct</code>. This grants your contract access to essential features like transaction management, key-value storage, and more.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#implementing-the-contract-interface","title":"Implementing the Contract Interface","text":"<p>Implement <code>Init</code> and <code>Invoke</code> methods for contract initialization and invocation.</p> <pre><code> func (c *MyContract) Init(ctx kalpsdk.TransactionContextInterface) error {\n    // Initialization logic\n    return nil\n}\n\nfunc (c *MyContract) Invoke(ctx kalpsdk.TransactionContextInterface, data string) error {\n    // Invocation logic\n    return nil\n</code></pre> <p>To breathe functionality into your smart contract, implement the following crucial methods:</p> <ul> <li> <p>Init Method:</p> <ul> <li> <p>Purpose: Responsible for initializing your contract's state variables and performing any actions required upon first deployment to the blockchain.</p> </li> <li> <p>Signature: <code>func (c *MyContract) Init(ctx kalpsdk.TransactionContextInterface) error</code></p> </li> </ul> </li> <li> <p>Invoke Method:</p> <ul> <li> <p>Purpose: Handles calls made to your contract's functions after deployment. This method orchestrates the execution of the requested actions and interactions with the blockchain.</p> </li> <li> <p>Signature: <code>func (c *MyContract) Invoke(ctx kalpsdk.TransactionContextInterface, data string) error</code></p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#creating-and-starting-chaincode","title":"Creating and Starting Chaincode","text":"<p>Instantiate your contract and start the chaincode.</p> <pre><code>// Sample payable contract object\ncontract := kalpsdk.Contract{IsPayableContract: true}\n\n// KalpSDK Logger object for enhanced operation visibility\ncontract.Logger = kalpsdk.NewLogger()\n\n// New instance of KalpContractChaincode with your contract\nchaincode, err := kalpsdk.NewChaincode(&amp;MyContract{contract})\nif err != nil {\n    log.Panicf(\"Error creating KalpContractChaincode: %v\", err)\n}\n\n// Start the chaincode\nif err := chaincode.Start(); err != nil {\n    panic(fmt.Sprintf(\"Error starting chaincode: %v\", err))\n}\n</code></pre> <p>Once your smart contract is defined and implemented, proceed with these steps to instantiate it and launch the chaincode:</p> <ul> <li> <p>Contract Configuration:</p> <ul> <li> <p>Payable Contract: If your contract involves receiving payments, set the <code>IsPayableContract</code> field of the <code>kalpsdk.Contract</code> struct to <code>true</code>. This enables your contract to handle incoming payments.</p> </li> <li> <p>Logger Integration: (Optional) For enhanced visibility into chaincode execution and potential debugging assistance, consider assigning an instance of <code>kalpsdk.NewLogger()</code> to the <code>Logger</code> field of the <code>kalpsdk.Contract</code> struct.</p> </li> </ul> </li> <li> <p>Chaincode Creation: Create a new instance of <code>kalpsdk.Chaincode</code> by passing your custom contract struct (<code>MyContract</code>) wrapped within an instance of <code>MyContract</code>. This establishes the connection between your contract logic and the chaincode runtime environment.</p> </li> <li> <p>Error Handling: Employ proper error-handling mechanisms using <code>if</code> statements and appropriate logging or panic functions (e.g., <code>log.Panicf</code>) to catch potential errors during chaincode creation and gracefully handle any issues that might arise.</p> </li> <li> <p>Chaincode Startup: Once the chaincode object is created, initiate its execution by calling the <code>Start()</code> method. This method triggers the chaincode's lifecycle and activates your smart contract, making it ready to receive transactions and interact with the blockchain.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#start-the-chaincode","title":"Start the Chaincode","text":"<p>Call the <code>Start</code> function on the chaincode instance to start your chaincode.</p> <pre><code>if err := chaincode.Start(); err != nil {\n  panic(fmt.Sprintf(\"Error starting chaincode: %v\", err))\n}\n</code></pre> <p>Call the <code>Start()</code> method on the chaincode object to initiate its execution and activate your smart contract.</p> <p>Usage:</p> <ul> <li> <p>Function Call: <code>chaincode.Start()</code>: It directly calls the <code>Start()</code> function on the chaincode instance, signaling its readiness to commence operations.</p> </li> <li> <p>Error Handling:</p> <ul> <li> <p><code>if err := chaincode.Start(); err != nil</code>: This conditional statement meticulously checks for errors that may arise during the chaincode's startup process.</p> </li> <li> <p>If an error occurs (<code>err != nil</code>), the code gracefully handles it using a panic statement, logging a descriptive message to facilitate debugging.</p> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#blockchain-data-management","title":"Blockchain Data Management","text":"<p>This section details the core functionalities available for managing data on the blockchain.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#writing-to-the-kalp-blockchain","title":"Writing to the Kalp Blockchain","text":"<p>This section delves into the process of writing data onto the Kalp blockchain, enabling persistent storage and facilitating diverse applications.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#putstatewithkyc","title":"PutStateWithKyc","text":"<p>This function allows writing data to the ledger with KYC verification, ensuring only KYC-verified users can make ledger modifications.</p> <pre><code>err := ctx.PutStateWithKyc(\"myKey\", []byte(\"myValue\"))\nif err != nil {\n    // Handle error\n} else {\n    // Data successfully written to the blockchain with KYC verification\n}\n</code></pre> <p>It writes a key-value pair to the Kalp blockchain ledger, ensuring only users who have passed KYC verification can write data.</p> <p>Usage:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context, providing information about the current transaction and blockchain environment.</p> </li> <li> <p><code>myKey</code>: A unique string key for the data being stored.</p> </li> <li> <p><code>[]byte(\"myValue\")</code>: The actual data to be written, represented as a byte array.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles potential errors encountered during data writing.</p> </li> <li> <p>Success Scenario: The <code>else</code> block executes if the data is written successfully without encountering errors.</p> </li> </ul> <p>By leveraging <code>PutStateWithKyc</code>, you can ensure secure and compliant data storage on the Kalp blockchain, fostering trust and reliability within your applications. Remember to tailor the error handling and success logic within your code to suit your specific use case and application requirements.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#putstatewithoutkyc","title":"PutStateWithoutKyc","text":"<p>The <code>PutStateWithoutKyc</code> function within the Kalp SDK offers an alternative approach for writing data onto the blockchain ledger. Unlike its counterpart, this function bypasses the KYC verification step, enabling broader access to data modification capabilities:</p> <p>Functionality:</p> <ul> <li> <p>Data Writing: Similar to <code>PutStateWithKyc</code>, this function facilitates writing a key-value pair to the blockchain ledger.</p> </li> <li> <p>No KYC Enforcement: It does not require mandatory KYC verification before proceeding with the data storage operation. This approach can be suitable for scenarios where:</p> <ul> <li> <p>KYC verification is not applicable or has already been performed at an earlier stage.</p> </li> <li> <p>The data being written has minimal privacy or security concerns.</p> </li> </ul> </li> </ul> <pre><code>err := ctx.PutStateWithoutKyc(\"myKey\", []byte(\"myValue\"))\nif err != nil {\n    // Handle error\n} else {\n    // Data successfully written to the blockchain without KYC verification\n}\n</code></pre> <p>The usage pattern for <code>PutStateWithoutKyc</code> mirrors that of <code>PutStateWithKyc</code>:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context.</p> </li> <li> <p><code>key</code>: Specifies the unique key for the data.</p> </li> <li> <p><code>value</code>: Represents the actual data to be written.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles potential errors encountered during data writing, similar to <code>PutStateWithKyc</code>.</p> </li> <li> <p>Success Scenario: The <code>else</code> block executes if the data is written successfully without encountering errors.</p> </li> </ul> <p>By understanding the distinct functionalities of <code>PutStateWithKyc</code> and <code>PutStateWithoutKyc</code>, you can make informed decisions about data storage on the Kalp blockchain, balancing security, compliance, and accessibility according to your application's needs.</p>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#reading-from-the-kalp-blockchain","title":"Reading from the Kalp Blockchain","text":""},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#getstate","title":"GetState","text":"<p>The <code>GetState</code> function within the Kalp SDK empowers you to retrieve data stored on the blockchain ledger. This function acts as a key-value store lookup mechanism, allowing you to access previously written data based on its unique identifier.</p> <p>Functionality:</p> <ul> <li> <p>Data Retrieval: This function retrieves the value associated with a specific key from the ledger.</p> </li> <li> <p>Key-Value Lookup: It operates like a traditional key-value store, where each key maps to a corresponding value.</p> </li> </ul> <pre><code>value, err := ctx.GetState(\"myKey\")\nif err != nil {\n    // Handle error\n} else {\n    // Process the retrieved value\n}\n</code></pre> <p>Usage:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context, providing access to information about the current transaction and the blockchain environment.</p> </li> <li> <p><code>\"myKey\"</code>: This string argument specifies the unique key of the data you intend to retrieve.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles potential errors that might arise during the data retrieval process. These errors could indicate issues like:</p> <ul> <li> <p>Invalid key (key not found in the ledger)</p> </li> <li> <p>Network connectivity problems</p> </li> <li> <p>Permission issues (user not authorized to access the data)</p> </li> </ul> </li> <li> <p>Success Scenario:</p> </li> <li> <p>The <code>else</code> block executes if the data retrieval is successful and no errors occur.</p> </li> <li> <p>The <code>value</code> variable stores the retrieved data, which can be of various types depending on how it was originally stored using <code>PutState</code> functions.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#deleting-from-the-kalp-blockchain","title":"Deleting from the Kalp Blockchain","text":""},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#delstatewithkyc","title":"DelStateWithKyc","text":"<p>The <code>DelStateWithKyc</code> function within the Kalp SDK grants authorized users the ability to remove data from the blockchain ledger, enforcing mandatory KYC verification before proceeding with the deletion process.</p> <p>This functionality safeguards the integrity of the ledger by ensuring only authorized and verified users can modify its state:</p> <p>Functionality:</p> <ul> <li> <p>Data Deletion: This function facilitates the removal of a key-value pair from the blockchain ledger.</p> </li> <li> <p>KYC Enforcement: It mandates successful KYC verification as a prerequisite for data deletion. This verification process ensures that the user attempting to delete data is authorized to do so, adhering to security best practices and potentially complying with regulatory requirements.</p> </li> </ul> <pre><code>err := ctx.DelStateWithKyc(\"myKey\")\nif err != nil {\n    // Handle error\n} else {\n    // Data successfully deleted from the blockchain with KYC verification\n}\n</code></pre> <p>Usage:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context, providing access to information about the current transaction and the blockchain environment.</p> </li> <li> <p><code>\"myKey\"</code>: This string argument specifies the unique key of the data you intend to delete.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles any potential errors that might arise during the KYC verification process or data deletion operation. It's crucial to implement appropriate error-handling mechanisms to gracefully address any issues and prevent unexpected behavior.</p> </li> <li> <p>Success Scenario: The <code>else</code> block executes if the KYC verification is successful and the data is deleted from the ledger without errors. This block typically performs actions like logging success messages or updating internal state variables within your application.</p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#delstatewithoutkyc","title":"DelStateWithoutKyc","text":"<p>The <code>DelStateWithoutKyc</code> function within the Kalp SDK offers a way to remove data from the blockchain ledger but bypasses mandatory KYC verification. While it simplifies deletion, it's crucial to approach this function with caution due to potential security concerns:</p> <p>Functionality:</p> <ul> <li> <p>Data Deletion: Similar to <code>DelStateWithKyc</code>, this function removes a key-value pair from the ledger.</p> </li> <li> <p>No KYC Enforcement: Unlike its counterpart, it does not require KYC verification before proceeding with deletion. This can be suitable for specific scenarios where:</p> <ul> <li> <p>KYC verification has already been performed at an earlier stage.</p> </li> <li> <p>The data being deleted is non-sensitive and deletion consequences are minimal.</p> </li> </ul> </li> </ul> <pre><code>err := ctx.DelStateWithoutKyc(\"myKey\")\nif err != nil {\n    // Handle error\n} else {\n    // Data successfully deleted from the blockchain without KYC verification\n}\n</code></pre> <p>The usage pattern mirrors <code>DelStateWithKyc</code>:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context.</p> </li> <li> <p><code>\"myKey\"</code>: Specifies the unique key of the data to be deleted.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles potential errors encountered during data deletion.</p> </li> <li> <p>Success Scenario: The <code>else</code> block executes if the data is deleted successfully. </p> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#getkyc","title":"GetKYC","text":"<p>The <code>GetKYC</code> function within the Kalp SDK empowers you to verify a user's KYC (Know Your Customer) status on the network. This functionality is essential for implementing access control mechanisms and ensuring that only verified users can perform specific actions or access sensitive data within your application.</p> <p>Functionality:</p> <p>KYC Verification Check: This function queries the network to determine if a particular user identified by their user ID (<code>userId</code>) has successfully completed the KYC verification process.</p> <pre><code>Kyced, err := ctx.GetKYC(\"userId\")\nif err != nil {\n    // Handle error\n} else if Kyced {\n    // User has completed KYC, proceed with the desired action\n} else {\n    // User has not completed KYC, handle accordingly\n}\n</code></pre> <p>Usage:</p> <ul> <li> <p>Arguments:</p> <ul> <li> <p><code>ctx</code>: Represents the transaction context, providing access to information about the current transaction and the blockchain environment.</p> </li> <li> <p><code>\"userId\"</code>: This string argument specifies the user ID for whom you want to check the KYC status.</p> </li> </ul> </li> <li> <p>Error Handling: The <code>if err != nil</code> block handles potential errors that might arise during the KYC verification check, such as network issues or invalid user IDs.</p> </li> <li> <p>KYC Verification Result: The <code>Kyced</code> boolean variable stores the result of the KYC check.</p> <ul> <li> <p><code>true</code>: Indicates the user has completed KYC verification.</p> </li> <li> <p><code>false</code>: Indicates the user has not completed KYC verification.</p> </li> <li> <p>Based on the <code>Kyced</code> value, you can implement conditional logic within your application:</p> <ul> <li> <p>If <code>Kyced</code> is <code>true</code>, proceed with actions that require KYC verification (e.g., allowing access to sensitive data or functionalities).</p> </li> <li> <p>If <code>Kyced</code> is <code>false</code>, handle scenarios where the user has not completed KYC verification (e.g., display an informative message, prompt the user to complete KYC, or restrict access to certain features).</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Dev-documentation/Kalp-DLT/Use-the-kalp-sdk/Kalp-golang-sdk/#conclusion","title":"Conclusion","text":"<p>The Kalp-SDK offers a robust set of tools for developers building decentralized applications on the Kalp blockchain network. By leveraging the SDK's functionalities, developers can efficiently manage data, transactions, and compliance requirements, facilitating a streamlined development process.</p> <p>Happy coding with the Kalp-SDK on the Kalp blockchain network!</p> <p>Note</p> <p>If you encounter any issues during development related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Introduction/Kalp-DLT/","title":"Kalp DLT","text":"<p>KALP: A Cross-Chain RWA Ecosystems</p> <p>In the dynamic sphere of Web3 ecosystems, navigating the intricacies of regulatory compliance for the tokenization of real-world assets (RWAs) and achieving real-world use cases present unique challenges, particularly within permissionless blockchain ecosystems. These challenges stem from the inherent nature of permissionless systems and the complexities of aggregating and managing liquidity fragmented across different blockchain networks. The Kalp Network aims to solve these hurdles through a hybrid cross-chain ecosystem optimized for the tokenization of regulated real-world assets and use cases that require adherence to stringent regulatory standards.</p> <p>Central to the Kalp Network is its innovative approach to enforcing security, efficiency, and compliance, facilitated by an identity layer that encompasses KYC verification and a Distributed Certificate Authority for user onboarding. This ensures a secure, reliable, and compliant environment for all participants, setting a new benchmark in the blockchain domain. The Kalp Network introduces a significant shift in how regulatory compliances are achieved in Web3 native DApps (Decentralized Applications), making the process more accessible, efficient, and transparent. By enabling a regulatory-compliant and decentralized Digital Public Infrastructure (DPI), Kalp lowers the entry barriers for builders to create DeFi DApps that can withstand the scrutiny of the law.</p>"},{"location":"Introduction/Kalp-DLT/#introduction","title":"\ud83d\udce9 Introduction","text":"<p>The Importance of a Regulatory Framework in Blockchain</p> <p>In the current narrative of blockchain and DeFi evolution, the tokenization of real-world assets (RWAs) represents a significant frontier, promising to unlock unprecedented liquidity and accessibility for assets ranging from real estate to fine art. However, the successful on-chain representation of these assets necessitates a regulatory-compliant framework that ensures security, verifiability, and seamless integration within the global financial ecosystem. This is where the Kalp Network positions itself as a pioneering solution, offering a comprehensive digital public infrastructure specifically designed for the regulated tokenization and subsequent liquidity of RWAs and real-world use cases.</p>"},{"location":"Introduction/Kalp-DLT/#real-world-asset-rwa-tokenization","title":"\ud83c\udfe2 Real World Asset (RWA) Tokenization","text":"<p>Real-world assets (RWAs) are tangible or intangible entities with defined monetary value that exist outside the digital realm. The tokenization of these assets represents a pivotal advancement in the bridge between traditional finance and the emerging sector of decentralized finance (DeFi). To integrate RWAs into the DeFi ecosystem, these assets undergo a transformation process known as tokenization. This process converts the value of an asset into a digital token, thereby encapsulating its monetary worth within a blockchain. Through tokenization, RWAs transcend their physical or intangible states to become digital tokens, enabling their value to be precisely represented and fluidly transacted on the blockchain.</p> <p>The spectrum of RWAs is broad, encompassing tangible assets like real estate and gold as well as intangible ones such as government bonds or carbon credits. Essentially, any asset that bears a well-defined monetary value can be tokenized and brought into the DeFi space as an RWA. This inclusivity paves the way for a diverse array of assets to enter the blockchain, enriching the DeFi ecosystem with a multitude of investment and trading opportunities.</p> <p>The purpose of migrating real-world assets onto the blockchain is rooted in the conviction that DeFi, over the long haul, will unveil unparalleled opportunities and market efficiencies for asset holders. These opportunities are perceived as being beyond the reach of the traditional financial systems, marked by their centralized structures and inherent limitations. The DeFi space, with its inherent decentralization, transparency, and accessibility, promises to redefine asset management and investment, offering a more inclusive and efficient alternative to conventional financial practices. By bringing RWAs onto the blockchain, DeFi stands to unlock a new realm of financial innovation, offering asset holders novel ways to leverage, trade, and invest their assets within a decentralized and open financial system.</p>"},{"location":"Introduction/Kalp-DLT/#bringing-the-next-1-billion-users-to-web3-through-rwa-tokenization","title":"\ud83d\udc63 Bringing the Next 1 Billion Users to Web3 Through RWA Tokenization","text":"<p>The integration of real-world asset (RWA) tokenization into the Web3 ecosystem represents a strategic pivot towards inclusivity, stability, and trust. This transition is not merely technological but encompasses a broader appeal to traditional Web2 users by addressing common concerns and offering unprecedented opportunities. Web3 can welcome the next billion users by harnessing less volatile RWA tokens, implementing trust through rigorous KYC/KYB and due diligence, providing fixed stable yields, and opening doors to diversified investment opportunities.</p> <p>Appeal of Less Volatile Tokens</p> <p>Traditional investors and Web2 users have often been wary of the high volatility associated with cryptocurrency markets. The introduction of RWA tokens, backed by tangible and intangible assets with inherent value, offers a much-needed stabilizing influence. These tokens provide a bridge between the familiar world of traditional investments and the innovative potential of Web3, making the latter more accessible and appealing to a broader audience. The inherent stability of RWAs, such as real estate, gold, and government bonds, reflected in their tokenized forms, reassures traditional investors about entering the Web3 domain.</p>"},{"location":"Introduction/Kalp-DLT/#investors-safety-building-trust-through-due-diligence","title":"Investor\u2019s Safety: Building Trust Through Due Diligence","text":"<p>Trust is a crucial factor in attracting Web2 users to any new platform or technology. In the realm of Web3, this trust can be significantly bolstered through stringent Know Your Customer (KYC) and Know Your Business (KYB) processes, coupled with thorough due diligence procedures. By ensuring that all participants and transactions comply with established legal and regulatory frameworks, Web3 platforms can mitigate risks and protect users. This level of transparency and accountability is essential in building confidence among traditional users, who may be accustomed to the regulated environments of traditional banking and finance.</p>"},{"location":"Introduction/Kalp-DLT/#offering-fixed-stable-yield","title":"Offering Fixed, Stable Yield","text":"<p>One of the compelling features that can draw traditional investors to Web3 is the promise of fixed, stable yields on investments. Unlike the speculative and highly volatile returns seen in much of the cryptocurrency space, RWA tokenization can offer more predictable and stable returns, similar to traditional fixed-income investments. This predictability, rooted in the real-world value of the underlying assets, makes Web3 platforms more attractive to those seeking reliable investment vehicles, including retirees, conservative investors, and those new to the digital asset space.</p>"},{"location":"Introduction/Kalp-DLT/#diversified-investment-opportunities","title":"Diversified Investment Opportunities","text":"<p>The tokenization of RWAs opens up a world of diversified investment opportunities previously inaccessible to many due to high entry barriers or a lack of liquidity. From fractional ownership in real estate to participation in the global art market or investing in renewable energy projects, RWA tokens democratize access to a wide range of assets. This diversification not only spreads investment risk but also caters to the varied interests and ethical considerations of a broad user base, making Web3 platforms more appealing to individuals seeking to align their investments with their values and interests.</p>"},{"location":"Introduction/Kalp-DLT/#economic-potential-of-bringing-rwas-on-chain","title":"\ud83e\udd84 Economic Potential of Bringing RWAs On-Chain","text":"<p>The cryptocurrency market has experienced explosive growth over the past decade, culminating in a current market capitalization of approximately $2.8 trillion. This growth reflects an increasing acceptance of cryptocurrencies as both a speculative investment and a revolutionary financial technology. Bitcoin, the original cryptocurrency, continues to dominate the market, but the emergence of thousands of altcoins has diversified the investment landscape, offering a wide range of technological innovations and use cases beyond simple currency or store of value. Data indicate that the market is not only expanding in terms of capitalization but also in complexity, with the rise of decentralized finance (DeFi), non-fungible tokens (NFTs), and other blockchain-based assets contributing to the market's growth.</p>"},{"location":"Introduction/Kalp-DLT/#projected-market-cap-of-rwa-tokens","title":"Projected Market Cap of RWA Tokens","text":"<p>Real World Asset (RWA) tokens represent a new frontier in the evolution of decentralized finance and alternate investments. By tokenizing real-world assets such as real estate, precious metals, or even fine art, RWA tokens aim to make these assets more accessible, liquid, and divisible, potentially unlocking trillions of dollars in value. Conservative estimates project that the market cap of RWA tokens could reach approximately $30 trillion in the coming years, effectively tripling the current market cap of the broader cryptocurrency sector.</p> <p>The realization of this potential, however, hinges on several factors, including regulatory clarity, technological infrastructure, and market adoption. Should these factors align favorably, the infusion of RWA tokens into the cryptocurrency market could not only expand the market's capitalization but also fundamentally transform how assets are bought, sold, and owned across the globe.</p>"},{"location":"Introduction/Kalp-DLT/#prerequisites-to-bring-real-world-assets-onto-the-chain","title":"\ud83d\udec2 Prerequisites to Bring Real-World Assets Onto the Chain","text":""},{"location":"Introduction/Kalp-DLT/#tokenization","title":"Tokenization","text":"<p>The tokenization of real-world assets (RWAs) is a complex process that requires meticulous attention to regulatory compliance, technological infrastructure, and the establishment of trust with participants.</p> <ul> <li>Binding RWA and Tokens with High Due Diligence Standards: The tokenization process necessitates a rigorous due diligence framework to ensure the authenticity, legality, and value of the real-world assets being tokenized. This involves comprehensive vetting processes, legal checks, and valuation assessments to maintain high integrity and trust in the tokenized assets.</li> <li>On-Chain Ownership and Decentralization: Introducing RWAs to the blockchain allows for the decentralization of ownership records. Smart contracts enable the decentralized execution of ownership transfers, reducing reliance on traditional centralized entities and enhancing transaction efficiency.</li> <li>Immutable Ownership Records for Audit Trails: Blockchain technology ensures that ownership records are immutable and transparent. This capability provides a robust audit trail for all transactions, enhancing security and trust among participants and facilitating compliance with regulatory standards.</li> <li>Regulatory Landscape Certainty: Navigating the regulatory landscape is crucial for the successful tokenization of RWAs. Token issuers must ensure compliance with existing securities, commodities, and banking laws, adapting to the evolving regulatory environment to provide clarity and security for investors.</li> <li>Permissioned Architecture and Strict KYC/AML Compliance: Implementing a permissioned blockchain architecture can help in meeting regulatory requirements, including Know Your Customer (KYC) and Anti-Money Laundering (AML) compliance. This setup restricts access to authorized participants only, enabling more controlled and compliant transaction processes.</li> <li>Embedded Applicable Laws: The tokenization process must incorporate the applicable laws directly within the smart contracts governing the tokens. This ensures that all transactions automatically comply with the relevant legal requirements, providing a seamless legal framework for token issuance and transfer.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#liquidity","title":"Liquidity","text":"<p>Out of all the hurdles that exist, the most significant one in the tokenization of RWAs is the fragmentation of users across different blockchain networks, which can hinder liquidity. Enhancing liquidity for tokenized RWAs involves several strategic approaches:</p> <ul> <li>Strategic Asset Curation: Carefully curating the assets to be tokenized is vital for building trust and ensuring liquidity. Assets with clear, less ambiguous valuations are preferred, as they provide investors with confidence in the underlying value of the tokens.</li> <li>Unified and Aggregated Market for Buyers and Sellers: Creating a unified marketplace that aggregates buyers and sellers from different jurisdictions is essential for enhancing liquidity. This involves ensuring that the same asset is available across all chains and exchanges, providing a seamless experience for users.</li> <li>Seamless Experience for Users: A user-friendly platform that offers a seamless experience is crucial for attracting and retaining participants. This includes intuitive interfaces, straightforward transaction processes, and comprehensive support services.</li> <li>High-Yielding Assets: Focusing on assets that offer high yields can attract investors looking for lucrative opportunities. These assets often come with higher risks, so transparent risk assessments and disclosures are essential.</li> <li>Regulated Ecosystem Partners: Collaborating with regulated exchanges, custodian wallets, and third-party due diligence partners of global repute ensures that the ecosystem operates within legal boundaries. This regulatory framework provides additional security and trust for participants, further enhancing liquidity.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#limitations-of-current-blockchain-ecosystems","title":"Limitations of Current Blockchain Ecosystems","text":""},{"location":"Introduction/Kalp-DLT/#traditional-blockchains-are-monolithic","title":"Traditional Blockchains are Monolithic","text":"<p>Monolithic blockchains embody data settlement and are bundled within a single layer. This architecture, while simple and secure, faces challenges such as inflexibility and scalability issues. The single consensus mechanism and the inherent rigidity make these blockchains resistant to changes and vulnerable to network congestion during high-demand periods.</p>"},{"location":"Introduction/Kalp-DLT/#challenges-in-innovation","title":"Challenges in Innovation","text":"<p>The properties of permissionless blockchains often result in a slower pace of innovation due to the consensus required for any significant changes. This structure, while promoting security and decentralization, limits the system's flexibility to adapt to new requirements or improvements efficiently.</p>"},{"location":"Introduction/Kalp-DLT/#vulnerability-to-forks","title":"Vulnerability to Forks","text":"<p>Permissionless blockchains are prone to forks, both soft and hard, as a result of disagreements within the community regarding protocol upgrades or changes. While forks can democratize decision-making, they also lead to community and network fragmentation, which can dilute the blockchain's integrity and value.</p>"},{"location":"Introduction/Kalp-DLT/#the-need-for-multi-language-support-in-smart-contracts","title":"The Need for Multi-Language Support in Smart Contracts","text":"<p>The dominance of a single programming language like Solidity for smart contracts on platforms such as Ethereum has highlighted the need for supporting multiple programming languages. This inclusion would lower the barrier to entry for developers unfamiliar with Solidity, diversify the developer base, and potentially enhance the security and functionality of smart contracts by leveraging the strengths of various programming languages.</p>"},{"location":"Introduction/Kalp-DLT/#kycaml-compliances","title":"KYC/AML Compliances","text":"<p>The absence of built-in KYC/AML compliance mechanisms within the blockchain protocols necessitates the integration of externally trusted KYC providers. These providers act as oracles, verifying the identities and legal statuses of participants to ensure regulatory compliance and maintain the integrity of the blockchain ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#centralization-concerns","title":"Centralization Concerns","text":"<p>Despite the decentralized ideal of blockchain technology, practical deployments have shown a trend towards centralization, particularly in proof-of-stake (PoS) blockchains where significant financial investment is required to participate as a validator. This economic barrier to entry creates disparities in network participation and raises concerns about the centralization of power among a few wealthy nodes. The concentration of the majority of nodes in control of a few entities running on a handful of cloud providers' nodes adds to the dangers of centralization that are evident in the distribution of nodes in the current Ethereum network.</p>"},{"location":"Introduction/Kalp-DLT/#mitigating-malicious-attacks","title":"Mitigating Malicious Attacks","text":"<p>The public visibility of node IP addresses in permissionless chains exposes the network to Byzantine attacks, such as DDoS attacks. Enhancing anonymity while maintaining decentralization is crucial for safeguarding against such vulnerabilities and ensuring the security and privacy of transactions and network participants.</p>"},{"location":"Introduction/Kalp-DLT/#fragmentation-of-public-and-private-networks","title":"Fragmentation of Public and Private Networks","text":"<p>The fragmentation between public and private blockchain networks challenges the seamless exchange of information and value, leading to isolated liquidity pools. Developing protocols for secure and trusted cross-network communication is essential for leveraging the decentralization of public chains while maintaining the privacy and compliance features of private networks. This integration would enable a more unified and efficient blockchain ecosystem, capable of supporting a wide range of applications and use cases across different sectors.</p> <p>To achieve mass Web3 adoption, KALP DLT addresses the limitations in the current blockchain landscape, i.e., regulatory clarity, interoperable infrastructure, and advancements in scalability and security. By overcoming existing challenges and fostering collaboration between traditional finance and DeFi, KALP DLT aims to unlock a new era of financial innovation and empowerment to democratize access to financial opportunities that have previously been out of reach due to high entry barriers.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-dlt-a-hybrid-cross-chain-ecosystem","title":"KALP DLT: A Hybrid Cross-Chain Ecosystem","text":"<p>The Kalp ecosystem leverages a multi-chain architecture, incorporating both public and private permissioned sub-networks or parachains, to offer an end-to-end platform for digital asset creation and management. This architecture meticulously enforces KYC (Know Your Customer) and KYB (Know Your Business) compliance protocols, ensuring a secure and compliant operational environment. Within this ecosystem, users are provided with flexible custody solutions, including self-custody wallets for heightened security and autonomy, as well as the option of integrated third-party custodian wallets, catering to a broad spectrum of security and regulatory needs.</p> <p>Complementing the Kalp ecosystem's internal interoperability is its sophisticated cross-chain communication protocol. This protocol is architected to facilitate the movement of messages and assets not only within the kalp network but also across popular permissionless chains. By leveraging a combination of state-of-the-art cryptographic algorithms, address whitelisting mechanisms and smart contract interfaces, the protocol ensures that cross-chain interactions are both secure and efficient. This encompasses a broad spectrum of functionalities, from asset transfer and smart contract invocation to data sharing and verification across blockchain boundaries.</p> <p> </p>"},{"location":"Introduction/Kalp-DLT/#kalp-public-and-permissioned-multi-chain-network","title":"\u26d3\ufe0f Kalp Public and Permissioned Multi-Chain Network","text":"<p>The KALP Public and Permissioned Multi-Chain Network leverages its robust and modular architecture to deliver a scalable blockchain infrastructure. This network's structure is strategically distributed across multiple cloud service providers, including AWS, GCP, and Azure, as well as on-premise machines, ensuring redundancy, high availability, and geographical diversification. The architecture is fundamentally modular, facilitating the segregation of critical operational layers such as execution, consensus, and transaction gateway. This modular design not only enhances the system's efficiency and scalability but also enables tailored configurations to meet specific enterprise needs.</p>"},{"location":"Introduction/Kalp-DLT/#inter-chain-communication","title":"Inter-Chain Communication","text":"<p>KALP Network's functionality offers a sophisticated inter-chain communication mechanism. This framework is engineered to facilitate secure and efficient data transfer and transaction execution across various chains within the KALP ecosystem or other conventional blockchains.</p>"},{"location":"Introduction/Kalp-DLT/#compliance-and-privacy-features","title":"\ud83d\udd0f Compliance and Privacy Features","text":"<p>The Permissioned Space of the KALP Network is fortified with an array of compliance and privacy features, specifically designed to align with the rigorous standards of regulated industries and obey the law of land. KALP provides a foundational compliance structure that is adaptable to diverse regulatory requirements.</p> <p>Beyond robust security, the KALP ecosystem prioritizes AML and CTF protection through a suite of cutting-edge, privacy-preserving technologies. The cornerstone of this suite is the KALP Insight analytics tool. This ingenious tool delves into network operations, gleaning valuable insights without compromising user anonymity. It achieves this feat through sophisticated data analysis techniques that prioritize confidentiality and adherence to digital privacy regulations.</p> <p>Furthermore, the KALP ecosystem boasts a one-of-a-kind compiler, a specialized program meticulously designed to safeguard legal compliance within the network. This AI-driven compiler scrutinizes smart contracts against pre-established legal frameworks. By doing so, it ensures that every deployed smart contract adheres to the necessary regulatory standards. This safeguard effectively mitigates potential legal and operational risks, fostering a trustworthy and secure environment.</p>"},{"location":"Introduction/Kalp-DLT/#private-permissioned-enterprise-grade-private-chains","title":"Private-Permissioned Enterprise-Grade Private Chains","text":"<p>Enterprise-grade blockchain ecosystems cater to the specific needs of businesses and organizations looking to leverage the power of blockchain technology in a secure and controlled environment. These needs differ from those of public blockchains, where anyone can participate.</p> <ul> <li>Security and Privacy: Enterprises deal with sensitive data and require robust security measures. Kalp\u2019s private, permissioned blockchains restrict access and participation, ensuring only authorized parties can interact. Additionally, the high-availability nodes holding ledgers and world state data are unavailable outside the jurisdiction of the enterprises.</li> <li>Compliance: Businesses must adhere to various regulations, depending on their industry. The ecosystem provides tools to help adhere to established legal compliances. This ensures all deployed contracts meet regulatory standards.</li> <li>Scalability and Performance: Public blockchains can struggle with large transaction volumes. Enterprise-grade ecosystems are designed for high throughput and scalability, allowing businesses to handle a significant number of transactions efficiently. Kalp offers faster pluggable consensus choices, such as RAFT for private enterprise chains.</li> <li>Interoperability: The ability for different chains to work together seamlessly is crucial. The Kalp ecosystem facilitates smooth interaction between various chains within and outside the ecosystem.</li> </ul> <p>Enterprise-grade private chains within the Kalp Network focus on blockchain customization, integration, and security, specifically architected to cater to the unique needs of corporate entities. These chains provide a highly secure, compliant, and adaptable blockchain solution, enabling enterprises to leverage blockchain technology's full potential while aligning with their operational, legal, and technical requirements.</p>"},{"location":"Introduction/Kalp-DLT/#customization-capabilities","title":"Customization Capabilities","text":"<p>The Kalp Network facilitates a remarkable degree of customization for its enterprise-grade private chains, beginning with the \"one-click Kalp chain deployment\" feature. This streamlined deployment process allows for rapid setup and configuration of private chains, significantly reducing the technical barriers to blockchain adoption. Further customization is available in the form of selectable consensus algorithms, allowing enterprises to choose the mechanism that best fits their use case, be it for efficiency, security, or decentralization.</p> <ul> <li>Access Control: Kalp chains are associated with distributed certificate authority that allows the creation of X.509 certificates known for their robust RBAC functionalities. The certificates help in validating the origin of a transaction.</li> <li>Solutions for Specific Needs: Different industries and applications have unique requirements. Customization allows businesses to build blockchain solutions that cater to their specific workflows, data privacy needs, and regulatory compliance. For example, a supply chain management system might require different features compared to a secure voting platform.</li> <li>Enhanced Efficiency and Performance: By customizing the consensus mechanism (how transactions are validated), data structures, and smart contract functionalities, businesses can optimize the blockchain for their specific use cases. This can lead to faster transaction processing, reduced costs, and improved overall efficiency.</li> <li>Integration with Existing Systems: Early adopters who leverage customization to create innovative blockchain solutions can gain a competitive edge. They can streamline operations, improve transparency, and build trust with customers in a way that generic blockchain platforms might not allow.</li> <li>Future-proofing the Network: The ability to customize the blockchain allows for easier adaptation to evolving regulations and industry standards. By building a flexible infrastructure, businesses can ensure their blockchain solution remains relevant and effective in the long run.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#integration-with-enterprise-systems","title":"Integration with Enterprise Systems","text":"<p>Integration capabilities are a cornerstone of the Kalp Enterprise Grade Private Chains, featuring REST-based transaction signing through custodian wallets. This approach allows for seamless integration with existing enterprise resource planning (ERP) systems, databases, and other critical software infrastructure. The REST interface facilitates easy integration with a wide range of systems, enabling enterprises to maintain their existing workflows and systems while incorporating blockchain technology's benefits.</p>"},{"location":"Introduction/Kalp-DLT/#security-and-compliance-protocols","title":"Security and Compliance Protocols","text":"<p>Kalp ecosystem provides support for self-custody wallets where end users have complete autonomy over their private keys, as well as third-party key custody wallets using Hashicorp vault. This ensures that cryptographic keys are managed in a secure manner, reducing the risk of unauthorized access and improving the user experience.</p> <p>Support for Hardware Security Module (HSM) integration further enhances security, allowing enterprises to leverage dedicated hardware for key management and cryptographic operations. Fine-grained access control mechanisms are implemented throughout the Kalp Network, enabling precise control over who can access what data and functionalities within the blockchain, ensuring that sensitive operations and data remain secure and compliant with internal policies and regulatory standards.</p>"},{"location":"Introduction/Kalp-DLT/#the-importance-of-a-third-party-key-custody-vault-in-the-kalp-ecosystem","title":"The Importance of a Third-Party Key Custody Vault in the KALP Ecosystem","text":"<ul> <li>Policy-based Management: Vault acts as a central repository, securely storing and managing these keys, eliminating the need to distribute them across various systems or devices. This centralized approach simplifies key management and access control.</li> <li>Enhanced Security: It employs robust encryption techniques to protect keys at rest and in transit. Additionally, it integrates with various authentication methods, ensuring only authorized users can access specific keys. This multi-layered security approach safeguards the network from unauthorized access and potential breaches.</li> <li>Fine-grained Access Control: Permissions can be assigned based on user roles and specific needs. This minimizes the risk of unauthorized key usage and strengthens overall security.</li> <li>Improved Operational Efficiency: Vault automates key rotation and lifecycle management, streamlining operations and reducing the risk of human error. This frees up IT resources to focus on other critical tasks.</li> <li>Support for Diverse Key Types: Vault offers comprehensive support for a wide range of key types, ensuring compatibility with different blockchain platforms and protocols.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#kalps-presence-in-permissionless-chains","title":"\ud83c\udfab Kalp\u2019s Presence in Permissionless Chains","text":"<p>The permissionless facet of the Kalp Network is engineered to embody the essence of decentralization while simultaneously addressing the pivotal need for regulatory compliance and security in blockchain ecosystems. This caters to an expansive user base, emphasizing inclusivity and fostering an environment ripe for community-driven innovation and development.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-system-chain","title":"Kalp System Chain","text":"<p>The Kalp System Chain is a pivotal infrastructure within the Kalp Network, designed to uphold the network's foundational principles of regulatory compliance and seamless interoperability. It functions as the custodian of GDPR-compliant KYC (Know Your Customer) and KYB (Know Your Business) information for all network participants, establishing a trust framework essential for a secure and compliant blockchain ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#gdpr-compliant-information-storage","title":"GDPR-Compliant Information Storage","text":"<p>At its core, the Kalp System Chain securely stores and manages KYC and KYB information. The Kalp System Chain acts as the secure vault for Know Your Customer (KYC) and Know Your Business (KYB) information, the lifeblood of trust within the network. This robust system prioritizes GDPR compliance at every stage. End-to-end encryption safeguards data in transit and at rest, while sophisticated anonymity techniques hide identities without compromising verification. Furthermore, meticulous access controls ensure only authorized users can access specific information. This multi-layered approach provides the highest standards of privacy and security for participant data.</p> <p>The Kalp System Chain empowers participants by incorporating verifiable consent mechanisms; it grants individuals complete control over their individual data. This aligns with the core principles of GDPR, fostering trust and transparency within the ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#whitelisting-users-in-permissionless-chains","title":"Whitelisting Users in Permissionless Chains","text":"<p>The advent of cross-chain messaging protocols and their integration in Kalp has made it feasible to integrate whitelisting features in other networks, enabling a new layer of control and security for decentralized applications (DApps). Through cross-chain messages, information about whitelisted users can be securely transmitted and verified across different blockchain networks, allowing DApps to restrict access to approved participants. This approach leverages the inherent strengths of permissionless chains\u2014such as Ethereum and Binance Smart Chain\u2014while incorporating a level of regulatory compliance and user validation typically reserved for permissioned systems.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-cross-chain-liquidity-protocol","title":"Kalp Cross-Chain Liquidity Protocol","text":"<p>The Kalp Cross-Chain Liquidity Protocol is engineered to facilitate permissioned liquidity and asset exchanges across different blockchain networks. This protocol leverages smart contracts across chains and decentralized finance (DeFi) mechanisms to create a secure, efficient, and user-friendly environment for cross-chain asset swaps and liquidity provision through cross-chain order fulfillment.</p>"},{"location":"Introduction/Kalp-DLT/#relay-routers","title":"Relay Routers","text":"<p>Relay routers are a critical innovation within the Kalp Network's permissionless space, designed to bridge the communication gap between the Kalp ecosystem and other permissionless blockchains. These routers act as distributed nodes that relay messages and transactions across different blockchain networks, enabling a wide range of interoperability use cases.</p> <p>These relay routers seamlessly encode and decode messages and transactions between the Kalp ecosystem and other permissionless blockchains. This unlocks a vast array of interoperability use cases. Data flows freely, fostering collaboration and innovation across diverse blockchain environments. Developers can leverage the unique strengths of different blockchains to build robust, rich, and more powerful applications.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-ecosystem-node-architecture","title":"\ud83d\udda5\ufe0f Kalp Ecosystem Node Architecture","text":"<p>The Kalp ecosystem utilizes a diverse set of nodes to maintain its infrastructure, security, and functionality. These nodes provide a robust structure to the Kalp ecosystem to facilitate the groundbreaking functionalities added with diverse and unique roles, from executing smart contracts and facilitating consensus to ensuring interoperability between multiple Kalp chains as well as between Kalp chains and different external blockchain networks that also follow regulatory compliance and provide architectural scalability.</p>"},{"location":"Introduction/Kalp-DLT/#execution-layer-nodes","title":"Execution Layer Nodes","text":"<p>Execution Layer Nodes are responsible for the execution of smart contracts within the Kalp ecosystem. These nodes evaluate the business logic of transactions as dictated by smart contracts and endorse the transactions as valid before they are added to the ledger. In the Kalp ecosystem, this execution layer is a separate entity that is independent and thus minimizes the processing power of the network and creates efficient environments to facilitate smooth communication.</p>"},{"location":"Introduction/Kalp-DLT/#functionality","title":"Functionality","text":"<ul> <li>Smart Contract Execution: They execute the code of smart contracts upon receiving transactions that invoke the contract.</li> <li>Transaction Validation: Post-execution, they validate the transaction against the smart contract's stipulated rules and conditions.</li> <li>Endorsement: Once a transaction is validated, the execution layer node signs it, serving as a proof of execution and validation.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#smart-contract-execution","title":"Smart Contract Execution","text":"<ul> <li>Triggering by Transactions: Similar to other blockchains, transactions initiate smart contract execution on KALP. These transactions involve invoking specific functions within the deployed smart contract.</li> <li>Execution Environment: Unlike traditional blockchains that rely on Proof of Work (PoW) for mining, KALP utilizes a different consensus mechanism, Smart-BFT, for transaction validation. This led to a more efficient execution environment optimized for smart contracts.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#transaction-validation","title":"Transaction Validation","text":"<ul> <li>Pre- and Post-Execution Checks: Similar to other blockchains, KALP performs pre-execution checks to ensure the transaction adheres to the network's fee structure and has sufficient funds associated with it. Post-execution checks validate the transaction's outcome against the smart contract's logic and state changes.</li> <li>Consensus Mechanism: The chosen consensus mechanism on KALP would play a crucial role in transaction validation. Validators on the network are responsible for verifying the transaction's execution and ensuring it complies with the smart contract's rules, regulatory compliance, and.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#endorsement","title":"Endorsement","text":"<ul> <li>Validator Roles: Validators on the KALP network endorse transactions after successful execution and validation. This endorsement serves as proof of the transaction's legitimacy and immutability on the blockchain.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#additional-considerations-for-kalp","title":"Additional Considerations for KALP","text":"<ul> <li>Scalability: Since smart contract execution is resource-intensive, KALP's design considers scalability solutions to handle a high volume of transactions.</li> <li>Security: Security is paramount for smart contracts. KALP should implement robust security measures to prevent vulnerabilities and exploits within smart contracts. This could involve formal verification techniques and secure coding practices.</li> </ul> <p>By incorporating these elements, KALP can create a secure and efficient environment for smart contract execution, transaction validation, and endorsement.</p>"},{"location":"Introduction/Kalp-DLT/#high-data-availability-nodes","title":"High Data Availability Nodes","text":"<p>High Data Availability (HDA) Nodes are pivotal in replicating and storing ledger data across the Kalp ecosystem. They ensure that the network remains robust and that data loss is minimized.</p>"},{"location":"Introduction/Kalp-DLT/#functionality_1","title":"Functionality","text":"<ul> <li>Data Replication: These nodes replicate ledger data to ensure redundancy and high availability.</li> <li>Data Retrieval: They facilitate quick data retrieval for validating transactions or querying ledger history.</li> <li>Fault Tolerance: Through data replication, they contribute to the network's fault tolerance, ensuring its resilience against data loss.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#orderer-nodes","title":"Orderer Nodes","text":"<p>Orderer nodes are critical for maintaining the integrity and order of transactions within the Kalp ecosystem. They sequence transactions into blocks and distribute them across the network.</p>"},{"location":"Introduction/Kalp-DLT/#functionality_2","title":"Functionality","text":"<ul> <li>Transaction Ordering: They establish a consistent order for transactions, which is essential for maintaining the ledger's integrity.</li> <li>Block Creation: After ordering, they package transactions into blocks.</li> <li>Block Distribution: These nodes distribute the created blocks to all nodes responsible for maintaining the ledger.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#gateway-nodes","title":"Gateway Nodes","text":"<p>Gateway nodes serve as the primary interface between the participants of the Kalp ecosystem and its underlying blockchain infrastructure. These nodes facilitate the secure and efficient submission of transactions to the network, acting as a conduit for communication and data flow.</p>"},{"location":"Introduction/Kalp-DLT/#functionality_3","title":"Functionality","text":"<ul> <li>Transaction Submission: Gateway nodes receive transactions from users or applications, acting as the initial point of entry into the Kalp ecosystem. They perform preliminary checks on the transaction's structure and authenticity.</li> <li>Routing: After initial validation, they route transactions to the appropriate channels within the network, ensuring that each transaction reaches the correct destination for further processing. This includes directing transactions to endorsement nodes for smart contract execution and validation.</li> <li>Security and Anonymity: These nodes enhance the network's security by implementing protocols that protect user privacy and data integrity. They mask the details of transaction originators, providing an additional layer of anonymity and safeguarding against potential network attacks.</li> <li>Interface Provision: Gateway nodes offer a RESTful API interface, enabling developers to interact with the blockchain easily. This interface simplifies the process of sending transactions, querying the state of the blockchain, and listening for events, making development on the Kalp ecosystem accessible and efficient.</li> <li>Load Balancing and Scalability: To manage network traffic and maintain high performance, gateway nodes employ load-balancing techniques. They distribute incoming requests evenly across the network, preventing any single node from becoming a bottleneck. This is crucial for scalability as the ecosystem grows in size and transaction volume.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#tokenomics-and-governance-in-the-kalp-ecosystem","title":"\ud83d\udcc8 Tokenomics and Governance in the KALP Ecosystem","text":"<p>Ginni is the economic instrument or currency designed to underpin the ecosystem's financial stability and incentivize active, meaningful participation. The network participants of the Kalp ecosystem are paid in Gini.</p>"},{"location":"Introduction/Kalp-DLT/#token-distribution-and-schedule","title":"Token Distribution and Schedule","text":"<p>The KALP foundation has instituted a hard cap of $1 billion for Gini tokens, allocated across various stakeholders to ensure balanced ecosystem development. The distribution includes:</p> <ul> <li>Founders &amp; Team (20%): Encouraging long-term commitment with a 6-month cliff, followed by a gradual monthly release over four years.</li> <li>Foundation/Endowment (15%): Allocated for foundational growth with no initial cliff and a four-year monthly unlocking schedule.</li> <li>Ecosystem Reserve (45%): To support the ecosystem's expansion and sustainability, distributed monthly over four years without an initial cliff.</li> <li>Seed Sale (5%) and Private Sale (5%): Early support is rewarded with tokens unlocking quarterly over two years.</li> <li>Airdrop (3%) and Public Sale (7%): Enhancing community engagement with quarterly unlocks for airdrops and instant access for public sale tokens.</li> </ul>"},{"location":"Introduction/Kalp-DLT/#governance-and-economic-resilience","title":"Governance and Economic Resilience","text":"<p>Gini's governance is deeply interwoven with a DAO structure, ensuring democratic decision-making and equitable network evolution. The token's design emphasizes long-term network health and value creation, with a governance model that supports transparent, fair decision-making through smart contracts. AI-enhanced systems monitor and adjust incentives, ensuring alignment with ecosystem goals.</p>"},{"location":"Introduction/Kalp-DLT/#incentives-for-sustainable-growth","title":"Incentives for Sustainable Growth","text":"<p>A key feature of Gini's economy is its incentive mechanisms that promote network participation and contribution without centralization risks. It includes merit-based rewards, equitable airdrops to ensure widespread network support, and a performance-based recognition system that aligns rewards with the ecosystem's qualitative contributions. Strategic token burns and lock-up periods are implemented to mitigate speculative behaviors and support token value appreciation over time.</p>"},{"location":"Introduction/Kalp-DLT/#identity-layer","title":"Identity Layer","text":"<p>The Identity Layer in Kalp Network provides a secure and reliable framework for verifying and managing user identities. This layer integrates the power of KYC (know your customer) Oracles with the established trust of third-party KYC providers like Authbridge and Sumsub. By leveraging this combined approach, the Kalp Network ensures that all participants within the ecosystem are thoroughly verified, fostering a high level of security and regulatory compliance.</p>"},{"location":"Introduction/Kalp-DLT/#kyc-oracles-with-trusted-3rd-party-kyc-providers","title":"KYC Oracles with Trusted 3rd Party KYC Providers","text":"<p>KYC Oracles serve as a tool between the Kalp Network and external KYC providers, ensuring that participant verification is both rigorous and streamlined. The oracles automate the verification process, retrieving and validating KYC/KYB data against the providers' databases, thus minimizing fraud risk and enhancing trust within the network.</p>"},{"location":"Introduction/Kalp-DLT/#public-key-whitelisting-through-kyc-verification","title":"Public Key Whitelisting Through KYC Verification","text":"<p>Upon successful KYC verification, the participant's public keys are whitelisted, a process that entails recording the public keys in a dedicated registry on Kalp\u2019s system chain. This whitelisting mechanism ensures that only verified participants can engage in transactions within the Kalp ecosystem, thereby maintaining a secure and compliant environment. The System Chain's universal accessibility across the Kalp ecosystem facilitates the seamless verification of these whitelisted keys across all chains, ensuring integrity and trust in interactions network-wide.</p>"},{"location":"Introduction/Kalp-DLT/#distributed-certificate-authority","title":"Distributed Certificate Authority","text":"<p>The Distributed Certificate Authority within the Kalp Network plays a crucial role in identity management, generating Kalp Identity, and handling the registration of the generated ECDSA public key, specifically using the curve P-256. This mechanism is central to the secure and private management of cryptographic keys within the ecosystem.</p> <p>The process of generating the key pair is designed to ensure the utmost security and privacy. Private keys are generated locally on the user's device, ensuring that they never leave the confines of the device, thereby mitigating the risk of exposure. The public key, derived from the private key, is then used to register the user within the Kalp network. This registration is a testament to the user's verified presence and readiness to interact within the ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#unified-private-key-interaction","title":"Unified Private Key Interaction","text":"<p>A distinguishing feature of the Kalp Network's identity layer is the use of a single private key to interact across all multi-chains within the ecosystem. This approach simplifies the user experience while maintaining high security and privacy standards, allowing for seamless interaction across the diverse landscape of the Kalp Network without compromising the user's control over their private keys.</p>"},{"location":"Introduction/Kalp-DLT/#execution-layer","title":"\u2699\ufe0f Execution Layer","text":"<p>The execution layer within the Kalp network is segregated from the consensus layer. This separation is strategically designed to optimize the computational efficiency of the network, enabling the parallel execution of smart contracts and transaction validation. Unlike traditional blockchain networks, where the execution and consensus mechanisms are intertwined, leading to potential bottlenecks in transaction finalization, the Kalp Network\u2019s architecture ensures that CPU resources are fully leveraged for execution tasks, thereby enhancing throughput and reducing latency.</p>"},{"location":"Introduction/Kalp-DLT/#segregation-for-enhanced-parallelization","title":"Segregation for Enhanced Parallelization","text":"<p>The execution layer's primary function is to execute smart contracts and validate transactions. This architectural choice of keeping the execution layer separate from other layers addresses one of the significant challenges faced by conventional blockchain systems: the bottleneck associated with linear transaction processing. In comparison to popular public and permissionless chains like Ethereum, where transaction execution can become a throughput bottleneck, the Kalp Network's approach significantly enhances efficiency and scalability.</p>"},{"location":"Introduction/Kalp-DLT/#peer-nodes-and-world-state-interaction","title":"Peer Nodes and World-State Interaction","text":"<p>Peer nodes within the Execution Layer play a pivotal role in interacting with the world state of Kalp chains. This interaction is crucial for ensuring that the state of the blockchain is consistently updated in accordance with the outcomes of executed smart contracts and validated transactions. Kalp\u2019s architectural flexibility further allows for the potential segregation of smart contract execution from peer nodes. This segregation not only enhances the system's capacity for parallel processing but also optimizes the allocation of computational resources, ensuring that smart contract execution and transaction validation can occur simultaneously without interference, thereby further boosting the network's performance capabilities.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-sdk-facilitating-regulated-smart-contract-development","title":"Kalp SDK: Facilitating Regulated Smart Contract Development","text":"<p>The Kalp SDK is a tool for developers within the Kalp ecosystem, designed to foster the writing of regulated smart contracts. This toolkit provides developers with the means to interact seamlessly with the System Chain, facilitating interoperability, identity validation, and the creation of general-purpose smart contracts. By supporting multiple programming languages such as Golang, Node.js, Java, and Python, the Kalp SDK embodies the network\u2019s commitment to decentralization and inclusivity, removing potential barriers to developer engagement that a single-language framework might impose. This approach starkly contrasts with more monolithic blockchain ecosystems, which may limit developer accessibility and innovation due to language constraints.</p>"},{"location":"Introduction/Kalp-DLT/#kalp-compiler-ensuring-security-and-regulatory-compliance","title":"Kalp Compiler: Ensuring Security and Regulatory Compliance","text":"<p>The Kalp Compiler represents a groundbreaking fusion of recursive compilation techniques and AI-driven analysis, aimed at assisting developers in identifying and resolving security and regulatory compliance issues within smart contracts. This tool is not merely a gatekeeper but a facilitator of innovation, allowing for the deployment of smart contracts once semantic checks are satisfied. The Compiler's design philosophy underscores the Kalp Network\u2019s dedication to supporting the creation of smart contracts that can endure rigorous regulatory and legal examination. Unlike traditional compilers, which focus solely on syntactical correctness, the Kalp Compiler integrates components of the Kalp ecosystem to provide developers with a comprehensive toolset for crafting smart contracts capable of meeting the highest standards of security and compliance.</p>"},{"location":"Introduction/Kalp-DLT/#consensus-layer","title":"\ud83c\udfdb\ufe0f Consensus Layer","text":"<p>The consensus layer achieves transaction ordering and validation, ensuring the integrity and finality of transactions across the network. This layer is engineered to interact with the execution layer, thus facilitating a robust and secure process for transaction verification and block creation.</p>"},{"location":"Introduction/Kalp-DLT/#interaction-with-execution-layer","title":"Interaction with Execution Layer","text":"<p>The Consensus Layer's primary function is to provide a deterministic ordering of transactions, serving as a crucial intermediary between the submission of transactions and their execution. Through this process, the layer ensures that transactions are processed in a consistent manner, thereby preventing conflicts and forks, which ensures the integrity of the blockchain ledger. The deterministic nature of the consensus algorithms employed, such as SMART BFT, guarantees that once a transaction is validated by the Execution Layer, it is considered final and incorruptible.</p>"},{"location":"Introduction/Kalp-DLT/#deterministic-consensus-algorithms-smart-bft-for-public-chains-in-kalp","title":"Deterministic Consensus Algorithms: SMART BFT for Public Chains in Kalp","text":"<p>Kalp Network's Consensus Layer uses the SMART Byzantine Fault Tolerance (BFT) algorithm, a state-of-the-art consensus mechanism designed to provide high resilience against malicious activities while ensuring transaction finality. SMART BFT is characterized by its ability to handle adversarial conditions, making it particularly suited for public chains where the risk of malicious parties is significant. The algorithm's deterministic nature means that any block validated by the Execution Layer is assured of its correctness and finality, eliminating uncertainties and the possibility of forks within the Kalp chain.</p>"},{"location":"Introduction/Kalp-DLT/#pluggable-consensus-for-enterprises","title":"Pluggable Consensus for Enterprises","text":"<p>The Kalp Network adopts a modular approach to its consensus mechanisms, offering pluggable consensus options to cater to the diverse needs of its public and private chains.</p>"},{"location":"Introduction/Kalp-DLT/#raft-for-private-enterprise-chains","title":"RAFT for Private Enterprise Chains","text":"<p>Private enterprise chains within the Kalp Network typically utilize the RAFT consensus algorithm, prized for its efficiency and simplicity in controlled environments. However, enterprises seeking enhanced security features have the flexibility to opt for SMART BFT, benefiting from its advanced fault tolerance and attack resistance capabilities. This flexibility allows enterprise chains to tailor their consensus mechanism to their specific security requirements and operational preferences.</p>"},{"location":"Introduction/Kalp-DLT/#fork-less-architecture","title":"Fork-less Architecture","text":"<p>A distinctive feature of the Kalp Network is its fork-less architecture, a direct consequence of the deterministic consensus algorithms employed. This stability is crucial for maintaining trust and reliability across the network, especially for bringing financial instruments into the chain and ensuring that transactions and smart contracts execute as intended without the risk of chain reorganizations.</p>"},{"location":"Introduction/Kalp-DLT/#gateway-layer","title":"\ud83c\udf9f\ufe0f Gateway Layer","text":"<p>The Gateway Layer in the Kalp Network is conceived as a distributed architecture layer, pivotal in bolstering the security infrastructure of the network. This layer plays a critical role in safeguarding the identities of nodes, thereby introducing an additional stratum of protection against an array of cyber threats, including distributed denial of service (DDoS) and denial of service (DoS) attacks. By masking node identities and managing access controls, the Gateway Layer effectively mitigates the risk of targeted vulnerabilities, ensuring the integrity and availability of the Kalp Chains.</p>"},{"location":"Introduction/Kalp-DLT/#enhanced-security-through-anonymity","title":"Enhanced Security Through Anonymity","text":"<p>The Gateway Layer operates as a sophisticated cluster of nodes that intelligently routes transactions to appropriate chains within the ecosystem. This routing mechanism not only optimizes transaction flow for efficiency and speed but also enhances security by obfuscating the direct network paths to individual nodes. Such an approach is crucial in the contemporary digital landscape, where DDoS and DoS attacks present significant risks to the continuity and reliability of blockchain networks. The Gateway Layer\u2019s distributed nature further decentralizes the point of entry into the Kalp Network, complicating the efforts of potential attackers.</p>"},{"location":"Introduction/Kalp-DLT/#developer-friendly-interface","title":"Developer-Friendly Interface","text":"<p>A standout feature of the Gateway Layer is its provision of a RESTful interface, designed to streamline the development process by facilitating seamless integration and interaction with the Kalp ecosystem. Developers can leverage this interface to send signed transactions with ease, simplifying the deployment and execution of smart contracts and other blockchain operations.</p>"},{"location":"Introduction/Kalp-DLT/#privacy-and-security-assurance","title":"Privacy and Security Assurance","text":"<p>Importantly, the Gateway Layer is architecturally designed to never access or require users' private keys, ensuring that the custody of cryptographic assets remains squarely in the hands of the user. This design principle not only reinforces the security of the network but also empowers users with full control over their cryptographic credentials, aligning with the broader industry move towards self-sovereign identity and asset management.</p>"},{"location":"Introduction/Kalp-DLT/#self-custody-wallet","title":"Self-Custody Wallet","text":"<p>Integral to the user empowerment strategy of the Kalp Network is the Self-Custody Wallet, a tool that encapsulates the network\u2019s dedication to security, privacy, and user autonomy. This wallet is accompanied by a lightweight JavaScript library, streamlining the process of transaction signing and public-private key generation using the ECDSA P-256 curve. This cryptographic standard is selected for its balance of security and computational efficiency, ensuring robust protection for transactions while maintaining system performance.</p>"},{"location":"Introduction/Kalp-DLT/#transaction-signing-and-integration","title":"Transaction Signing and Integration","text":"<p>The Self-Custody Wallet allows users to sign transactions securely on their devices, after which the signed transactions can be transmitted to the Gateway Layer without exposing the private keys. This mechanism ensures that transactions are authenticated and non-repudiable while preserving the user's absolute control over their private keys. The wallet's integration with the Gateway Layer via its lightweight JS library exemplifies the seamless interplay between user-centric security tools and the broader Kalp Network infrastructure, enhancing the overall usability and security of the ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#permissioned-oracle-layer","title":"\u264a Permissioned Oracle Layer","text":"<p>The Kalp Network introduces a novel Permissioned Oracle Layer, a critical innovation designed to bridge the gap between off-chain data sources and the on-chain environment while rigorously maintaining the integrity and security intrinsic to permissioned blockchain systems. This layer is characterized by its reliance on whitelisted and verified data sources, ensuring that only trustworthy and authenticated information feeds into the Kalp ecosystem. The Permissioned Oracle Layer is engineered to offer flexible integration options, including direct integration with Kalp Chains or through sophisticated messaging systems like Kafka, catering to a variety of reliability and decentralization needs.</p>"},{"location":"Introduction/Kalp-DLT/#integration-flexibility-and-reliability","title":"Integration: Flexibility and Reliability","text":"<p>The layer's architecture permits two primary modes of data integration: through Kafka, which offers a robust and reliable message queue system ensuring data integrity and efficient handling of high-throughput data streams, or via direct blockchain integration for scenarios where real-time data transmission is paramount, albeit with a trade-off in terms of potential reliability due to the absence of a buffering message queue. This direct integration approach, while presenting a leaner architecture, leans more towards decentralization and user ownership, embodying the Kalp Network\u2019s ethos of fostering a user-centric and decentralized ecosystem.</p>"},{"location":"Introduction/Kalp-DLT/#decentralization-vs-reliability","title":"Decentralization vs. Reliability","text":"<p>The choice between Kafka integration and direct blockchain communication offers DApps developers the autonomy to tailor their applications according to specific use-case requirements. For applications where reliability and data integrity are non-negotiable, the Kafka route provides a failsafe mechanism, buffering data inputs and ensuring consistent delivery to the blockchain. Conversely, applications prioritizing decentralization and minimal reliance on intermediary layers may opt for direct blockchain integration, embracing a more distributed model of data ingestion.</p>"},{"location":"Introduction/Kalp-DLT/#chad-oracle-factory","title":"Chad Oracle Factory","text":"<p>Complementing the Permissioned Oracle Layer is the Chad Oracle Factory, an innovative tool designed to democratize Oracle creation, enabling users to generate custom oracles with minimal technical overhead. The factory utilizes a JSON-based Domain-Specific Language (DSL), allowing developers and users alike to define the logic and data sources for their oracles in a structured, intuitive format. This no-code tool significantly lowers the barrier to Oracle development, making it accessible to a broader audience and fostering a rich ecosystem of data feeds and smart contract interactions.</p>"},{"location":"Introduction/Kalp-DLT/#no-code-oracle-creation","title":"No-Code Oracle Creation","text":"<p>The Chad Oracle Factory is engineered to empower developers with varying levels of technical expertise to rapidly prototype and deploy oracles. By abstracting the complexities involved in Oracle development, the factory accelerates the integration of external data into the Kalp ecosystem, enhancing the functionality and versatility of DApps. The use of a JSON-based DSL for Oracle configuration offers a familiar and widely-used format, further easing the learning curve for new developers and non-technical users.</p>"},{"location":"Introduction/Kalp-DLT/#enhancing-smart-contract-interoperability","title":"Enhancing Smart Contract Interoperability","text":"<p>The introduction of the Chad Oracle Factory within the Permissioned Oracle Layer significantly enhances the interoperability and dynamic capabilities of smart contracts on the Kalp Network. By providing a streamlined, flexible tool for oracle creation, the Kalp Network ensures that smart contracts can reliably interact with a vast array of external data sources, opening up a multitude of possibilities for complex, real-world applications on the blockchain.</p>"},{"location":"Introduction/Kalp-DLT/#kalpify-regulated-tokenization-layer","title":"\u2696\ufe0f Kalpify: Regulated Tokenization Layer","text":"<p>The barriers to entry, illiquidity, opacity, and analog processes involved with real-world asset ownership and trading prevent democratized and efficient wealth creation. This restricts broad-based individual participation, restricts asset liquidity, drives up costs and effort through intermediaries, and creates mistrust due to a lack of transparency.</p> <p>Kalp has introduced a new platform called Kalpify that uses blockchain technology to solve the above problems. Kalpify facilitates fractional ownership and ensures regulatory adherence in asset trading. Kalpify provides a legally engineered tokenization platform that bridges real-world assets to the digital realm through a trustee model. The trustee legally binds ownership rights, enabling real assets to be fractionally owned and traded through tokens on the blockchain.</p> <p>This innovation not only augments liquidity in asset markets but also integrates the immutability of blockchain, ensuring secure and verifiable ownership for investors across the globe. With Kalpify, the investment landscape is redefined, embracing the convergence of asset tangibility and digital agility within a legally robust ecosystem. Kalpify performs critical off-chain work, including the linkage of digital asset tokens to legally binding agreements and compliance oversight. A key feature of Kalpify is its use of a network governance layer to generate and manage public and private key pairs for users, ensuring a high level of security and trust. This could make it possible for more people to invest in real-world assets and potentially make more money. Kalpify acts like a secure storage locker for people's investments and makes sure that all trades follow the law. It also uses special computer programs to link digital tokens to real-world contracts and to make sure that everything is done correctly. Another important feature is a system for managing security keys, which helps to keep people's investments safe.</p> <p></p>"},{"location":"Introduction/Kalp-DLT/#kalpify-regulated-tokenization-layer_1","title":"Kalpify: Regulated Tokenization Layer","text":"<p>Kalpify represents a comprehensive solution for the secure minting and management of digital asset tokens tied to real-world assets, offering a blend of blockchain innovation, rigorous security practices, and adherence to legal and regulatory standards. By integrating advanced cryptographic key management, smart contract automation, and stringent compliance measures, Kalpify ensures a secure, efficient, and compliant platform for digital asset minting and management.</p> <p>The trustee structure legally transfers ownership interests from physical assets to digital representations, maintaining compliance with regulations. This bridges the world of atoms and bits, unlocking liquidity while retaining enforceable property rights.</p>"},{"location":"Introduction/Kalp-DLT/#conclusion","title":"\ud83e\uddbe Conclusion","text":"<p>Kalp aims to bridge the gap between traditional finance and the innovative world of Web3 by offering a regulated and user-friendly environment for real-world asset (RWA) tokenization. Built around the KALP DLT, Kalp's ecosystem empowers businesses and developers to leverage blockchain technology for secure and compliant RWA tokenization, fostering a more inclusive and stable financial future. This user-friendly approach, combined with the stability of RWA tokens and adherence to regulatory requirements, positions Kalp as a strong contender in the rapidly evolving blockchain landscape. While challenges like regulatory clarity and infrastructure interoperability exist, RWA tokenization through Kalp has the potential to unlock a new era of financial innovation and empowerment by democratizing access to investments and mitigating the volatility in conventional investment domains.</p>"},{"location":"Introduction/Kalp-studio-ecosystem/","title":"Kalp Studio Ecosystem","text":""},{"location":"Introduction/Kalp-studio-ecosystem/#kalp-studio-console-dashboard-overview","title":"Kalp Studio Console Dashboard Overview","text":"<p>The Kalp Studio Console Dashboard is a centralized platform that helps users efficiently manage their blockchain based smart contracts deployment and helps in managing your overall blockchain based application development platform. This document provides an overview of key features and functionalities available on the dashboard.</p>"},{"location":"Introduction/Kalp-studio-ecosystem/#1-user-onboarding-and-access","title":"1. User Onboarding and Access","text":"<ul> <li>Sign-Up and Login: New users can quickly sign up for the platform through a simple registration process, which includes setting up login credentials and email verification. For existing users, logging in is a straightforward process. Once logged in, users can access all available tools and features within the dashboard.</li> <li>Password Management: Changing passwords is easily done from the account settings section. The platform emphasizes security by providing a quick way to update passwords and improve account protection.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#2-dashboard-navigation","title":"2. Dashboard Navigation","text":"<ul> <li>For New Users: The dashboard is designed to be intuitive, especially for first-time users. It provides a clean layout with guidance to help new users understand the platform\u2019s structure, enabling them to locate tools such as wallet management, smart contract deployment, and billing.</li> <li>For Active Users: Regular users can navigate the dashboard efficiently with quick access to their most-used features. The platform is structured to enhance workflow for experienced users, ensuring smooth management of tasks like deploying smart contracts or viewing transaction history.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#3-billing-and-credits","title":"3. Billing and Credits","text":"<ul> <li>Billing Access: New users can easily access their billing details and payment settings through a dedicated billing section on the dashboard. For subscribed users, additional billing management options are available, such as reviewing past invoices and updating payment methods.</li> <li>Billing Overview: The platform provides a detailed billing system that helps users track their usage, invoices, and payments. The billing section is transparent, giving users a clear understanding of their spending on the platform.</li> <li>Credits Management: Users can add credits to their account directly from the dashboard. These credits are used to fund activities such as smart contract deployments and transactions, helping users avoid delays due to insufficient funds.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#4-wallet-integration","title":"4. Wallet Integration","text":"<ul> <li>Wallet Access: The platform includes a wallet management tool that allows users to monitor and manage their digital assets. Through the dashboard, users can track balances and transactions.</li> <li>Wallet Creation and Connection: For users who do not yet have a wallet, the dashboard provides a simple process for creating and connecting a new wallet to their account. This ensures users have a fully functional wallet for storing and using digital assets on the platform.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#5-kalp-instant-deployer-kid","title":"5. Kalp Instant Deployer (KID)","text":"<ul> <li>Smart Contract Deployment: The Kalp Instant Deployer, also known as KID, simplifies the process of deploying smart contracts. Users can easily set up, configure, and deploy smart contracts on the blockchain without needing advanced technical skills. The deployment process is broken down into clear steps, guiding users through the entire procedure.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#6-api-gateway","title":"6. API Gateway","text":"<ul> <li>API Key and Endpoint Generation: The platform offers an API Gateway that allows users to generate API keys and create API endpoints. These APIs enable external applications to interact with smart contracts, providing a robust integration point for developers.</li> <li>Smart Contract API Access: Users can access a list of deployed smart contracts and generate API endpoints to interact with them, facilitating smooth external communication and integration of blockchain functionality into other software.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#7-transaction-monitoring","title":"7. Transaction Monitoring","text":"<ul> <li>Real-Time Transaction Monitoring: Users can view and track their transactions in real-time using the transaction monitoring tool. This feature gives users transparency over their blockchain activities, allowing them to keep an eye on the status of transactions, from initiation to confirmation on the blockchain.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#8-testnet-faucets","title":"8. TestNet Faucets","text":"<ul> <li>Access to TestNet Tokens: The platform provides a faucet service for obtaining test tokens that users can utilize in the TestNet environment. These test tokens are useful for developers who want to simulate blockchain transactions without spending real currency, making it a valuable tool for testing and development.</li> </ul>"},{"location":"Introduction/Kalp-studio-ecosystem/#conclusion","title":"Conclusion","text":"<p>The Kalp Studio Console Dashboard is a powerful tool that streamlines blockchain management for both new and experienced users. By combining features such as wallet integration, billing management, smart contract deployment, and transaction monitoring, the dashboard enables users to efficiently manage their blockchain operations. Its intuitive interface, comprehensive tools, and real-time monitoring make it an essential platform for navigating the complexities of blockchain technology.</p>"},{"location":"Introduction/Kalp-studio-overview/","title":"Kalp Studio Overview","text":""},{"location":"Introduction/Kalp-studio-overview/#kalp-studio-overview","title":"Kalp Studio Overview","text":"<p>Kalp Studio is a decentralized infrastructure platform designed to build, manage, and scale blockchain applications and networks. It serves as a comprehensive ecosystem for developers, offering a wide range of tools and services that simplify the complexities of blockchain technology, making it more accessible and efficient.</p>"},{"location":"Introduction/Kalp-studio-overview/#introduction","title":"Introduction","text":"<p>In the rapidly evolving world of blockchain technology, there is a growing need for platforms that can streamline the development process, provide robust management tools, and scale to meet the demands of enterprise-level applications. Kalp Studio addresses this need by offering a user-friendly and scalable platform that empowers developers to build sophisticated blockchain applications without the hassle of managing the underlying infrastructure. By drawing parallels to how AWS revolutionized cloud computing for Web 2.0, Kalp Studio aims to do the same for Web 3.0 technologies.</p>"},{"location":"Introduction/Kalp-studio-overview/#about-kalp-studio","title":"About Kalp Studio","text":"<p>Kalp Studio is the leading blockchain infrastructure platform, powering millions of users worldwide. Our team of engineers, designers, and visionaries is dedicated to solving complex problems and creating a superior user experience in the blockchain world.</p> <p></p>"},{"location":"Introduction/Kalp-studio-overview/#simple-and-scalable","title":"Simple and Scalable","text":"<p>Kalp Studio is designed to be the go-to platform for blockchain development, much like AWS, GCP, and Microsoft Azure dominate the cloud computing space. It offers a seamless and scalable environment where developers can build a wide range of blockchain applications and networks without worrying about the underlying infrastructure.</p>"},{"location":"Introduction/Kalp-studio-overview/#empowering-developers","title":"Empowering Developers","text":"<p>Kalp Studio provides a comprehensive suite of tools and services tailored to the needs of blockchain developers. This includes everything from smart contract libraries and SDKs to APIs and compliance features. By removing the complexities of blockchain development, Kalp Studio enables developers to focus on innovation and build applications that can scale and perform at an enterprise level.</p>"},{"location":"Introduction/Kalp-studio-overview/#focus-on-user-experience","title":"Focus on User Experience","text":"<p>A key aspect of Kalp Studio is its emphasis on user experience. The platform is designed to be intuitive and accessible, making blockchain development more efficient. This focus on usability ensures that developers of all skill levels can leverage the full potential of the platform.</p>"},{"location":"Introduction/Kalp-studio-overview/#kalp-studio-and-kalp-dlt","title":"Kalp Studio and KALP DLT","text":"<p>Kalp Studio is akin to Amazon AWS for Web 2.0, providing all the necessary tools and services for developers to build and deploy applications with ease in web 3.0. In contrast, KALP DLT is the world's first fully regulated blockchain specifically designed for Real World Asset (RWA) ecosystems. This distinction allows developers to build secure, compliant, and efficient decentralized applications that bridge the gap between traditional finance and the blockchain world. Through Kalp Studio, users can deploy smart contracts on KALP DLT, leveraging its regulatory compliance and security features.</p>"},{"location":"Introduction/Kalp-studio-overview/#target-audience","title":"Target Audience","text":""},{"location":"Introduction/Kalp-studio-overview/#learning-and-exploration","title":"Learning and Exploration","text":"<ul> <li>Students / Blockchain Enthusiasts: Kalp Studio\u2019s drag-and-drop UI builder and pre-built components are ideal for those new to blockchain development. The user-friendly interface allows for experimentation and learning without needing extensive coding knowledge.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#development-and-innovation","title":"Development and Innovation","text":"<ul> <li>Blockchain Developers: The platform caters to experienced developers by providing a comprehensive suite of tools and functionalities, including audited smart contract libraries, SDKs, and APIs. These features empower developers to build complex and secure blockchain applications efficiently.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#expertise-and-guidance","title":"Expertise and Guidance","text":"<ul> <li>Subject Matter Experts (SMEs): SMEs can leverage Kalp Studio to build custom solutions for their clients, with the platform\u2019s scalability and compliance features making it particularly attractive for enterprise-grade applications.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#business-implementation","title":"Business Implementation","text":"<ul> <li>IT and Software Service Companies: These companies can utilize Kalp Studio to offer blockchain development services to their clients, with the platform\u2019s pre-built components and faster MVP launch capabilities ensuring efficient project delivery.</li> <li>Enterprise-grade IT Service Providers: The secure and scalable infrastructure of Kalp Studio makes it suitable for building enterprise-level blockchain applications, addressing the regulatory needs of large organizations.</li> <li>SaaS Software Companies: SaaS companies can leverage Kalp Studio\u2019s infrastructure to build and deploy blockchain-powered features within their existing software offerings, accommodating growth and handling increasing user demands.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#features-advantages","title":"Features Advantages","text":""},{"location":"Introduction/Kalp-studio-overview/#rapid-development-and-deployment","title":"Rapid Development and Deployment","text":"<ul> <li>Easy to use UI Builder: Easy to use user interfaces for blockchain applications which reduces development time and resources.</li> <li>Faster MVP Launch: Simplify development with pre-built components, allowing for quicker validation of concepts and gathering of user feedback.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#versatility-and-manageability","title":"Versatility and Manageability","text":"<ul> <li>Public and Private Chain Management: Build on both public and private blockchains, giving control over the privacy and security of applications.</li> <li>Audited Smart Contract Libraries: Pre-built, secure libraries reduce development time and minimize the risk of errors.</li> <li>SDK &amp; APIs: Integrate Kalp Studio\u2019s functionalities into existing applications seamlessly.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#security-and-scalability","title":"Security and Scalability","text":"<ul> <li>Compliances: Ensure applications adhere to relevant regulations.</li> <li>Security: Protect applications and user data.</li> <li>24x7 Support: Access support whenever needed.</li> <li>Flexible Pricing (Pay as You Go): Scale costs efficiently as projects grow.</li> </ul>"},{"location":"Introduction/Kalp-studio-overview/#conclusion","title":"Conclusion","text":"<p>Kalp Studio is dedicated to simplifying and enhancing the developer experience within the blockchain ecosystem. By providing a robust and scalable platform that bridges the gap from Web 2.0 to Web 3.0, Kalp Studio empowers developers to innovate and build sophisticated blockchain applications efficiently. With a focus on user experience, comprehensive tools, and secure infrastructure, Kalp Studio stands out as a leading platform in the decentralized infrastructure space.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/","title":"What is Kalp Instant Deployer","text":""},{"location":"Introduction/What-is-kalp-instant-deployer/#kalp-instant-deployer-kid-overview","title":"Kalp Instant Deployer (KID) Overview","text":"<p>Kalp Instant Deployer (KID) is a powerful service designed to automate the deployment of smart contracts across multiple blockchain networks. KID simplifies the deployment process, providing real-time status tracking and ensuring secure and efficient contract management. This overview highlights the key features, processes, and benefits of the Kalp Instant Deployer.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#key-features","title":"Key Features","text":""},{"location":"Introduction/What-is-kalp-instant-deployer/#simplified-deployment-process","title":"Simplified Deployment Process","text":"<p>KID abstracts the complexities of smart contract deployment, making it accessible for both technical and non-technical users. By automating the deployment steps, users can focus on their contract logic without worrying about the deployment intricacies.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#real-time-status-tracking","title":"Real-Time Status Tracking","text":"<p>After initiating a deployment, users can track the status of their smart contracts in real time. A transaction hash is provided, which is used to monitor the progress and confirm the successful deployment of the contract.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#token-and-subscription-validation","title":"Token and Subscription Validation","text":"<p>Each deployment request includes a bearer token. KID validates the token and checks the user's subscription status to ensure they have the necessary permissions and active subscriptions to use the service.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#detailed-process","title":"Detailed Process","text":""},{"location":"Introduction/What-is-kalp-instant-deployer/#token-and-subscription-validation_1","title":"Token and Subscription Validation","text":"<p>Each deployment request must include a bearer token. The validation process involves: - Token Reception: The bearer token is received with the deployment request. - Validation Service: The token is sent to a validation service to verify its validity and the user's subscription status. - Proceed or Reject: If the token is valid and the subscription is sufficient, the request proceeds. Otherwise, it is rejected.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#contract-identification","title":"Contract Identification","text":"<p>After validating the token and subscription, the service identifies the type of smart contract: - Contract Verification: Determines whether the uploaded smart contract is KALP DLT based. - Contract Handling: Handles the contract appropriately based on its type for deployment.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#sending-deployment-request","title":"Sending Deployment Request","text":"<p>Once the contract type is identified, the deployment process begins: - Request Formation: Formulates a request to the wallet service with the contract details. - Deployment Request: Sends the request to the wallet service for deployment. - Transaction Hash: The wallet service deploys the smart contract and provides a transaction hash for tracking.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#status-tracking-via-cron-job","title":"Status Tracking via Cron Job","text":"<p>KID includes a cron job mechanism for regular status updates: - Cron Job Execution: A cron job runs at specified intervals (e.g., every minute). - Fetch Status: The cron job fetches the status of all pending smart contracts using the transaction hash. - Update Response: Updates the status information in the response database or system accordingly.</p>"},{"location":"Introduction/What-is-kalp-instant-deployer/#benefits","title":"Benefits","text":"<ul> <li>Efficiency: Automates and simplifies the deployment process, saving time and reducing manual errors.</li> <li>Accessibility: Makes smart contract deployment accessible to a wider audience, including those with limited technical expertise.</li> <li>Security: Ensures secure deployment through token validation and secure communication channels.</li> <li>Real-Time Updates: Provides real-time status updates, keeping users informed about the progress of their deployments.</li> </ul>"},{"location":"Introduction/What-is-kalp-instant-deployer/#conclusion","title":"Conclusion","text":"<p>Kalp Instant Deployer (KID) is a robust tool that enhances the efficiency and accessibility of deploying smart contracts. By automating the deployment process, supporting multiple blockchain networks, and providing real-time status tracking, KID offers a comprehensive solution for developers and users seeking to deploy smart contracts quickly and securely.</p>"},{"location":"Introduction/What-is-kalp-wallet/","title":"What is Kalp Wallet","text":""},{"location":"Introduction/What-is-kalp-wallet/#kalp-wallet-overview","title":"Kalp Wallet Overview","text":"<p>Kalp wallet is an advanced, versatile cryptocurrency wallet designed to support multiple blockchain networks and cater to a wide range of user needs and security preferences. It provides users with seamless and secure management of their digital assets through various wallet types, including Self-Custodial, Custodial, and MPC (Multi-Party Computation) wallets. This overview highlights the key features, supported networks, wallet types, and core functionalities of the Kalp wallet.</p>"},{"location":"Introduction/What-is-kalp-wallet/#key-features","title":"Key Features","text":"<ul> <li>Blockchain Support: Kalp  wallet supports the proprietary Kalp Tantra blockchain.</li> <li>Diverse Wallet Options: Users can choose from Self-Custodial, Custodial, and MPC wallets, each offering different levels of control and security.</li> <li>Secure Transaction Signing: The wallet supports signing transactions for various function types, ensuring secure interactions with supported blockchains.</li> <li>Smart Contract Deployment: Kalp wallet facilitates the deployment of smart contracts on supported blockchains, providing a streamlined process for developers.</li> <li>API Integration: The wallet offers an Open API system for programmatic interaction, enabling developers to integrate kalp wallet services into their applications.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#supported-blockchain-networks","title":"Supported Blockchain Networks","text":"<p>Kalp wallet supports the KALP DLT (proprietary blockchain)</p>"},{"location":"Introduction/What-is-kalp-wallet/#wallet-types","title":"Wallet Types","text":""},{"location":"Introduction/What-is-kalp-wallet/#self-custodial-wallet","title":"Self-Custodial Wallet","text":"<p>The Self-Custodial wallet gives users full control over their funds and private keys. It is ideal for advanced users who understand the responsibilities of self-custody.</p> <ul> <li>User Control: Users manage their own private keys and seed phrases.</li> <li>Security: No sensitive information is stored on the backend.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#custodial-wallet","title":"Custodial Wallet","text":"<p>The Custodial wallet offers a more user-friendly experience by managing private keys on behalf of the user. It is suitable for users who prefer convenience and ease of use.</p> <ul> <li>Managed Keys: Private keys are generated and managed by the Kalp wallet service.</li> <li>Encryption: Private keys are encrypted and securely stored in both the database and a secure vault.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#mpc-wallet","title":"MPC Wallet","text":"<p>The MPC (Multi-Party Computation) wallet provides a balance between security and usability by distributing key ownership between the user and the service.</p> <ul> <li>Distributed Keys: The private key is divided into three parts (shards) using Shamir's Secret Sharing.</li> <li>Authentication: Authentication is performed using phone, email, and Google Auth.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#core-functionalities","title":"Core Functionalities","text":""},{"location":"Introduction/What-is-kalp-wallet/#transaction-signing","title":"Transaction Signing","text":"<p>Kalp wallet supports signing transactions for various function types across supported blockchains, ensuring secure and authenticated interactions.</p> <ul> <li>Supported Function Types: View, Pure, Payable, and Non-payable functions.</li> <li>Secure Signing: Transactions are signed using the appropriate wallet type, ensuring security.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#smart-contract-deployment","title":"Smart Contract Deployment","text":"<p>Kalp wallet facilitates the deployment of smart contracts on supported blockchains, providing a streamlined process for developers.</p> <ul> <li>Supported File Types: ZIP files for KALP DLT code deployment.</li> <li>Deployment Process: The service compiles and processes the code, signs the deployment transaction, and broadcasts it to the selected blockchain network.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#api-integration","title":"API Integration","text":"<p>Kalp wallet offers an Open API system that allows users to interact with wallet services programmatically.</p> <ul> <li>API Key Management: Each user is assigned a unique API key for authentication.</li> <li>Secure Communication: API keys and tokens provide secure and authenticated access to Kalp wallet services.</li> </ul>"},{"location":"Introduction/What-is-kalp-wallet/#conclusion","title":"Conclusion","text":"<p>Kalp wallet is a comprehensive and secure cryptocurrency wallet service designed to meet the diverse needs of users and developers. With its support for KALP DLT network, various wallet types, and robust security features, Kalp wallet is well-positioned to provide a seamless and secure experience for managing digital assets.</p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/","title":"Referral Program","text":""},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#user-guide-for-kalp-studio-referral-program","title":"User Guide: For Kalp Studio Referral Program","text":"<p>Join the Kalp Studio Referral Program and earn Kalp Karma Points by inviting developers and users! Bring your network onboard and unlock exclusive rewards based on their contributions. The more you refer, the more Karma Points you earn! This guide will show you how to refer and quickly accumulate points.</p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-1-logging-into-your-kalp-studio-account","title":"Step 1: Logging into Your Kalp Studio Account","text":"<ol> <li> <p>Open your web browser: Launch your preferred web browser.</p> </li> <li> <p>Navigate to the Kalp Studio sign-in page:  Enter the URL for the Kalp Studio login page</p> </li> <li> <p>Enter your email address: Locate the \"Enter Your Email\" field on the sign-in form and enter your registered email address.</p> </li> <li> <p>Enter your password: Find the \"Enter Password\" field and type in your Kalp Studio account password.</p> </li> <li> <p>Click \"Sign In\": Once you have entered your credentials, click the \"Sign In\" button to access your Kalp Studio account.</p> </li> </ol>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-2-navigating-to-the-applications-section","title":"Step 2: Navigating to the Applications Section","text":"<ol> <li>Locate the Referral Program Option: Once logged in, you will see Referral Program app, among the other Kalp Studio applications.</li> </ol>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-3-request-referral-program-access","title":"Step 3: Request Referral Program Access","text":"<ol> <li> <p>Locate the \"Referral Program\" Card: Scroll through the Applications section to find the card labeled \"Referral Program.\"</p> </li> <li> <p>Click \"Request Access\": On the Referral Program card, click the \"Request Access\" button.</p> </li> </ol>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-4-submit-your-request","title":"Step 4: Submit Your Request","text":"<ol> <li> <p>Confirmation Pop-Up: A pop-up window will appear, asking \"Want to join our program?\".</p> </li> <li> <p>Click \"Submit Request\": To confirm your request, click the \"Submit Request\" button. If you change your mind, click \"Cancel\".</p> </li> </ol> <p></p> <p>The button on the \"Referral Program\" card will get changed to \"Request Sent,\" indicating that your request has been successfully submitted to the Kalp Studio admin for approval.</p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-6-access-referral-program","title":"Step 6: Access Referral Program","text":"<p>Email Confirmation</p> <p>Once your request to join the Kalp Studio Referral Program is approved, you will be notified via email.</p> <p></p> <p>Access Dashboard</p> <ol> <li> <p>Approval Confirmation: Once the admin has approved your request, the application list is updated with the ability to enter the program.</p> </li> <li> <p>Click \"Access Program\": Now the button label will be changed to \"Access Program\". Click on this to access the referral program dashboard.</p> </li> </ol> <p></p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-7-referral-program-dashboard","title":"Step 7: Referral Program Dashboard","text":"<p>Access Referral Tab: Upon clicking the \"Access Program\" button, the \"Referral Program\" opens and it shows the referral dashboard with the following information:</p> <p></p> <ul> <li> <p>Number Of Users Invited: This displays the number of users you have invited to join Kalp Studio through your referral program.</p> </li> <li> <p>Number Of Users Joined: This shows the number of users who have successfully joined Kalp Studio using your unique referral link or code.</p> </li> <li> <p>Kalp Karma Points: This indicates the number of Kalp Karma Points you have earned through the referral program. Kalp Karma Points are granted when invited users join using your invitation link/referral code.</p> </li> </ul> <p></p> <p>Invited Users Clicking on \"Invited Users\" tab shows all the users you have invited.</p> <p></p> <p>Joined Users Clicking on \"Joined Users\" tab shows all the users who have successfully joined using the invitation link/referral code.</p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#step-8-refer-a-new-user","title":"Step 8: Refer a new user","text":"<ol> <li> <p>Locate the \"Refer Now\" button on the main Referrals page.</p> </li> <li> <p>Click the \"Refer Now\" button. This will open a pop-up window titled \"Invite User\".</p> </li> </ol> <p></p> <ol> <li> <p>Fill in the \"Invite User\" form:</p> </li> <li> <p>Enter the Name of the person you want to invite in the \"Enter name\" field.</p> </li> <li> <p>Enter the Email address of the person you want to invite in the \"Enter email\" field.</p> </li> </ol> <p></p> <ol> <li>Click the \"Invite Now\" button within the \"Invite User\" pop-up. This will send an invitation to the specified email address.  <p>You can copy the referral code or link and share it through your preferred channels.</p> </li> </ol> <p></p>"},{"location":"Products/User%20Guide%20-%20For%20Kalp%20Studio%20Referral%20Program/#kalp-karma-points-and-rewards","title":"Kalp Karma Points and Rewards","text":"<ul> <li> <p>Referral Karma Points will be added to your account once the invited user successfully joins Kalp Studio.</p> </li> <li> <p>Kalp Karma Points usage: Use the earned kalp karma points to redeem GINI, mobile recharges, gift cards (Amazon, Flipkart, etc.), and even bill payments.</p> </li> </ul> <p>Follow above steps to access and utilize the Kalp Studio Referral Program. This program rewards your contributions to growing our community with valuable Kalp Karma Points. Earn Kalp Karma Points by referring new members and unlock exclusive rewards within the Kalp Studio ecosystem. The more you contribute, the more Kalp Karma Points you earn.</p>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/","title":"How to Add credentials and get them verified on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#how-to-add-credentials-and-get-them-verified-on-ks-pay","title":"How to Add Credentials and Get Them Verified on KS Pay?","text":"<p>Integrating a payment gateway with KS Pay requires setting up credentials and verifying them, enabling secure transaction processing for your platform. Follow this step-by-step guide to add and verify credentials on KS Pay.</p>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#step-1-add-a-payment-gateway","title":"Step 1: Add a Payment Gateway","text":"<ul> <li> <p>Steps 1-3 (Credentials, Webhook, and NPM Integration) are initially set up by the merchant.</p> </li> <li> <p>Create an Order: The merchant has one attempt to create an order. If it fails, they must re-enter payment gateway credentials and resubmit the request, granting one additional attempt.</p> </li> <li> <p>Verification: Based on the response to the order creation, the first three steps will be verified.</p> </li> <li> <p>Step 4 (Security): Once the first three steps are confirmed, the merchant can proceed to complete the Security step.</p> </li> </ul>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#step-2-enter-gateway-credentials","title":"Step 2: Enter Gateway Credentials","text":"<p>Retrieve Credentials: Get your Client ID and Client Secret from the respective payment gateway's dashboard:</p> <ul> <li> <p>For Razorpay, you'll need both the Key ID and Key Secret.</p> </li> <li> <p>For Cashfree, only the Client ID and Client Secret are required.</p> </li> </ul> <p>Enter Credentials in KS Pay:</p> <p></p> <ul> <li> <p>Input the Client ID and Client Secret fields in the KS Pay interface.</p> </li> <li> <p>Select the Payment Modes that you wish to enable (Debit Card, UPI, Net Banking, Wallet, Credit Card).</p> </li> <li> <p>Click Submit to save your credentials.</p> </li> </ul>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#step-3-configure-the-webhook-razorpay-only","title":"Step 3: Configure the Webhook (Razorpay Only)","text":"<ol> <li> <p>Copy the Webhook URL and Secret Key from the KS Pay platform.</p> </li> <li> <p>Set Up Webhook on Razorpay:</p> </li> </ol> <p></p> <ul> <li> <p>In the Razorpay dashboard, navigate to Webhooks and click on Add New Webhook.</p> </li> <li> <p>Paste the Webhook URL and Secret Key into the fields provided.</p> </li> <li> <p>Select the events you want to track, such as payment.captured and payment.failed.</p> </li> <li> <p>Save the configuration, completing the webhook setup.</p> </li> </ul> <p>This step ensures that Razorpay can communicate with KS Pay, updating you about specific payment events automatically.</p>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#step-4-npm-integration","title":"Step 4: NPM Integration","text":"<p>Open image-20241015-061937.png</p> <p></p> <ol> <li> <p>Click on the NPM Integration Link: Once on the NPM Integration step, click the provided link to access the integration document.</p> </li> <li> <p>Follow the Steps: The document will guide you through setting up KS Pay with your application using NPM, allowing seamless integration with your platform.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#step-5-security-and-verification","title":"Step 5: Security and Verification","text":"<ol> <li> <p>After completing the previous steps, proceed to the Security section to finalize the integration.</p> </li> <li> <p>KS Pay will then generate a Public API Key and a Secret API Key. These keys are essential for adding KS Pay\u2019s payment capabilities to your website or application.</p> </li> <li> <p>Enter these keys on your platform to enable secure and verified transactions.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Add-Credentials-and-Get-Them-Verified-on-KS-Pay/#create-orders","title":"Create Orders","text":"<p>Once all credentials, webhook, and NPM integration steps are verified, you\u2019re ready to start processing transactions through KS Pay. With the API keys provided, you can create orders and enable seamless payment processing for your customers.</p> <p>By following these steps, you can successfully add, verify, and secure payment gateway credentials on KS Pay, allowing you to provide a secure payment experience on your platform.</p>"},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/","title":"How to configure webhook on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/#how-to-configure-webhook-on-ks-pay","title":"How to Configure Webhook on KS Pay?","text":"<p>Configuring a webhook is essential for enabling real-time updates between your payment gateway and KS Pay. This guide walks you through setting up a webhook, specifically for Razorpay, on the KS Pay platform. By configuring the webhook, you ensure that payment events are instantly communicated to KS Pay, allowing you to track and manage transactions seamlessly.</p>"},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/#step-1-obtain-the-webhook-url-and-secret-key-from-ks-pay","title":"Step 1: Obtain the Webhook URL and Secret Key from KS Pay","text":"<ol> <li> <p>Navigate to the Add Gateway Section: In the KS Pay dashboard, under Settings, click on Add Gateway.</p> </li> <li> <p>Select Razorpay: In the list of gateway options, choose Razorpay. Once selected, KS Pay will generate a Webhook URL and a Secret Key for you.</p> </li> <li> <p>Copy the Webhook Details: You will need both the URL and Secret Key to set up the webhook on the Razorpay platform.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/#step-2-configure-webhook-on-razorpay","title":"Step 2: Configure Webhook on Razorpay","text":"<ol> <li> <p>Log in to the Razorpay Dashboard: Go to your Razorpay account and navigate to the Account &amp; Settings section, then select Webhooks.</p> </li> <li> <p>Add a New Webhook:</p> </li> <li> <p>Click on Add New Webhook to start the configuration.</p> </li> <li> <p>Paste the Webhook URL from KS Pay into the Webhook URL field.</p> </li> <li> <p>Enter the Secret Key provided by KS Pay into the Secret field. This key helps secure the communication between Razorpay and KS Pay.</p> </li> </ol> <p>3. Select Events:</p> <p></p> <ol> <li>In the Active Events section, check the events you want Razorpay to notify KS Pay about.</li> </ol> <p>You can select additional events as needed, depending on the specific notifications you want KS Pay to receive.</p> <p></p> <ol> <li>Save the Webhook Configuration: After you\u2019ve entered all the details and selected the events, click Create Webhook. Razorpay will confirm that the webhook has been created and is active.</li> </ol>"},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/#step-3-verification-on-ks-pay","title":"Step 3: Verification on KS Pay","text":"<ol> <li> <p>Return to KS Pay: Once the webhook is configured on Razorpay, go back to the KS Pay dashboard.</p> </li> <li> <p>Verify Webhook Configuration: In KS Pay, the webhook status should now reflect as Pending Verification. It will automatically update to Verified once the connection is established and tested successfully.</p> </li> <li> <p>Mark as Done: After verification, click on Mark as Done to finalize the webhook setup.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Configure-Webhook-on-KS-Pay/#test-and-monitor","title":"Test and Monitor","text":"<ol> <li> <p>Test the Webhook: To ensure everything is set up correctly, you can initiate a test transaction on Razorpay. You should see the corresponding event details reflected in KS Pay.</p> </li> <li> <p>Monitor Webhook Activity: In the Razorpay dashboard, you can view the webhook's event logs to monitor and troubleshoot any issues.</p> </li> </ol> <p>Configuring a webhook on KS Pay is a straightforward process that enables real-time payment event updates. By setting up a webhook, you enhance the transaction tracking capability on KS Pay, allowing for a seamless, automated, and secure payment experience for your platform.</p>"},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/","title":"How to integrate NPM on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/#how-to-integrate-npm-on-ks-pay","title":"How to Integrate NPM on KS Pay?","text":"<p>Integrating NPM on KS Pay enables seamless communication between your application and the KS Pay platform, allowing you to manage transactions, process payments, and receive real-time updates efficiently. This guide will take you through the steps to set up NPM integration on KS Pay.</p>"},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/#step-1-access-the-npm-integration-section","title":"Step 1: Access the NPM Integration Section","text":"<ol> <li> <p>Navigate to NPM Integration: In the KS Pay dashboard, go to Settings and select the Add Gateway option.</p> </li> <li> <p>Proceed to NPM Integration: Once you've added your gateway and configured your webhook, you\u2019ll reach the NPM Integration step. Here, you\u2019ll find a link to the integration document.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/#step-2-follow-the-npm-integration-document","title":"Step 2: Follow the NPM Integration Document","text":"<ol> <li> <p>Click on the Integration Link: Click on the link provided under the Integration Document section. This will open a step-by-step guide for installing and integrating KS Pay with your application using NPM.</p> </li> <li> <p>Install KS Pay NPM Package: Open your terminal and run the command provided in the document to install the KS Pay package. It should look something like this:  </p> </li> </ol> <p></p> <ol> <li> <p>This package contains all the necessary methods for interacting with KS Pay.</p> </li> <li> <p>Customize this code with your reference number, amount, and other required parameters as described in the integration guide.</p> </li> <li> <p>Configure Headers: Set up the headers with your App Signature and Environment URL to ensure secure communication between your app and KS Pay.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/#step-3-complete-and-test-the-integration","title":"Step 3: Complete and Test the Integration","text":"<p>Test Your Integration:</p> <ol> <li> <p>After configuring your code, test the integration by initiating a sample transaction from your application. This test will help ensure that your application is successfully connected to KS Pay.</p> </li> <li> <p>Confirm that transaction updates, such as payment successful or payment failed, are being received correctly in your application.</p> </li> </ol> <p>Generate API Keys:</p> <ul> <li> <p>After completing NPM integration, KS Pay will generate a Public API Key and a Secret API Key for your platform. These keys are essential for secure and authenticated transactions.</p> </li> <li> <p>Use these keys on your website or application to enable payment functionality for your customers.</p> </li> </ul>"},{"location":"Products/KS-Pay/How-to-Integrate-NPM-on-KS-Pay/#step-4-finalize-security","title":"Step 4: Finalize Security","text":"<p>Security Verification:</p> <ol> <li> <p>Once NPM integration is complete, proceed to the Security section in KS Pay to verify your setup.</p> </li> <li> <p>KS Pay will verify all integrations and ensure your platform is securely connected, allowing you to start processing transactions immediately.</p> </li> </ol> <p>Integrating NPM on KS Pay allows you to connect your application to KS Pay\u2019s payment platform, providing secure, reliable, and real-time transaction processing. By following these steps, you can complete the NPM setup, test the connection, and generate API keys to enable seamless payment capabilities for your customers. This integration is essential for automating payment workflows and keeping track of payment statuses directly within your application.</p>"},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/","title":"How to add a company on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/#how-to-add-a-company-on-ks-pay","title":"How to add a company on KS Pay?","text":"<p>KS Pay offers a streamlined solution for businesses looking to manage their payments and financial transactions. For a seamless experience, the first step involves adding your company profile to the platform. This guide will walk you through each stage of the registration process from account creation to filling out your company details ensuring you have everything set up correctly to start using KS Pay\u2019s features.</p>"},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/#registration-screen","title":"Registration Screen","text":"<ul> <li> <p>First &amp; Last Name: Enter your personal details.</p> </li> <li> <p>User Name: Create a unique username for your account.</p> </li> <li> <p>Email: Provide a valid email address for communication and verification.</p> </li> <li> <p>Password &amp; Confirm Password: Create a secure password and confirm it.</p> </li> <li> <p>Terms &amp; Conditions Agreement: Before completing registration, you\u2019ll need to agree to the platform\u2019s terms and privacy policy.</p> </li> </ul> <p></p> <p>Register Button: Once all fields are filled, click the Register button to proceed.</p> <p></p>"},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/#step-4-access-the-company-profile-section","title":"Step 4: Access the Company Profile Section","text":"<ol> <li> <p>After verification, log in to KS Pay and navigate to the Company Profile section.</p> </li> <li> <p>You\u2019ll be presented with a form to add your company's information.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/#step-5-enter-company-details","title":"Step 5: Enter Company Details","text":"<p>Fill out the following fields to complete the company profile setup:</p> <ul> <li> <p>Company Name: This is the name of the company. This is a mandatory field.</p> </li> <li> <p>Website (Optional): The URL of the company's website. This field is not mandatory.</p> </li> <li> <p>Address: The full street address of the company. This field is mandatory.</p> </li> <li> <p>Country: This field represents the country of the company. This field is mandatory.</p> </li> <li> <p>State: This field represents the state of the company.</p> </li> <li> <p>City (Optional): The name of the city where the company is located. This field is optional.</p> </li> <li> <p>Zip Code: This field represents the zip code for the company. This field is mandatory.</p> </li> </ul> <p></p>"},{"location":"Products/KS-Pay/How-to-add-a-company-on-KS-Pay/#step-6-submit-the-company-profile","title":"Step 6: Submit the Company Profile","text":"<ol> <li> <p>Double-check all information entered to ensure accuracy.</p> </li> <li> <p>Click \"Submit\" to save your company's profile.</p> </li> <li> <p>Upon submission, your company details will be saved in KS Pay.</p> </li> </ol> <p>Adding your company to KS Pay is a straightforward process that sets the foundation for utilizing its payment management tools effectively. By completing your company profile, you gain access to essential features tailored to your business needs, allowing for efficient transactions and enhanced financial control. Follow these steps, and you\u2019ll be ready to make the most of what KS Pay has to offer.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/","title":"How to add a domain","text":""},{"location":"Products/KS-Pay/How-to-add-a-domain/#how-to-add-a-domain","title":"How to add a domain?","text":"<p>Accessing and configuring a domain for your app on KS Pay is a straightforward process that enhances your app's functionality and brand identity. This guide will walk you through each step, from logging into the KS Pay dashboard to adding and verifying your custom domain. By following these simple instructions, you\u2019ll have your app linked to a personalized domain, ensuring a seamless integration with KS Pay\u2019s services.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#login-to-ks-pay-dashboard","title":"Login to KS Pay Dashboard","text":"<p>Access the KS Pay platform and log in with your credentials. Once logged in, you'll be directed to the main dashboard where you can manage your apps.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#navigate-to-the-app-list","title":"Navigate to the App List","text":"<p>On the main dashboard, locate the list of registered apps. Each app has a unique ID, name, associated email, and country details.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#select-your-app","title":"Select Your App","text":"<p>Identify the app for which you want to add a domain. Click on the app name to access its details.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#open-the-app-overview","title":"Open the App Overview","text":"<p>You will be directed to the App Overview page. This page provides details about transactions associated with your app, including the total number of transactions and today\u2019s transactions. If no transactions have been recorded yet, this section will display \u201cNo transaction yet.\u201d</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#go-to-settings","title":"Go to Settings","text":"<p>In the sidebar menu on the left, click on Settings. This section allows you to manage various configurations for your app, including API keys and domain settings.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#access-domain-settings","title":"Access Domain Settings","text":"<p>In the Settings section, locate the Domain tab next to Generate API Key and Payment Gateway Settings. Click on Domain to open the domain configuration settings.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#add-your-domain","title":"Add Your Domain","text":"<p>In the Domain tab, you\u2019ll see an option to add your domain. Click the pencil icon next to the domain field to edit or input your domain. Enter the desired domain URL and save the changes.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#save-and-verify","title":"Save and Verify","text":"<p>After entering your domain, confirm your changes. Ensure that the domain is correctly saved and displayed in the settings. This domain will now be associated with your app on KS Pay.</p>"},{"location":"Products/KS-Pay/How-to-add-a-domain/#finalize-settings","title":"Finalize Settings","text":"<p>Once the domain is added, you can navigate back to other sections or return to the dashboard. Your app is now configured with the specified domain, allowing it to connect to KS Pay services under this domain.</p> <p>By following these steps, you can add domain to the KS Pay platform, ensuring a smooth and secure user experience.</p>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/","title":"How to change the password on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#how-to-change-the-password-on-ks-pay","title":"How to change the password on KS Pay?","text":"<p>Changing your password on KS Pay is an important step in maintaining the security of your account. Whether you want to update your password regularly for security reasons or you've forgotten your current one, this guide will walk you through the simple process of resetting it.</p>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-1-log-in-to-ks-pay","title":"Step 1: Log In to KS Pay","text":"<ul> <li>Open the KS Pay application or website and log in with your credentials.</li> </ul>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-2-go-to-the-main-dashboard","title":"Step 2: Go to the Main Dashboard","text":"<ul> <li>Once logged in, you will see the main dashboard, displaying a list of apps registered under your account. This screen includes information like App ID, App Name, Email, Country, and options to enable or disable apps.</li> </ul>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-3-access-your-profile","title":"Step 3: Access Your Profile","text":"<p>You\u2019ll see your profile icon at the top-right corner of the dashboard. Click on it to open a dropdown menu.</p> <p></p>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-4-access-password-settings","title":"Step 4: Access Password Settings","text":"<ul> <li> <p>Under Settings, go to the Password Settings tab.</p> </li> <li> <p>Click on Change Password to proceed to the password update page.</p> </li> </ul> <p>Enter Old and New Passwords</p> <p>On the Password Update page, you will see three fields:</p> <ul> <li> <p>Old Password: Enter your current password.</p> </li> <li> <p>New Password: Enter the new password you want to set.</p> </li> <li> <p>Confirm New Password: Re-enter your new password for confirmation.</p> </li> </ul> <p></p>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-5-update-password","title":"Step 5: Update Password","text":"<ul> <li> <p>Once you've filled in all fields, click on the Update Password button.</p> </li> <li> <p>A confirmation dialog will appear, informing you that changing your password will log you out of all devices.</p> </li> <li> <p>Click Confirm to complete the process.</p> </li> </ul> <p></p>"},{"location":"Products/KS-Pay/How-to-change-the-password-on-KS-Pay/#step-6-logout-and-re-login","title":"Step 6: Logout and Re-login","text":"<ul> <li>After confirming, you\u2019ll be logged out. You can now log back in using your new password.</li> </ul> <p>By following these steps, you can change the password on KS Pay platform, ensuring a smooth and secure user experience.</p>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/","title":"How to manage payment gateway","text":""},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#how-to-manage-payment-gateway","title":"How to manage Payment Gateway?","text":"<p>Managing a payment gateway is essential for any business looking to facilitate secure and efficient online transactions. A payment gateway acts as a bridge between customers and merchants, ensuring that sensitive payment information is transmitted securely while authorizing and processing transactions in real-time.</p>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-1-access-payment-gateway-settings","title":"Step 1: Access Payment Gateway Settings","text":"<ol> <li> <p>Log in to your KS Pay account.</p> </li> <li> <p>Navigate to the Settings tab on the left sidebar.</p> </li> <li> <p>Select the Payment Gateway Settings tab at the top.</p> </li> </ol> <p></p>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-2-add-payment-gateways","title":"Step 2: Add Payment Gateways","text":"<ol> <li> <p>In the Payment Gateway Settings page, you\u2019ll see a list of existing payment gateways associated with the currency.</p> </li> <li> <p>To add a new gateway, click on + Add Gateway.</p> </li> <li> <p>Choose the gateway you wish to add and select the currency it supports (e.g., USD or Rupees).</p> </li> <li> <p>Once added, the gateway will appear under the relevant currency with options to verify or disable it.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-3-verify-payment-gateways","title":"Step 3: Verify Payment Gateways","text":"<ol> <li> <p>Verified gateways are marked with a green checkmark. To verify a gateway, select the Edit (pencil) icon next to the gateway name.</p> </li> <li> <p>Complete any required verification steps provided by the gateway provider.</p> </li> <li> <p>Once verified, the status should update automatically.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-4-enable-or-disable-payment-gateways","title":"Step 4: Enable or Disable Payment Gateways","text":"<ol> <li> <p>Use the toggle switch next to each gateway to enable or disable it. Enabled gateways will be active for transactions.</p> </li> <li> <p>For a gateway to be fully operational, it needs to be both enabled and verified.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-5-set-payment-gateway-priority","title":"Step 5: Set Payment Gateway Priority","text":"<ol> <li> <p>Click on Set Priority at the bottom of the Payment Gateway section.</p> </li> <li> <p>A panel will appear where you can drag and drop gateways based on your desired priority.</p> </li> <li> <p>Place the most preferred gateway at the top of the list, and arrange others below as fallback options.</p> </li> <li> <p>Save your priority settings once satisfied.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-manage-Payment-Gateway/#step-6-manage-currency-and-payment-modes","title":"Step 6: Manage Currency and Payment Modes","text":"<ol> <li> <p>Under the Set Priority section, you can select specific Currencies (e.g., USD or Rupees).</p> </li> <li> <p>For each currency, specify the Payment Modes such as PayPal or Net Banking.</p> </li> <li> <p>Drag to rearrange payment modes if you need to prioritize certain options over others.</p> </li> </ol> <p>By following these steps, you can efficiently manage your payment gateway options in KS Pay, ensuring a seamless experience for users making transactions in multiple currencies.</p>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/","title":"How to navigate to the profile at KS Pay","text":""},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#how-to-navigate-to-the-profile-at-ks-pay","title":"How to navigate to the profile at KS Pay?","text":"<p>Navigating to your profile on KS Pay allows you to manage account settings, update personal information, and customize your preferences. This guide will provide you with step-by-step instructions on how to access your profile quickly and easily.</p>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#step-1-log-in-to-ks-pay","title":"Step 1: Log In to KS Pay","text":"<ul> <li>Open the KS Pay application or website and log in with your credentials.</li> </ul>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#step-2-go-to-the-main-dashboard","title":"Step 2: Go to the Main Dashboard","text":"<ul> <li>Once logged in, you will see the main dashboard, displaying a list of apps registered under your account. This screen includes information like App ID, App Name, Email, Country, and options to enable or disable apps.</li> </ul>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#step-3-access-your-profile","title":"Step 3: Access Your Profile","text":"<p>You\u2019ll see your profile icon at the top-right corner of the dashboard. Click on it to open a dropdown menu.</p> <p></p>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#step-4-select-my-profile","title":"Step 4: Select \"My Profile\"","text":"<ul> <li>In the dropdown menu, click on \"My Profile.\" This option will direct you to the profile section of KS Pay.</li> </ul>"},{"location":"Products/KS-Pay/How-to-navigate-to-the-profile-at-KS-Pay/#step-5-view-or-edit-your-personal-information","title":"Step 5: View or Edit Your Personal Information","text":"<ul> <li> <p>On the profile page, you can view details like your email, phone number, and date of birth. This page also shows whether your email is verified.</p> </li> <li> <p>If you wish to make any updates, simply click on the \"Edit Personal Info\" button.</p> </li> </ul> <p>By following these steps, you can navigate to the profile KS Pay platform, ensuring a smooth and secure user experience.</p>"},{"location":"Products/KS-Pay/How-to-register-an-app-on-KS-Pay/","title":"How to register an app on KS Pay","text":""},{"location":"Products/KS-Pay/How-to-register-an-app-on-KS-Pay/#how-to-register-an-app-on-ks","title":"How to register an app on KS","text":"<p>Registering an app on KS Pay is a straightforward process that allows you to integrate your application seamlessly into the platform. This guide will walk you through each step, from logging into your KS Pay account to successfully registering your app. By following these simple instructions, you'll be able to set up your app efficiently, enabling you to access KS Pay\u2019s features and provide a secure experience for your users. Let\u2019s get started!</p> <p>Step 1: Access the KS Pay Login Page Open your browser and go to the KS Pay website.</p> <p>You will see a login page with fields to enter your email and password.</p> <p></p> <p>Step 2: Enter Your Login Credentials Type your registered email address into the \"Enter Your Email\" field.</p> <p>Type your password into the \"Enter Password\" field. You can click on the eye icon to show or hide your password.</p> <p>If you have forgotten your password, click on \"Forgot Password?\" to initiate a password recovery process.</p> <p></p> <p>Step 3: Click on \"Sign In\" Access via Kalp Studio Accounts:</p> <p>Go to accounts.kalp.studio.</p> <p>From the dashboard, click on KS Pay.</p> <p>You will be directed to the KS Pay application page.</p> <p>Access via KS Pay URL Directly:</p> <p>Open the KS Pay URL directly in your browser.</p> <p>You\u2019ll be taken to the authentication (login) page first.</p> <p>After a successful login, you\u2019ll automatically be redirected to the KS Pay application page.</p> <p>This ensures secure access regardless of the entry point.</p> <p>Step 4: Access the App Registration Page Once logged in, you will be taken to your dashboard. If you haven\u2019t registered any apps yet, the page will display a prompt saying, \"You have not registered any Application yet\".</p> <p>Click on the \"Add App\" button to start the app registration process.</p> <p></p> <p>Step 5: Fill in App Registration Details You will be directed to the Register an App page. Here, fill in the following details:</p> <p>Upload your app logo (Optional): Allows optional upload of a logo image (JPG, JPEG, PNG, max 100KB).</p> <p>App Name*: Mandatory name of the application.</p> <p>Email*: Mandatory email address for contact.</p> <p>Address*: Mandatory address selection for the application.</p> <p>Phone Number (Optional): Optional phone number including the country code.</p> <p>Country*: Mandatory country selection for the application.</p> <p>State (Optional): Optional state selection for the application.</p> <p>City (Optional): Optional city for the application.</p> <p>Zip Code/Postal Code*: Mandatory zip/postal code for the application.</p> <p>Cancel: Cancels the registration process.</p> <p>Add App: Submits the form to register the application.</p> <p></p> <p>Step 6: Submit the App Registration After entering all the required information, click on the \"Add App\" button to register your app.</p> <p></p> <p>A confirmation message will appear on your dashboard indicating that your app has been successfully registered.</p> <p>Once registered, your app will appear on the dashboard with an App ID. You can enable or disable the app, or edit its details as needed.</p> <p>Open image-20241008-061533.png image-20241008-061533.png By following these steps, you can easily add app to the KS Pay platform, ensuring a smooth and secure user experience.</p>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/","title":"How to view your transactions","text":""},{"location":"Products/KS-Pay/How-to-view-your-transactions/#how-to-view-your-transactions","title":"How to view your transactions?","text":"<p>Viewing your transactions on KS Pay helps you keep track of your payment history, monitor your spending, and manage your finances efficiently. This guide provides a step-by-step approach to accessing and reviewing your transaction details, so you can stay informed about your account activity.</p>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/#step-1-access-the-kalp-pay-dashboard","title":"Step 1: Access the KALP PAY Dashboard","text":"<ol> <li> <p>Log in to your KALP PAY account.</p> </li> <li> <p>On the main dashboard, you'll see a list of all registered apps with details such as App ID, App Name, Email, and Country.</p> </li> <li> <p>Locate the app for which you want to view transactions.</p> </li> </ol> <p></p>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/#step-2-open-the-app-overview","title":"Step 2: Open the App Overview","text":"<ol> <li> <p>Click on the app name from the list to open the App Overview.</p> </li> <li> <p>Here, you can view a summary of recent transactions and other app-related details.</p> </li> </ol> <p></p>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/#step-3-navigate-to-the-transactions-tab","title":"Step 3: Navigate to the Transactions Tab","text":"<ol> <li> <p>On the left sidebar, click on Transactions to access the transaction history.</p> </li> <li> <p>You\u2019ll be directed to a page with a detailed view of all transactions for the selected app.</p> </li> </ol> <p></p>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/#step-4-view-transaction-history","title":"Step 4: View Transaction History","text":"<ol> <li> <p>In the Transaction History section, you\u2019ll see a list of transactions with details such as Transaction ID, Creation Date, Last Update, Payment Mode, Payment Gateway, Currency, Amount, and Status.</p> </li> <li> <p>To find a specific transaction, you can use the Search bar by entering the Transaction ID.</p> </li> </ol>"},{"location":"Products/KS-Pay/How-to-view-your-transactions/#step-5-filter-or-download-transactions","title":"Step 5: Filter or Download Transactions","text":"<ol> <li> <p>Use the Date Range filter at the top to view transactions within a specific time frame.</p> </li> <li> <p>If needed, you can download the transaction history by clicking on the Download button in the top-right corner.</p> </li> </ol> <p>By following these steps, you can view your transactions the KS Pay platform, ensuring a smooth and secure user experience.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/","title":"How to build explorer using KS Query","text":""},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#how-to-develop-an-explorer-using-ks-query-apis","title":"How to Develop an Explorer Using KS Query APIs","text":"<p>Building an efficient and customizable blockchain Explorer is now more accessible than ever with KS Query APIs. These APIs provide powerful tools for querying blockchain data, allowing developers to create an Explorer with features like transaction tracking, smart contract analysis, and network monitoring. This guide will walk you through the essential steps to develop your own Explorer using KS Query APIs.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#1-understand-the-ks-query-apis","title":"1. Understand the KS Query APIs","text":"<p>KS Query APIs offer a comprehensive suite of endpoints to interact with blockchain data. The key features include:</p> <ul> <li>Smart Contracts: Query and analyze smart contract information.</li> <li>Blocks: Retrieve details of blocks, including transactions and timestamps.</li> <li>Transactions: Track transaction data across the network.</li> </ul> <p>Before starting, familiarize yourself with the available endpoints through the API Console provided in the KS Query platform.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#2-set-up-your-environment","title":"2. Set Up Your Environment","text":"<p>To begin, ensure you have the following tools: - Postman: For testing APIs. - Browser Development Tools: To inspect API calls and understand the architecture. - A development environment for coding your Explorer (e.g., React, Angular, or plain JavaScript).</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#3-api-integration-steps","title":"3. API Integration Steps","text":""},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#a-access-the-api-console","title":"a. Access the API Console","text":"<p>Navigate to the KS Query API Console and locate the All APIs section. Here, you\u2019ll find a list of available endpoints categorized into:</p> <p></p> <ul> <li>Smart Contracts</li> <li>Blocks</li> <li>Transactions</li> <li>Network</li> </ul>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#b-select-and-copy-the-required-inputs","title":"b. Select and Copy the required inputs","text":"<p>Choose the endpoint you wish to use and copy its URL. For example this is our KS query explorer URL</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#c-check-parameters","title":"c. Check Parameters","text":"<p>Click the Check Params button to retrieve:</p> <p></p> <p></p> <p></p> <ul> <li>Network: Specify the blockchain network (e.g., <code>devnet</code>).</li> <li>Blockchain: Specify the blockchain name (e.g., <code>Ethereum</code> or <code>kalp</code>).</li> <li>API Key: Select or generate an active API key from the API Key Generation tab.</li> </ul>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#d-test-api-calls-in-postman","title":"d. Test API Calls in Postman","text":"<p> 1. Open Postman and create a new GET request. 2. Paste the copied endpoint into the request URL. 3. Add the following Headers:   - <code>network</code>: Enter the network name (e.g., <code>devnet</code>).   - <code>blockchain</code>: Enter the blockchain name (e.g., <code>kalp</code>).   - <code>api-key</code>: Paste your API key. 4. Send the request and verify the response.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#4-develop-the-frontend","title":"4. Develop the Frontend","text":"<p>Once you\u2019ve tested the API responses, start building the frontend for your Explorer. A typical Explorer interface includes: - Tabs for Smart Contracts, Blocks, Transactions, and Network Monitoring. - Search and Filter Options: Enable users to filter data using parameters like <code>smartContractName</code>, <code>from</code>, and <code>to</code>. - Interactive Charts and Tables: Display blockchain data dynamically.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#5-example-querying-smart-contracts","title":"5. Example: Querying Smart Contracts","text":"<p>To create a tab that displays smart contract details: 1. Use the <code>/analytics/chaincode</code> endpoint. 2. Pass query parameters like <code>smartContractName</code> to fetch specific results. 3. Display the results in a table format, including details like contract address, creation date, and associated transactions.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#6-advanced-features","title":"6. Advanced Features","text":"<ul> <li>Real-Time Updates: Use WebSocket endpoints (if supported) to fetch real-time data.</li> <li>Metrics and Analytics: When Metrics APIs are exposed in the future, integrate them to provide deeper insights.</li> <li>Custom Themes: Customize the Explorer UI to match your branding.</li> </ul>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#7-test-and-deploy","title":"7. Test and Deploy","text":"<ul> <li>Test your Explorer thoroughly, ensuring all API calls return accurate and complete data.</li> <li>Deploy your Explorer on a cloud platform like AWS, Azure, or Netlify.</li> </ul>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#8-explore-with-inspect-tool","title":"8. Explore with Inspect Tool","text":"<p>For a deeper understanding of the architecture, use the browser\u2019s Inspect Tool to analyze the API calls and responses. This will help you troubleshoot and optimize the integration.</p>"},{"location":"Products/KS-Query/How-to-built-explorer-using-ks-query/#conclusion","title":"Conclusion","text":"<p>Developing an Explorer using KS Query APIs is a process that combines API testing, frontend development, and integration. </p>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/","title":"How to create an API Auth Key","text":""},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#how-to-create-an-api-authentication-key-in-ks-query","title":"How to Create an API Authentication Key in KS Query","text":"<p>Tip</p> <p>To proceed with the flow, one must first select the Blockchain and network, then create or select an active API authentication key, and finally retrieve all APIs.</p> <p>Info</p> <p>Users can currently select only the KALP DLT chain and the Test Net network. Support for other options, such as Ethereum and Binance, will be introduced in upcoming releases.</p> <p>An API authentication key is essential for securely accessing the features and functionalities provided by KS Query. Follow the steps below to create an API auth key.</p>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#step-1-navigate-to-the-dashboard","title":"Step 1: Navigate to the Dashboard","text":"<ol> <li> <p>Log into Kalp studio platform (https://accounts.kalp.studio/login).</p> </li> <li> <p>Log in to your account using your credentials. If you don\u2019t have an account, sign up to create one.</p> </li> <li> <p>Once logged in, you\u2019ll be redirected to the Dashboard, where you can explore various products and features.</p> </li> <li> <p>From the Dashboard, scroll down to the Our Products section.</p> </li> </ol> <p></p> <p>5.Find KS Query and click Explore under KS Query in the Our Products section to proceed.</p>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#step-2-open-the-api-key-generation-page","title":"Step 2: Open the API Key Generation Page","text":"<ol> <li>From the left-hand side menu, select API Key Generation.</li> </ol> <p>2.You will be redirected to the API key creation interface, where you can set up a new key.</p>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#step-3-fill-in-the-key-details","title":"Step 3: Fill in the Key Details","text":"<ol> <li> <p>In the Create API Auth Key dialog box, provide the following details: </p> </li> <li> <p>Key Name: Enter a meaningful name for your key. For example, \"tradingbot.\"</p> </li> <li> <p>Key Description (optional): Provide a description for the key to specify its purpose, such as \"API key for tradingbot.\"</p> </li> <li> <p>After entering the details, click the Create Now button.</p> </li> </ol>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#step-4-how-to-view-your-api-key","title":"Step 4: How to view your API Key","text":"<ul> <li>On the API Key Generation page, You can view your generated API key. Once created, your API auth key will be generated and available for use.</li> </ul>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#step-5-use-your-api-key","title":"Step 5: Use Your API Key","text":"<ul> <li>Copy the generated key securely and use it for API requests.</li> <li>Ensure you do not share the key publicly to prevent unauthorized access.</li> </ul>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#tips-for-secure-api-key-usage","title":"Tips for Secure API Key Usage","text":"<ul> <li>Keep Your Key Safe: Store it in a secure location and avoid sharing it unnecessarily.</li> <li>Revoke Old Keys: If a key is compromised, revoke it immediately and create a new one.</li> <li>Monitor API Usage: Regularly check the API usage statistics to ensure there are no unauthorized activities.</li> </ul>"},{"location":"Products/KS-Query/How-to-create-an-API-Auth-Key/#conclusion","title":"Conclusion","text":"<p>Creating an API auth key in KS Query is a straightforward process that allows secure access to the platform's powerful features. Follow the steps above to set up your key and start utilizing KS Query for your blockchain projects efficiently.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/","title":"How to get started with KS Query","text":""},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#getting-started-with-ks-query-a-step-by-step-guide","title":"Getting Started with KS Query: A Step-by-Step Guide","text":"<p>Tip</p> <p>To proceed with the flow, one must first select the Blockchain and network, then create or select an active API authentication key, and finally retrieve all APIs.</p> <p>Info</p> <p>Users can currently select only the KALP DLT chain and the Test Net network. Support for other options, such as Ethereum and Binance, will be introduced in upcoming releases.</p> <p>KS Query by Kalp Studio allows users to access real-time and historical blockchain data through various interfaces, such as GraphQL APIs, SQL, and WebSockets. Whether you want to create blockchain explorers or analyze blockchain data, KS Query is the ideal solution. In this article, we\u2019ll guide you through the process of getting started with KS Query.</p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#step-1-log-in-to-kalp-studio","title":"Step 1: Log in to Kalp Studio","text":"<ol> <li>Log into Kalp Studio (https://accounts.kalp.studio/login).</li> <li>Log in to your account using your credentials. If you don\u2019t have an account, sign up to create one.</li> <li>Once logged in, you\u2019ll be redirected to the Dashboard, where you can explore various products and features.</li> </ol>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#step-2-locate-ks-query-in-the-dashboard","title":"Step 2: Locate KS Query in the Dashboard","text":"<ol> <li>From the Dashboard, scroll down to the Our Products section.</li> </ol> <p>2.You\u2019ll see a list of Kalp Studio\u2019s products, including KS Storage, KS Query, and more.</p> <p>3.Find KS Query and click Get Started or Try Now under KS Query in the Our Products section to proceed. </p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#step-3-accessing-ks-query-as-a-new-user","title":"Step 3: Accessing KS Query as a New User","text":"<p>From the Dashboard, scroll down to the Our Products section.</p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#1-dashboard-overview","title":"1. Dashboard Overview","text":"<ul> <li>Message: When accessing KS Query for the first time, a message displays: \"You have not subscribed to any KS Query.\"</li> <li>Action Prompt: A prominent \"Subscribe Now\" button is visible. Clicking this button will redirect you to the subscription page to select and activate a plan.</li> </ul>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#2-all-apis-section","title":"2. All APIs Section","text":"<ul> <li>API Hits Counter: Displays \"0\" total API hits since no requests are made without an active subscription.</li> <li>Network Selection Prompt: A message states, \"Please select a blockchain and network to proceed.\"</li> </ul>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#3-api-key-generation","title":"3. API Key Generation","text":"<ul> <li>Message: \"No API key found. Please create one to proceed.\"</li> <li>Action Prompt: Click the Create API Auth Key button to generate a new API key after activating a subscription. This step is essential for accessing KS Query APIs.</li> </ul>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#4-subscription-page","title":"4. Subscription Page","text":"<ul> <li>Current Status: Displays as Inactive when no active subscription exists.</li> <li>Plan Details: The subscription details section remains empty, showing placeholders for:     -Annual Plan     -Subscription Start Date     -Renewal Date</li> <li>Purchase History: A table labeled \"Purchase History\" will be empty, with no data displayed.</li> <li>Action Prompt: To activate a subscription, click the Subscription button to choose a plan and proceed with payment.</li> </ul> <p>Before subscribing, the KS Query interface provides a clear pathway for users to activate their plans and begin using the service. The interface ensures that necessary steps, such as subscription activation and API key generation, are highlighted to facilitate a seamless onboarding process. </p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#step-4-subscribe-to-ks-query","title":"Step 4: Subscribe to KS Query","text":"<p>To use KS Query, you\u2019ll need to subscribe to one of the available plans. Follow these steps:</p> <ol> <li> <p>Click on Get Started  under KS Query in the Our Products section. </p> </li> <li> <p>If you don\u2019t already have an active subscription, you\u2019ll be prompted to subscribe.</p> </li> <li> <p>You'll Navigate to the Billing section while choosing subscription.</p> </li> </ol> <p></p> <p>4.Choose a plan that suits your needs:</p> <ul> <li>Starter Plan: $10.00 per day (10000 API request).</li> <li>Developer Plan: $25.00 per month (20,000 API requests).</li> <li>Enterprise Plan: $50.00 per month (50,000 API requests).</li> </ul> <p></p> <p>5.Click Subscribe under your desired plan and confirm your subscription. A pop-up will appear asking you to confirm your choice.</p> <p></p> <p></p> <p></p>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#step-5-confirm-activation","title":"Step 5: Confirm Activation","text":"<ol> <li>After successfully subscribing, return to the Dashboard.</li> <li>Check the Our Products section to ensure that KS Query is marked as Active. This indicates your subscription is active and ready to use.</li> </ol>"},{"location":"Products/KS-Query/How-to-get-started-with-KS-Query/#conclusion","title":"Conclusion","text":"<p>Getting started with KS Query is simple and straightforward. Whether you\u2019re building custom APIs for blockchain analytics or creating blockchain explorers, KS Query\u2019s versatile interface makes it a reliable choice. </p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/","title":"How to invoke API of KS Query","text":""},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#how-to-invoke-apis-of-ks-query","title":"How to Invoke APIs of KS Query","text":"<p>The KS Query API provides a suite of endpoints to interact with blockchain data, such as retrieving smart contract details, transactions, and block information. Below is a step-by-step guide to invoking these APIs effectively.</p>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#step-1-copy-the-desired-endpoint","title":"Step 1: Copy the Desired Endpoint","text":"<ol> <li>Open the All APIs section in the KS Query Console.</li> </ol> <ol> <li> <p>Locate the specific endpoint you want to use. For instance:</p> <p>https://dev-ks-analytics-api.p2eppl.com/analytics/chaincode</p> </li> <li> <p>Click on the copy icon next to the endpoint to copy its URL.</p> </li> </ol>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#step-2-check-parameters","title":"Step 2: Check Parameters","text":"<ol> <li>Click the Check Params button next to the endpoint you selected.</li> </ol> <ol> <li>Gather the required details:</li> <li>Params: Retrieve the headers and query parameters related with API</li> <li>Blockchain: Retrieve the blockchain name from the Blockchain &amp; Network tab (e.g., Ethereum or Kalp).</li> <li>Network: Retrieve the network name from the same tab (e.g., <code>devnet</code>).</li> <li> <p>API Key: Select an active API key from the API Key Generation tab.</p> </li> <li> <p>Optionally, explore and configure Search Parameters:</p> </li> <li><code>smartContractName</code>: The name of the smart contract to filter the results (optional).</li> <li><code>from</code> and <code>to</code>:  formatted start and end dates for filtering (optional).</li> </ol>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#step-3-use-the-endpoint-in-postman","title":"Step 3: Use the Endpoint in Postman","text":"<ol> <li>Open Postman and create a new GET request.</li> <li>Paste the copied endpoint URL into the request URL field.</li> <li>Add the required Headers to the request:</li> <li><code>network</code>: Specify the network name (e.g., <code>devnet</code>).</li> <li><code>blockchain</code>: Specify the blockchain name (e.g., <code>kalp</code>).</li> <li><code>api-key</code>: Provide the active API key retrieved from the KS Query console.</li> </ol>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#example-header-configuration","title":"Example Header Configuration:","text":"Key Value <code>network</code> <code>devnet</code> <code>blockchain</code> <code>kalp</code> <code>api-key</code> <code>your-api-key</code> <ol> <li>Click Send in Postman to execute the API request and receive the response.</li> </ol>"},{"location":"Products/KS-Query/How-to-invoke-api-of-KS-query/#conclusion","title":"Conclusion","text":"<p>Using the KS Query APIs  process that allows you to harness blockchain data for your applications. By carefully setting up your API requests in tools like Postman, you can seamlessly integrate these APIs into your workflows. Follow these steps to fetch data dynamically and build powerful blockchain-based solutions.</p>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/","title":"How to select blockchain and network on KS Query","text":""},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#how-to-select-a-blockchain-and-network-in-ks-query","title":"How to Select a Blockchain and Network in KS Query","text":"<p>Tip</p> <p>To proceed with the flow, one must first select the Blockchain and network, then create or select an active API authentication key, and finally retrieve all APIs.</p> <p>Info</p> <p>Users can currently select only the KALP DLT chain and the Test Net network. Support for other options, such as Ethereum and Binance, will be introduced in upcoming releases.</p> <p>Using KS Query effectively begins with selecting the right blockchain and network. This guide walks you through the steps to choose your desired blockchain and network within the KS Query interface.</p>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#step-1-locate-ks-query-in-the-dashboard","title":"Step 1: Locate KS Query in the Dashboard","text":"<ol> <li>Log into Kalp Studio (https://accounts.kalp.studio/login).</li> <li>Log in to your account using your credentials. If you don\u2019t have an account, sign up to create one.</li> <li>From the Dashboard, scroll down to the Our Products section.</li> </ol> <p>2.Find KS Query and click Get Started under KS Query in the Our Products section to proceed.</p>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#step-2-blockchain-network-selection","title":"Step 2: Blockchain &amp; Network Selection","text":"<p>After clicking Select Now, the Blockchain &amp; Network selection window will appear:</p> <p> </p> <ul> <li>The available options are divided into different categories:</li> <li>KALP Chain: Currently, the Kalp DLT Devnet is available.</li> <li>ETH Chain: Options like Ethereum Holesky, Sepolia, and Mainnet are marked as \"coming soon.\"</li> <li>BSC Chain: Binance Mainnet and Binance Testnet are also marked as \"coming soon.\"</li> <li>Action: Select the Kalp DLT Devnet or any other available network by clicking on its name.</li> </ul> <p>Note</p> <p>As of now KS Query only supports the KALP DLT Network only.</p>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#step-3-confirm-your-selection","title":"Step 3: Confirm Your Selection","text":"<ol> <li>Upon selecting a network, a confirmation dialog will appear, asking: \"Are you sure you want to connect with [selected network]?\" </li> </ol> <p>2.Click Yes to confirm your choice.</p>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#step-4-proceed-with-api-requests","title":"Step 4: Proceed with API Requests","text":"<ul> <li>Once your blockchain and network are selected, you will be redirected to the Dashboard.</li> </ul> <ul> <li>The API Requests counter will now be active, showing the number of requests available in your current subscription plan.</li> </ul>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#benefits-of-selecting-a-blockchain-and-network","title":"Benefits of Selecting a Blockchain and Network","text":"<ul> <li>Customizability: Tailor your KS Query experience to specific blockchain networks.</li> <li>Efficiency: Focus on the relevant data and transactions for your project.</li> <li>Future Options: As new networks are added, KS Query will provide more flexibility for developers.</li> </ul>"},{"location":"Products/KS-Query/How-to-select-blockchain-and-network-on-KS-Query/#conclusion","title":"Conclusion","text":"<p>Selecting the right blockchain and network is a crucial step to leveraging the full power of KS Query. The platform ensures a smooth selection process with a user-friendly interface, helping you focus on data retrieval and application development. Start by exploring the Kalp DLT Devnet and keep an eye out for upcoming networks like Ethereum and Binance!</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket atcare.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/","title":"How to view your Dashboard & Subscription details","text":""},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#how-to-view-your-dashboard-subscription-details","title":"How to view your Dashboard &amp; Subscription Details","text":"<p>Tip</p> <p>To proceed with the flow, one must first select the Blockchain and network, then create or select an active API authentication key, and finally retrieve all APIs.</p> <p>Info</p> <p>Users can currently select only the KALP DLT chain and the Test Net network. Support for other options, such as Ethereum and Binance, will be introduced in upcoming releases.</p>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#introduction","title":"Introduction","text":"<p>The KS Query Dashboard is your centralized hub for managing API requests, monitoring usage, and exploring subscription details. It provides a comprehensive overview of your plan's performance and usage statistics, ensuring transparency and efficiency in accessing blockchain data. Whether you're a developer or a business professional, understanding your subscription and API metrics is crucial for effective resource management. In this guide, we'll walk you through the process of navigating the dashboard and accessing your subscription details, helping you make the most of the KS Query platform.</p>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#dashboard-overview-in-ks-query","title":"Dashboard Overview in KS Query","text":"<p>The KS Query dashboard is the central hub for monitoring and managing API usage and subscription details. Here's a breakdown of all the key elements available on the dashboard:</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#1-api-requests","title":"1. API Requests","text":"<ul> <li>Location: Top-left section of the dashboard.</li> <li>Details:<ul> <li>Displays the total number of API requests available under your current subscription plan.</li> <li>Shows the number of consumed API requests and the remaining API requests in the format:<ul> <li><code>Used/Total Requests</code> (e.g., 822/50000).</li> </ul> </li> <li>Helps you track your usage limits and plan accordingly.</li> </ul> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#2-api-hits-graph","title":"2. API Hits Graph","text":"<ul> <li>Location: Center section below API Requests.</li> <li>Details:<ul> <li>A graphical representation of API hits over a specified date range.</li> <li>Allows you to monitor daily usage trends with spikes and lulls in API activity.</li> <li>Custom Filters:<ul> <li>Data View: Toggle between daily, weekly, or monthly API usage trends using the dropdown menu labeled \"Showing data of.\"</li> <li>Date Range: Set a custom date range to view usage metrics over a specified period.</li> </ul> </li> </ul> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#3-subscription-plan","title":"3. Subscription Plan","text":"<ul> <li>Location: Top-right corner of the dashboard.</li> <li>Details:<ul> <li>Displays the current subscription plan (e.g., Enterprise Plan).</li> <li>Includes an Upgrade button to switch to a higher-tier plan for additional benefits.</li> </ul> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#4-api-hits-breakdown","title":"4. API Hits Breakdown","text":"<ul> <li>Purpose: Visualize the API usage over time with detailed insights into API hits.</li> <li>Use Cases:<ul> <li>Identify high-usage periods.</li> <li>Analyze patterns to optimize API request allocation.</li> </ul> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#how-to-view-your-subscription-details-in-ks-query","title":"How to View Your Subscription Details in KS Query","text":"<p>Managing your subscription is straightforward in KS Query. Here's a guide to view all your subscription details, including plan type, status, and renewal information.</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#step-1-navigate-to-the-subscription-page","title":"Step 1: Navigate to the Subscription Page","text":"<ol> <li>Log in to kalp studio platform and locate your KS Query dashboard.</li> <li>From the left-hand side menu, select Subscription.</li> </ol>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#step-2-view-active-subscription","title":"Step 2: View Active Subscription","text":"<p>Once on the subscription page:</p> <ul> <li>Your current plan type (e.g., Starter Plan) and its status (e.g., Active) will be displayed at the top.</li> <li>The cost of the plan (e.g., $10.00 Daily) and key dates such as:<ul> <li>Subscription Start Date: The date when your subscription started.</li> <li>Renewal Date: The next scheduled date for renewal.</li> </ul> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#step-3-check-purchase-history","title":"Step 3: Check Purchase History","text":"<p>Below the active subscription section, you can find the Purchase History, which includes:</p> <ul> <li>Order ID: A unique identifier for your purchase.</li> <li>Purchased Plan Name: The specific subscription plan.</li> <li>Amount Paid: The cost of the subscription.</li> <li>Purchase Date and Time: The exact timestamp of the purchase.</li> <li>Status: Confirmation of whether the transaction was successful.</li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#step-4-upgrade-your-plan","title":"Step 4: Upgrade Your Plan","text":"<p>If you wish to switch to a higher-tier plan:</p> <ul> <li>Click the Upgrade button next to your active plan.</li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-Dashboard-and-subscription-details/#conclusion","title":"Conclusion","text":"<p>The KS Query Dashboard and Subscription Details sections are designed to offer clarity and control over your API usage and subscription management. By leveraging these tools, you can monitor API performance, track usage limits, and stay updated on your subscription status. Whether you need to upgrade your plan, view purchase history, or optimize your API usage, the KS Query interface ensures a seamless and user-friendly experience. With these features, you can focus on your projects while efficiently managing your resources and costs.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/","title":"How to view all your API's","text":""},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#how-to-view-all-apis-in-ks-query","title":"How to View All APIs in KS Query","text":"<p>Tip</p> <p>To proceed with the flow, one must first select the Blockchain and network, then create or select an active API authentication key, and finally retrieve all APIs.</p> <p>Info</p> <p>Users can currently select only the KALP DLT chain and the Test Net network. Support for other options, such as Ethereum and Binance, will be introduced in upcoming releases.</p> <p>The KS Query platform allows users to easily access and explore various APIs. Here\u2019s a step-by-step guide to viewing all available APIs in KS Query:</p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#step-1-navigate-to-the-dashboard","title":"Step 1: Navigate to the Dashboard","text":"<ol> <li> <p>Log into Kalp Studio platform (https://accounts.kalp.studio/login).</p> </li> <li> <p>Log in to your account using your credentials. If you don\u2019t have an account, sign up to create one.</p> </li> <li> <p>Once logged in, you\u2019ll be redirected to the Dashboard, where you can explore various products and features.</p> </li> <li> <p>From the Dashboard, scroll down to the Our Products section.</p> </li> </ol> <p></p> <p>5.Find KS Query and click Explore under KS Query in the Our Products section to proceed.</p> <ul> <li>Navigate to the Dashboard section.</li> <li>The Dashboard provides a summary of your API usage and subscription details.</li> </ul> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#step-2-go-to-the-all-apis-section","title":"Step 2: Go to the \"All APIs\" Section","text":"<p>KS Query allows users to efficiently view and interact with all APIs for blockchain operations, including details about Smart Contracts, Blocks, Transactions, and the Network List.</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#1-navigate-to-the-all-apis-section","title":"1. Navigate to the \"All APIs\" Section","text":"<ul> <li>Open the KS Query dashboard and click on the All APIs option from the left sidebar.</li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#2-overview-of-total-api-hits","title":"2. Overview of Total API Hits","text":"<ul> <li>The total number of API hits is displayed prominently at the top, providing insights into the API usage statistics.</li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#3-browse-api-categories","title":"3. Browse API Categories","text":"<ul> <li>Below the API hits section, you will find tabs for different API categories. Click on the tabs to view APIs for:</li> <li> <p>Smart Contracts: APIs related to managing and querying smart contracts. </p> </li> <li> <p>Blocks: APIs to retrieve block-related data from the blockchain. </p> </li> <li> <p>Transactions: APIs for fetching transaction details and history. </p> </li> <li> <p>Network List: APIs that list supported blockchain networks and configurations. </p> </li> </ul>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#4-check-parameters-details-of-api","title":"4. Check Parameters Details of API","text":"<p>Click on the Check Params to view details of  Particular Smart contract, Blocks, Networks or Network List. </p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#5-api-route-details","title":"5. API Route Details","text":""},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#params","title":"Params","text":"<p>The <code>Params</code> tab provides header and query parameters required for API requests.</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#header-parameters","title":"Header Parameters","text":"Name Type Description <code>network</code> header Network name (required) <code>blockchain</code> header Blockchain name (required) <code>api-key</code> header API key for authentication (required)"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#search-parameters","title":"Search Parameters","text":"Name Type Description <code>smartContractName</code> query The name of the smart contract to filter by (optional) <code>from</code> query Start date for filtering (optional, ISO 8601 date) <code>to</code> query End date for filtering (optional, ISO 8601 date)"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#blockchain-network","title":"Blockchain &amp; Network","text":"<p>The <code>Blockchain &amp; Network</code> tab lists available blockchain networks supported by KS Query.</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#available-networks","title":"Available Networks","text":"Name Network Blockchain <code>KALP DLT</code> DEVNET KALP"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#api-auth-key","title":"API Auth Key","text":"<p>The <code>API Auth Key</code> tab displays the keys created for accessing APIs.</p> <p></p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#generated-keys","title":"Generated Keys","text":"Key Name API Auth Key <code>testapikey</code> <code>9e48fec58f60807...4d1</code> <p>Tip: You can copy the API key by clicking the copy icon beside the key.</p>"},{"location":"Products/KS-Query/How-to-view-your-all-APIs/#conclusion","title":"Conclusion","text":"<p>The Kalp studio Query feature provides a comprehensive and user-friendly interface for accessing blockchain data through APIs. With well-organized features like Routes Detail, users can easily configure requests using clearly defined parameters, explore supported blockchain networks, and securely manage API authentication keys. The intuitive design of the dashboard and its streamlined navigation ensure seamless user experience for developers, enabling quick integration and efficient data retrieval. KS Query empowers developers with the tools needed to build robust blockchain applications, making it an indispensable resource for blockchain-based projects.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-Navigate-to-the-List-of-Smart-Contract/","title":"How to navigate to the list of smart contract","text":""},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-Navigate-to-the-List-of-Smart-Contract/#how-to-navigate-to-the-list-of-smart-contract","title":"How to Navigate to the List of Smart Contract?","text":"<p>Navigating the Kalp Studio platform to access the smart contract list is a straightforward process. Follow these steps to seamlessly move through the dashboard and find the information you need.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-Navigate-to-the-List-of-Smart-Contract/#step-by-step-guide","title":"Step-by-Step Guide","text":"<p>Access the Dashboard:</p> <p>Upon logging into Kalp Studio, you will land on the Dashboard. The dashboard provides an overview of your activities and quick access to essential features.</p> <p></p> <p>Locate the Sidebar Menu: On the left-hand side, you will find a vertical sidebar menu. This menu contains various options including:</p> <ul> <li> <p>Dashboard</p> </li> <li> <p>Credits</p> </li> <li> <p>Docs</p> </li> <li> <p>Wallet</p> </li> <li> <p>Faucet</p> </li> <li> <p>Help and Support</p> </li> </ul> <p>Select the 'Smart Contract' Option:</p> <p>Click on the Smart Contract tab in the sidebar. This will redirect you to the section dedicated to managing and deploying smart contracts.</p> <p></p> <p>Navigate to API Gateway:</p> <p>Within the Smart Contract section, look for the API Gateway tab. Clicking on this will bring you to the page where you can manage API endpoints related to your smart contracts.</p> <p></p> <p>View Smart Contract List:</p> <p>The API Gateway page will display a list of smart contracts you have created. This list includes details such as:</p> <ul> <li> <p>ID</p> </li> <li> <p>Name</p> </li> <li> <p>Category</p> </li> <li> <p>Status</p> </li> <li> <p>Network</p> </li> <li> <p>Blockchain</p> </li> <li> <p>Creation Date</p> </li> <li> <p>Actions available (e.g., Generate Endpoint, Re-Generate Endpoint)</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-Navigate-to-the-List-of-Smart-Contract/#key-features-on-the-smart-contract-list-page","title":"Key Features on the Smart Contract List Page","text":"<ul> <li>Search and Filter:</li> </ul> <p>Use the search bar and filters to quickly find specific smart contracts.</p> <ul> <li>Actions:</li> </ul> <p>Perform actions such as generating or re-generating endpoints for your smart contracts.</p> <ul> <li>Status Monitoring:</li> </ul> <p>Easily monitor the status of your smart contracts to ensure they are active and functioning correctly.</p> <ul> <li>Pagination:</li> </ul> <p>If you have numerous smart contracts, use the pagination controls at the bottom to navigate through the pages.</p> <p>By following these steps, you can efficiently navigate to the smart contract list within Kalp Studio, manage your smart contracts, and utilize the platform's full potential.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/","title":"How to generate API endpoints","text":""},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#how-to-generate-api-endpoints","title":"How to generate API endpoints?","text":"<p>API endpoints are essential for integrating and automating various processes in blockchain development. Kalp Studio provides a robust platform that allows developers to efficiently create, manage, and generate API endpoints for their smart contracts.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#login-to-kalp-studio","title":"Login to Kalp Studio","text":"<p>Navigate to the Kalp Studio login page and enter your credentials to access your dashboard. Click on Build Smart Contract.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#access-the-api-gateway-section","title":"Access the API Gateway Section","text":"<p>On the left-hand menu, select \"API Gateway.\"</p> <p></p> <p></p> <p>If you haven't subscribed to any API Gateway, you'll see a message prompting you to subscribe.</p> <p>Note</p> <p>To create and manage API endpoints, you need to subscribe to one of the plans offered by Kalp Studio. Ensure you upgrade your plan if you're currently on the free tier to access more features and higher limits.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#create-or-select-a-smart-contract","title":"Create or Select a Smart Contract","text":"<p>Once subscribed, you can manage and generate API endpoints for your smart contracts. Select the desired smart contract from the list or create a new one.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#generate-endpoints","title":"Generate Endpoints","text":"<p>For the selected smart contract, click \"Generate Endpoints.\" This action will create the necessary API endpoints.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#endpoint-generated","title":"Endpoint Generated","text":"<p>Once you select generate endpoint, a pop-up will appear, notifying that the endpoint has been generated.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#view-and-manage-endpoints","title":"View and Manage Endpoints","text":"<p>After generating the endpoints, you can view and manage them. The status of each endpoint (success or failure) will be displayed, along with details like the network and blockchain used.</p>"},{"location":"Products/Kalp-Studio-Console/API-Gateway/How-to-generate-API-endpoints/#check-and-use-api-parameters","title":"Check and Use API Parameters","text":"<p>Click on \"Check Params\" to view the details and parameters for each API endpoint. This will help you understand how to integrate and use these endpoints in your applications.</p> <p>By following these steps, you can efficiently generate and manage API endpoints for your smart contracts on Kalp Studio, enhancing your blockchain development process.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/","title":"How to generate API Key","text":""},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#how-to-generate-api-key","title":"How to generate API Key?","text":"<p>Generating an API key is a crucial step for integrating and utilizing the features provided by Kalp Studio. API keys are used to authenticate requests associated with your project, ensuring secure and streamlined access to various services.</p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#access-the-api-key-generation","title":"Access the API Key Generation","text":"<ol> <li> <p>Log in to your Kalp Studio account.</p> </li> <li> <p>Navigate to the API Key Generation:</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#create-a-new-api-key","title":"Create a New API Key","text":"<ol> <li> <p>Click on the \"Create API Auth Key\" button:</p> </li> <li> <p>If you have not created any API keys yet, the screen will be blank.</p> </li> <li> <p>Click on the black button that says + Create API Auth Key for the first time.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#fill-in-the-api-key-details","title":"Fill in the API Key Details","text":"<ol> <li> <p>Enter the Key Name and Description:</p> </li> <li> <p>A pop-up window will appear, prompting you to enter details for the new API key.</p> </li> <li> <p>Provide a Key Name for easy identification. For example, you can name it \"Swaggy M.\"</p> </li> <li> <p>Optionally, you can add a Key Description to describe the purpose or scope of the key.</p> </li> </ol> <p></p> <p>Create the API Key:</p> <p></p> <p>After filling in the details, click on the Create Now button to generate the key.</p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#4-manage-your-api-keys","title":"4. Manage Your API Keys","text":"<ul> <li> <p>Once created, your API keys will be listed in the API Key Generation section.</p> </li> <li> <p>Here, you can see details such as the Key Name, Last Used date, API Auth Key, Date Created, and Status.</p> </li> <li> <p>You can activate or deactivate keys using the toggle switch under the Status column.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#5-how-it-works","title":"5. How it works","text":"<p>The wallet section of the KALP Studio console has been updated to include a \"How it works?\" link. This addition provides users with access to detailed documentation on API key generation, helping them understand and utilize the feature effectively. </p> <p></p>"},{"location":"Products/Kalp-Studio-Console/API-Key-Generation/How-to-generate-API-Key/#conclusion","title":"Conclusion","text":"<p>Generating an API key in Kalp Studio enhances your ability to integrate and utilize various services securely. By following the steps outlined in this guide, you can easily create and manage your API keys, ensuring that your project runs smoothly with authenticated access to the necessary APIs.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/","title":"How does Billing work on the Kalp Studio Platform","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#how-does-billing-work-on-the-kalp-studio-platform","title":"How does Billing work on the Kalp Studio Platform?","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#introduction","title":"Introduction","text":"<p>Kalp Studio offers a flexible and transparent billing system designed to cater to a wide range of user needs. The platform employs a pay-as-you-go pricing model, ensuring that users only pay for the services they consume without the burden of long-term contracts or complex licensing agreements. This article will delve into the specifics of how billing works on Kalp Studio, highlighting key aspects such as service selection, subscription plans, and the pay-as-you-go model.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#how-kalp-studio-pricing-works","title":"How Kalp Studio Pricing Works","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#pay-as-you-go-model","title":"Pay-as-You-Go Model","text":"<p>Kalp Studio\u2019s billing system revolves around a pay-as-you-go model, which is highly beneficial for users with varying and dynamic needs. This model allows users to:</p> <ul> <li> <p>Pay Only for What They Use: Users are billed only for the specific services they utilize, eliminating unnecessary costs.</p> </li> <li> <p>No Additional Costs for Termination: There are no hidden fees or additional costs once the user stops using the services.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#key-components-of-the-billing-system","title":"Key Components of the Billing System","text":"<p>The billing system on Kalp Studio can be broken down into three main components:</p> <ol> <li> <p>Choose Your Service</p> <ul> <li> <p>Users can explore a wide array of products and services available on Kalp Studio.</p> </li> <li> <p>The platform provides tools to search and add services that are tailored to the user\u2019s specific requirements.</p> </li> </ul> </li> <li> <p>Subscribe to a Plan</p> <ul> <li> <p>Users have the option to subscribe to a plan that aligns with their usage patterns and budget.</p> </li> <li> <p>Kalp Studio offers various plans to provide flexibility and value, accommodating both small-scale and large-scale needs.</p> </li> </ul> </li> <li> <p>Pay-as-You-Go</p> <ul> <li> <p>This feature enables users to adapt effortlessly to changing business needs without the risk of overcommitting their budget.</p> </li> <li> <p>It provides the flexibility to scale services up or down based on current demands, ensuring cost-efficiency.</p> </li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#detailed-breakdown-of-the-billing-process","title":"Detailed Breakdown of the Billing Process","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#service-selection","title":"Service Selection","text":"<p>Users begin by selecting the services they need from the Kalp Studio Console. The platform's intuitive interface allows for easy navigation through a comprehensive list of available services. Users can search for specific services and add them to their portfolio based on their unique requirements.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#plan-subscription","title":"Plan Subscription","text":"<p>Once the services are selected, users can choose a subscription plan that best fits their needs. Kalp Studio offers a range of plans, each designed to offer maximum value and flexibility. These plans are structured to cater to different usage levels, from individual developers to large enterprises.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#pay-as-you-go-flexibility","title":"Pay-as-You-Go Flexibility","text":"<p>The pay-as-you-go model is the cornerstone of Kalp Studio's billing system. This model ensures that users are only charged for what they use, with no additional costs for stopping services. This flexibility is particularly advantageous for businesses with fluctuating needs, allowing them to manage their expenses efficiently.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#transparent-billing","title":"Transparent Billing","text":"<p>Kalp Studio ensures complete transparency in its billing process. Users can view detailed billing statements that outline their usage and charges. This transparency helps users understand their spending patterns and manage their budgets effectively.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#benefits-of-kalp-studios-billing-system","title":"Benefits of Kalp Studio's Billing System","text":"<ul> <li> <p>Cost Efficiency: By only paying for what they use, users can optimize their spending and avoid unnecessary costs.</p> </li> <li> <p>Flexibility: The ability to scale services up or down based on current needs allows users to adapt quickly to changing business environments.</p> </li> <li> <p>Transparency: Detailed billing statements provide users with clear insights into their usage and expenses, promoting better financial management.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-Billing-work-on-the-Kalp-Studio-Platform/#conclusion","title":"Conclusion","text":"<p>Kalp Studio\u2019s billing system is designed to offer maximum flexibility, transparency, and cost efficiency. Whether you are a small developer or a large enterprise, the pay-as-you-go model ensures that you only pay for the services you need and use. By providing a wide range of service options and flexible subscription plans, Kalp Studio empowers users to manage their expenses effectively and adapt to changing business needs seamlessly.</p> <p>With Kalp Studio, you can focus on leveraging the platform\u2019s robust services to drive your business forward, confident in the knowledge that your billing is both fair and transparent.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/","title":"How does a new user access billing","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#how-does-a-new-user-access-billing","title":"How does a new user access billing","text":"<p>Hi User,</p> <p>When a new user logs into the Kalp Studio platform, they are greeted with a user-friendly billing screen designed to provide clarity and ease of use. Below is a detailed description of how this screen appears and functions for a new user:</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#layout-and-navigation","title":"Layout and Navigation","text":"<p>Upon accessing the billing screen, users will see a clean, well-organized interface. The screen is divided into several sections, each serving a specific purpose. The main sections include:</p> <ol> <li> <p>Sidebar Navigation:</p> </li> <li> <p>Dashboard: Provides an overview of the user's account.</p> </li> <li> <p>Billing: The current section, focusing on pricing and subscription details.</p> </li> <li> <p>Credits: Information about available credits.</p> </li> <li> <p>Docs: Access to documentation for various services.</p> </li> <li> <p>Wallet: Manage wallet and payment methods.</p> </li> <li> <p>Help and Support: Assistance for any queries or issues.</p> </li> <li> <p>Main Content Area:</p> </li> <li> <p>Header: Includes the user profile icon, notifications, help, and wallet connection options.</p> </li> <li> <p>Billing Information: An explanation of how the Kalp Studio pricing model works.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#pricing-model-overview","title":"Pricing Model Overview","text":"<p>Kalp Studio employs a pay-as-you-go pricing model, making it convenient for users to pay only for the services they use. This approach eliminates the need for long-term contracts or complex licensing agreements. The main highlights are:</p> <ul> <li> <p>Choose Your Service: Users can explore a wide range of products and services. They can search for and add the specific services they need.</p> </li> <li> <p>Subscribe to a Plan: Users can choose a subscription plan that suits their usage and budget. The platform offers various plans to provide flexibility and value.</p> </li> <li> <p>Pay-as-you-go: This model allows users to adapt effortlessly to changing business needs without overcommitting their budget.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#product-listings","title":"Product Listings","text":"<p>The billing screen features a product section where users can browse and subscribe to different services. Each product listing includes:</p> <ul> <li> <p>Product Name: Clearly displayed with an icon for quick identification.</p> </li> <li> <p>Description: A brief summary of what the product offers.</p> </li> <li> <p>Free Trial: Some products may offer a free trial period.</p> </li> <li> <p>Subscription Button: Users can subscribe to the service directly from this screen.</p> </li> <li> <p>Starting Plan Cost: The initial cost in credits for subscribing to the product.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#sorting-and-searching","title":"Sorting and Searching","text":"<p>Users can search for specific products using the search bar and sort the product listings based on various criteria such as newly added products.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#subscription-plans-for-new-users","title":"Subscription Plans for New Users","text":"<p>A new user on Kalp Studio starts with a Personal Plan. The Personal Plan is designed for individual users or small-scale projects. Users can easily upgrade their plans to suit their growing needs. The available plans include:</p> <ul> <li> <p>Professional Plan: For professional users requiring more resources and features.</p> </li> <li> <p>Business Plan: Ideal for small to medium-sized businesses.</p> </li> <li> <p>Enterprise Plan: Tailored for large enterprises with extensive needs.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#upgrading-plans","title":"Upgrading Plans","text":"<p>Users can upgrade their plans directly from the billing screen. The process is straightforward and involves selecting the desired plan and following the prompts to complete the upgrade. This flexibility ensures that users can scale their services as their requirements grow.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-new-user-access-billing/#conclusion","title":"Conclusion","text":"<p>The billing screen in Kalp Studio is designed with user convenience in mind, offering a clear and efficient way to manage subscriptions and services. New users will find it easy to navigate, understand the pricing model, and make informed decisions about their service needs. The ability to start with a Personal Plan and upgrade as needed provides flexibility and scalability, catering to users at different stages of their journey.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/","title":"How does a subscribed user access billing","text":""},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#how-does-a-subscribed-user-access-billing","title":"How does a subscribed user access billing?","text":"<p>Kalp Studio offers a comprehensive billing screen that provides subscribed users with a clear and detailed overview of their financial commitments and subscription details. This guide will walk you through the features and layout of the billing screen for users with active subscriptions.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#layout-and-navigation","title":"Layout and Navigation","text":"<p>Upon accessing the billing screen, users are presented with a well-organized interface. The screen is divided into several sections for ease of navigation and use:</p> <ol> <li> <p>Sidebar Navigation:</p> </li> <li> <p>Dashboard: Overview of the user's account.</p> </li> <li> <p>Billing: Current section focused on billing details.</p> </li> <li> <p>Credits: Information about available credits.</p> </li> <li> <p>Docs: Access to documentation for various services.</p> </li> <li> <p>Kalp Studio Wallet: Manage wallet and payment methods.</p> </li> <li> <p>Faucet: Provides free testnet tokens for developers to test blockchain operations. The Kalp Studio faucet offers tokens for web3 developers to deploy and test smart contracts on the Kalp DLT Chain.</p> </li> <li> <p>Help and Support: Get assistance for any queries or issues.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#your-subscription","title":"Your Subscription","text":"<p>Below the Billing Summary, the \"Your Subscription\" section provides detailed information about the user's current subscriptions:</p> <ul> <li> <p>Service Name: The name of the subscribed service.</p> </li> <li> <p>Status: Indicates whether the service is active or inactive.</p> </li> <li> <p>Plan Details:</p> </li> </ul> <p>\u2192 Developer Plan</p> <p>\u2192 Business Plan</p> <p>\u2192 Enterprise Plan</p> <ul> <li>Action </li> </ul> <p>\u2192 Renew: Option to renew the subscription.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#top-up-the-credits","title":"Top-Up the credits","text":"<p>The billing section of the KALP Studio console has been enhanced with a \"Top Up\" button, allowing users to conveniently add credits to their account balance. Additionally, the interface provides clear plan options, including Starter, Developer, and Enterprise, with respective pricing and features outlined for easy subscription management.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#product-listings","title":"Product Listings","text":"<p>The billing screen also features a product section where users can browse and subscribe to additional services. Each product listing includes:</p> <ul> <li> <p>Product Name: Displayed with an icon for quick identification.</p> </li> <li> <p>Description: A summary of the product.</p> </li> </ul> <p>Note</p> <p>User needs to renew the product and plan to have an uninterrupted blockchain    experience on Kalp Studio.</p>"},{"location":"Products/Kalp-Studio-Console/Billing/How-does-a-subscribed-user-access-billing/#conclusion","title":"Conclusion","text":"<p>The billing screen in Kalp Studio is designed to provide subscribed users with a clear, detailed view of their subscriptions and billing status. It offers a comprehensive summary of billing details, easy access to subscription management, and options for upgrading plans. This user-centric design ensures that managing subscriptions and billing is efficient, allowing users to focus on leveraging the platform's services for their needs.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/","title":"How to Add Credit","text":""},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#how-to-add-credit","title":"How to Add Credit?","text":"<p>Kalp Studio provides a seamless platform for managing your credits and transactions efficiently. Adding credits to your Kalp Studio wallet is crucial for accessing various services and features offered by the platform.</p> <p>As a new user, you will receive a complimentary $50 onboarding credit. This credit allows you to explore and utilize the full capabilities of the platform right from the start.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#step-1-access-the-credits-section","title":"Step 1: Access the Credits Section","text":"<ol> <li> <p>Login to KALP Studio: Enter your credentials and log into your account.</p> </li> <li> <p>Navigate to the Credits Page: Click the \"Credits\" option on the left sidebar. This will take you to the Credits management section.  </p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#step-2-initiate-adding-credits","title":"Step 2: Initiate Adding Credits","text":"<ol> <li>Click on \"Add Credits\": On the Credits page, you will see a button labeled \"Add Credits\". Click on it to proceed.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#step-3-enter-credit-amount","title":"Step 3: Enter Credit Amount","text":"<ol> <li> <p>Enter the Desired Amount: A dialog box will appear asking you to enter the amount you wish to add to your wallet. Enter the amount in the specified field.</p> </li> <li> <p>Confirm the Amount: Double-check the amount to ensure it is correct.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#step-4-confirm-the-transaction","title":"Step 4: Confirm the Transaction","text":"<p>A pop-up window will open where users can see their entered amount in USD converted to INR. Enter Phone Number and proceed. You can proceed with the payment mode selection and then transfer funds.</p>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#step-6-transaction-successful","title":"Step 6: Transaction Successful","text":"<ol> <li> <p>View Transaction Confirmation: Once the transaction is complete, you will see a confirmation message indicating that credits have been added successfully. This screen will display the transaction ID and the amount added.</p> </li> <li> <p>Check Updated Balance: Return to the Credits page to verify that your total credit balance has been updated with the newly added amount.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Credits/How-to-Add-Credit/#top-up-the-credits","title":"Top-Up the credits","text":"<p>The billing section of the KALP Studio console has been enhanced with a \"Top Up\" button, allowing users to conveniently add credits to their account balance. Additionally, the interface provides clear plan options, including Starter, Developer, and Enterprise, with respective pricing and features outlined for easy subscription management.</p> <p>By following these steps, you can easily add credits to your KALP Studio wallet, enabling you to utilize various services and features on the platform.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Credits/Navigate-to-the-Credit-Section/","title":"Navigate to the credit section","text":""},{"location":"Products/Kalp-Studio-Console/Credits/Navigate-to-the-Credit-Section/#navigate-to-the-credit-section","title":"Navigate to the Credit Section","text":"<p>Kalp Studio provides a user-friendly interface for managing decentralized applications and blockchain-based projects. Among its many features, the \"Credits\" section is crucial for handling financial transactions within the platform.</p>"},{"location":"Products/Kalp-Studio-Console/Credits/Navigate-to-the-Credit-Section/#navigating-to-the-credits-section","title":"Navigating to the Credits Section","text":"<ol> <li> <p>Login to Kalp Studio: Begin by logging into your Kalp Studio account.</p> </li> <li> <p>Access the Dashboard: Once logged in, you will be directed to the main dashboard. The dashboard provides an overview of various functionalities, including connecting a wallet and building smart contracts.</p> </li> </ol> <p></p> <ol> <li>Locate the Sidebar Menu: On the left side of the screen, you will find a sidebar menu. This menu contains several options: Dashboard, Credits, Docs, Wallet, Faucet, and Help and Support.</li> </ol> <p></p> <p>Select \"Credits\": Click the \"Credits\" option in the sidebar. This action will redirect you to the Credits section, where you can manage your financial transactions and view your credit balance.</p>"},{"location":"Products/Kalp-Studio-Console/Credits/Navigate-to-the-Credit-Section/#components-of-the-credit-screen","title":"Components of the Credit Screen","text":"<p>The credit screen is designed to provide a comprehensive view of your credits and transactions. Here are the main components:</p> <ol> <li>Total Credit Available: At the top of the screen, you will see the \"Total Credit Available\" section. This displays the total amount of credit you currently have in your account.</li> </ol> <p></p> <ol> <li>Add Credits: Below the total credit available, there is an \"Add Credits\" button. Clicking this button allows you to add more credits to your account, ensuring you have sufficient funds for your transactions.</li> </ol> <p></p> <ol> <li>Credit Transactions Summary:</li> </ol> <p>Credited: This shows the total amount credited to your account.</p> <p>Debited: This section displays the total amount debited from your account. If no debits have occurred, it may show as N/A.</p> <p></p> <ol> <li> <p>All Transactions: The lower part of the credit screen lists all your transactions. Each transaction entry includes:</p> </li> <li> <p>Transaction ID: A unique identifier for each transaction.</p> </li> <li> <p>Date and Time: The exact date and time when the transaction occurred.</p> </li> <li> <p>Amount: The amount credited or debited.</p> </li> <li> <p>Status: The current status of the transaction, which can be \"Pending\" or \"Success.\"</p> </li> </ol> <p></p> <ol> <li> <p>Transaction Filters: You can filter your transactions based on type (e.g., all transactions, credited, debited) and date range. This helps in quickly locating specific transactions.</p> </li> <li> <p>Reset Button: The reset button allows you to clear any applied filters and view the complete list of transactions.</p> </li> <li> <p>Connect Wallet Button: At the top right corner, there is a \"+ Connect Wallet\" button. This feature enables you to link your wallet to Kalp Studio for seamless transactions.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Credits/Navigate-to-the-Credit-Section/#conclusion","title":"Conclusion","text":"<p>Navigating to the Credits section in Kalp Studio is straightforward, thanks to the intuitive design of the platform. Understanding the components of the credit screen is essential for effectively managing your financial transactions. By following the steps outlined above, you can easily access and utilize the Credits section, ensuring a smooth and efficient experience with Kalp Studio.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/","title":"How to Navigate Kalp Studio Dashboard as an Active User","text":""},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#how-to-navigate-kalp-studio-dashboard-as-an-active-user","title":"How to Navigate Kalp Studio Dashboard as an Active User","text":"<p>Kalp Studio is a versatile platform tailored for blockchain and decentralized application (DApp) development. As an active user, understanding how to efficiently navigate the platform is crucial to maximize productivity and leverage its full potential.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#dashboard-overview","title":"Dashboard Overview","text":"<p>Upon logging into Kalp Studio, you are presented with the Dashboard, which serves as your central hub. The key components of the Dashboard include:</p> <p></p> <ul> <li>Connect Kalp Studio Wallet: This \"Connect now\" button on the dashboard to link or connect your Kalp wallet or other wallets mentioned above. This connection is crucial for accessing decentralized applications and handling transactions securely.</li> </ul> <p></p> <ul> <li>Build Smart Contracts: This feature enables you to start building smart contracts using Kalp\u2019s instant deployer. Clicking \u201cGet started\u201d will direct you to the subscription page.</li> </ul> <p></p> <ul> <li>Kalp Community: This section highlights the active Kalp community, showcasing the number of members. Engaging with this community can provide valuable insights and support.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#navigation-menu","title":"Navigation Menu","text":"<p>On the left side of the screen, you will find the primary navigation menu, which includes the following options:</p> <p></p> <ol> <li> <p>Dashboard: This option returns you to the main dashboard view.</p> </li> <li> <p>Billing: Here you can manage your billing information and payment methods.</p> </li> <li> <p>Credits: This section allows you to view and manage your credits within the Kalp ecosystem.</p> </li> <li> <p>Docs: Access documentation and resources to assist you with development.</p> </li> <li> <p>Wallet: Manage your connected wallets and view transaction histories.</p> </li> <li> <p>Faucet: Provides free testnet tokens for developers to test blockchain operations. The Kalp Studio faucet offers tokens for web3 developers to deploy and test smart contracts on the Kalp DLT Chain.</p> </li> <li> <p>Help and Support: Obtain assistance and support for any issues or queries.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#our-products","title":"Our Products","text":"<p>The Dashboard also highlights various products offered by Kalp Studio:</p> <ul> <li> <p>Kalp Instant Deployer: Kalp Instant Deployer allows users to build and deploy custom smart contracts effortlessly. It offers a variety of pre-audited templates to choose from and you can also upload your smart contract, ensuring a secure and efficient deployment process. This service is ideal for developers looking to streamline smart contract creation with minimal effort. With a free trial available, it\u2019s an excellent tool for users to explore blockchain development.</p> </li> <li> <p>API Gateway: The API Gateway provides a unified interface, enabling easy integration with smart contracts via both REST and GraphQL APIs. This product is designed to simplify the interaction between your applications and blockchain, making it easier for developers to manage transactions and queries. With a starting plan of $7.00 credits, it caters to businesses and developers aiming to connect seamlessly with decentralized technologies.</p> </li> <li> <p>TokeniFy \u2013 Asset Tokenization Platform: TokeniFy offers a powerful platform to tokenize real-world assets, enabling businesses to create branded tokenization platforms. This product allows users to convert physical assets into digital tokens, facilitating ownership and trading within a secure blockchain environment. It's a solution tailored for enterprises looking to harness the power of tokenization for asset management. Users can request a demo to explore its potential.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#subscription-expiration","title":"Subscription Expiration","text":"<p>The KALP Studio console dashboard has been enhanced to notify users about subscription expirations for individual products. A clear message, \"Subscription expired. Renew to continue,\" is displayed along with a \"Renew\" button, enabling users to promptly renew their subscriptions and maintain uninterrupted access to the services.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#accessing-kalp-apps","title":"Accessing Kalp Apps","text":"<p>In the upper-right corner, there is an \"Apps\" icon that, when clicked, displays a list of available Kalp apps.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#wallet-management","title":"Wallet Management","text":"<p>For an active user, managing your wallet is essential. Your connected wallet's address and balance are prominently displayed at the top-right corner of the Dashboard. Clicking on the wallet icon or navigating to the \"Wallet\" section allows you to manage your connected wallets, view transaction histories, and ensure the security of your funds.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#community-and-support","title":"Community and Support","text":""},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#introduction","title":"Introduction","text":"<p>Kalp Studio provides an integrated chat support feature to assist users with any queries or technical issues. Whether you need help deploying smart contracts, troubleshooting errors, or exploring features, the support team is just a few clicks away. This guide will walk you through the steps to access and use the chat support feature effectively.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-1-access-the-dashboard","title":"Step 1: Access the Dashboard","text":"<ol> <li>Log in to your Kalp Studio account.</li> <li>Once logged in, you will see the main dashboard. This is your starting point for accessing all features, including support.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-2-locate-the-chat-support-icon","title":"Step 2: Locate the Chat Support Icon","text":"<ol> <li>In the bottom-right corner of the dashboard, you\u2019ll see a chat icon (a speech bubble). </li> <li>Click on the icon to open the support chat window.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-3-open-the-chat-window","title":"Step 3: Open the Chat Window","text":"<ol> <li>When you click the chat icon, a small window will pop up on the right side of the screen. This window is titled \"Kalp Studio\".</li> </ol> <ol> <li>If support is offline, the window will display a message like: \"We are not available right now. Please leave us a voice mail or a message. We'll get back as soon as possible.\"</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-4-leave-a-message","title":"Step 4: Leave a Message","text":"<ol> <li>Click the \"Leave a message\" option in the chat window.</li> </ol> <ol> <li>Enter your query or issue. For example, if you need help deploying a smart contract, you could type:</li> <li>\"I need help with smart contract deployment.\"</li> </ol> <ol> <li>Press Enter or click the send icon to submit your message.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-5-enter-your-details","title":"Step 5: Enter Your Details","text":"<ol> <li>The chat may prompt you with additional questions like:</li> <li>\"How would you like to be addressed?\"</li> <li>Provide your preferred name or any necessary details as requested.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-6-access-previous-conversations","title":"Step 6: Access Previous Conversations","text":"<ol> <li> <p>If you need to revisit a previous chat, click the \"Conversation\" tab at the bottom of the chat window. </p> </li> <li> <p>This section stores your chat history, allowing you to refer to past support interactions.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#step-7-close-or-start-a-new-conversation","title":"Step 7: Close or Start a New Conversation","text":"<ol> <li>To end the current chat, simply close the chat window by clicking the \"X\" button at the bottom-right corner of the window.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#tips-for-effective-support","title":"Tips for Effective Support","text":"<ul> <li> <p>Be clear and specific in describing your issue.</p> </li> <li> <p>Include details like the feature you're using, error messages, or steps you've already tried.</p> </li> <li> <p>If possible, provide screenshots to help the support team understand your problem better.</p> </li> </ul> <p>The chat support feature in Kalp Studio is designed to provide quick assistance for all your needs. By following the steps outlined in this guide, you can ensure smooth communication with the support team and get your queries resolved promptly.</p> <p>Engage with the Kalp community through various social media platforms listed on the dashboard. For any assistance, the \"Help and Support\" section provides access to FAQs, support tickets, and other resources to resolve your queries efficiently.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Dashboard-as-an-Active-User/#conclusion","title":"Conclusion","text":"<p>Kalp Studio offers a user-friendly interface with powerful features for blockchain developers and enthusiasts. By familiarizing yourself with the Dashboard, navigation menu, and available products, you can leverage the platform to build and manage your decentralized applications effectively, ensuring a seamless and productive experience.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/","title":"How to Navigate Kalp Studio Platform as a New User","text":""},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#how-to-navigate-kalp-studio-platform-as-a-new-user","title":"How to Navigate Kalp Studio Platform as a New User","text":"<p>Kalp Studio is a comprehensive platform designed to facilitate blockchain and decentralized application (DApp) development. As a new user, this guide will help you navigate the platform efficiently.</p> <p>As the new user logs in to the dashboard, a total credit of $50 will be credited to the account.</p> <p></p> <p>Note</p> <p>Credits are one-time rewards. Users can use those credits to subscribe to the Kalp Studio services. Credits will be reflected in the profile segment. </p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#dashboard-overview","title":"Dashboard Overview","text":"<p>Upon logging into Kalp Studio, you are greeted by the Dashboard, which serves as your control center. The key components of the Dashboard include:</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#how-to-navigate-kalp-studio-platform-as-a-new-user_1","title":"How to Navigate Kalp Studio Platform as a New User","text":"<p>Kalp Studio is a comprehensive platform designed to facilitate blockchain and decentralized application (DApp) development. As a new user, this guide will help you navigate the platform efficiently.</p> <p>As the new user logs in to the dashboard, a total credit of $50 will be credited to the account.</p> <p></p> <p>Note</p> <p>Credits are one-time rewards. Users can use those credits to subscribe to the Kalp Studio services. Credits will be reflected in the profile segment.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#dashboard-overview_1","title":"Dashboard Overview","text":"<p> Upon logging into Kalp Studio, you are greeted by the Dashboard, which serves as your control center. The key components of the Dashboard include:</p> <ul> <li>Connect Wallet: A prominent call-to-action button on the dashboard encourages you to connect your wallet to access decentralized applications and services.</li> </ul> <p></p> <ul> <li>Build Smart Contracts: This feature allows you to get started with building smart contracts using Kalp\u2019s instant deployer.</li> </ul> <p></p> <ul> <li>Kalp Community: This section provides information about the vibrant Kalp community, showcasing the number of active members.</li> </ul> <p></p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#navigation-menu","title":"Navigation Menu","text":"<p>On the left side of the screen, you will find the primary navigation menu, which includes the following options:</p> <p></p> <ol> <li> <p>Dashboard: This option returns you to the main dashboard view.</p> </li> <li> <p>Billing: Here you can manage your billing information and payment methods.</p> </li> <li> <p>Credits: This section allows you to view and manage your credits within the Kalp ecosystem.</p> </li> <li> <p>Docs: Access documentation and resources to assist you with development.</p> </li> <li> <p>Wallet: Manage your connected wallets and view transaction histories.</p> </li> <li> <p>Faucet: Provides free testnet tokens for developers to test blockchain operations. The Kalp Studio faucet offers tokens for web3 developers to deploy and test smart contracts on the Kalp DLT Chain.</p> </li> <li> <p>Help and Support: Obtain assistance and support for any issues or queries.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#our-products","title":"Our Products","text":"<p>The Dashboard also highlights various products offered by Kalp Studio:</p> <ul> <li> <p>Kalp Instant Deployer: Kalp Instant Deployer allows users to build and deploy custom smart contracts effortlessly. It offers a variety of pre-audited templates to choose from and you can also upload your smart contract, ensuring a secure and efficient deployment process. This service is ideal for developers looking to streamline smart contract creation with minimal effort. With a free trial available, it\u2019s an excellent tool for users to explore blockchain development.</p> </li> <li> <p>API Gateway: The API Gateway provides a unified interface, enabling easy integration with smart contracts via both REST and GraphQL APIs. This product is designed to simplify the interaction between your applications and blockchain, making it easier for developers to manage transactions and queries. With a starting plan of $7.00 credits, it caters to businesses and developers aiming to connect seamlessly with decentralized technologies.</p> </li> <li> <p>TokeniFy \u2013 Asset Tokenization Platform: TokeniFy offers a powerful platform to tokenize real-world assets, enabling businesses to create branded tokenization platforms. This product allows users to convert physical assets into digital tokens, facilitating ownership and trading within a secure blockchain environment. It's a solution tailored for enterprises looking to harness the power of tokenization for asset management. Users can request a demo to explore its potential.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#accessing-kalp-apps","title":"Accessing Kalp Apps","text":"<p>In the upper-right corner, there is an \"Apps\" icon that, when clicked, displays a list of available Kalp apps.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#connecting-your-wallet","title":"Connecting Your Wallet","text":"<p>To fully utilize Kalp Studio\u2019s features, you need to connect your wallet. Click the \"Connect now\" button on the dashboard to link or connect your Kalp wallet or other wallets mentioned above. This connection is crucial for accessing decentralized applications and handling transactions securely.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#how-to-use-the-chat-support-option-in-kalp-studio","title":"How to Use the Chat Support Option in Kalp Studio","text":""},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#introduction","title":"Introduction","text":"<p>Kalp Studio provides an integrated chat support feature to assist users with any queries or technical issues. Whether you need help deploying smart contracts, troubleshooting errors, or exploring features, the support team is just a few clicks away. This guide will walk you through the steps to access and use the chat support feature effectively.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-1-access-the-dashboard","title":"Step 1: Access the Dashboard","text":"<ol> <li>Log in to your Kalp Studio account.</li> <li>Once logged in, you will see the main dashboard. This is your starting point for accessing all features, including support.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-2-locate-the-chat-support-icon","title":"Step 2: Locate the Chat Support Icon","text":"<ol> <li>In the bottom-right corner of the dashboard, you\u2019ll see a chat icon (a speech bubble). </li> <li>Click on the icon to open the support chat window.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-3-open-the-chat-window","title":"Step 3: Open the Chat Window","text":"<ol> <li>When you click the chat icon, a small window will pop up on the right side of the screen. This window is titled \"Kalp Studio\".</li> </ol> <ol> <li>If support is offline, the window will display a message like: \"We are not available right now. Please leave us a voice mail or a message. We'll get back as soon as possible.\"</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-4-leave-a-message","title":"Step 4: Leave a Message","text":"<ol> <li>Click the \"Leave a message\" option in the chat window.</li> </ol> <ol> <li>Enter your query or issue. For example, if you need help deploying a smart contract, you could type:</li> <li>\"I need help with smart contract deployment.\"</li> </ol> <ol> <li>Press Enter or click the send icon to submit your message.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-5-enter-your-details","title":"Step 5: Enter Your Details","text":"<ol> <li>The chat may prompt you with additional questions like:</li> <li>\"How would you like to be addressed?\"</li> <li>Provide your preferred name or any necessary details as requested.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-6-access-previous-conversations","title":"Step 6: Access Previous Conversations","text":"<ol> <li> <p>If you need to revisit a previous chat, click the \"Conversation\" tab at the bottom of the chat window. </p> </li> <li> <p>This section stores your chat history, allowing you to refer to past support interactions.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#step-7-close-or-start-a-new-conversation","title":"Step 7: Close or Start a New Conversation","text":"<ol> <li>To end the current chat, simply close the chat window by clicking the \"X\" button at the bottom-right corner of the window.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#tips-for-effective-support","title":"Tips for Effective Support","text":"<ul> <li> <p>Be clear and specific in describing your issue.</p> </li> <li> <p>Include details like the feature you're using, error messages, or steps you've already tried.</p> </li> <li> <p>If possible, provide screenshots to help the support team understand your problem better.</p> </li> </ul> <p>The chat support feature in Kalp Studio is designed to provide quick assistance for all your needs. By following the steps outlined in this guide, you can ensure smooth communication with the support team and get your queries resolved promptly.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#help-and-support","title":"Help and Support","text":"<p>Engage with the Kalp community through various social media platforms listed on the dashboard. For any assistance, the \"Help and Support\" section provides access to FAQs, support tickets, and other resources to resolve your queries.</p>"},{"location":"Products/Kalp-Studio-Console/Dashboard/How-to-Navigate-Kalp-Studio-Platform-as-a-New-User/#conclusion","title":"Conclusion","text":"<p>Kalp Studio offers a user-friendly interface with robust features for blockchain developers and enthusiasts. By familiarizing yourself with the dashboard, navigation menu, and available products, you can leverage the platform to build and manage your decentralized applications effectively.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Faucets/Faucets-Get-TestNet-Gini/","title":"Get TestNet Gini","text":""},{"location":"Products/Kalp-Studio-Console/Faucets/Faucets-Get-TestNet-Gini/#faucets-get-testnet-gini","title":"Faucets - Get TestNet Gini","text":""},{"location":"Products/Kalp-Studio-Console/Faucets/Faucets-Get-TestNet-Gini/#introduction","title":"Introduction","text":"<p>In the world of blockchain and decentralized applications, testing and development are crucial. A faucet is an essential tool that provides free test tokens to developers to experiment with different features on a testnet. The Kalp Studio faucet allows developers to obtain Gini tokens for use on the kalp DLT Test Net, a test network used for development and testing. These tokens are not real cryptocurrencies; they hold no monetary value and are solely for testing purposes.</p> <p>Here's a step-by-step guide on how you can get free 50 Gini on your Kalp wallet using the Kalp Studio faucet.</p>"},{"location":"Products/Kalp-Studio-Console/Faucets/Faucets-Get-TestNet-Gini/#step-by-step-guide","title":"Step-by-Step Guide","text":"<p>Login to Kalp Studio Begin by logging into your Kalp Studio account. If you do not have an account yet, you'll need to sign up first. Make sure you have your credentials ready and log in via the Kalp Studio homepage.</p> <p>Navigate to the Faucet Section</p> <p></p> <p>Once logged in, look at the left-hand menu of your dashboard. You will see several options such as Dashboard, Billing, Credits, Docs, Wallet, and Faucet. Click on the Faucet option to proceed to the faucet page.</p> <p>Connect Your Wallet</p> <p></p> <p>Before you can receive any tokens, you need to connect your wallet. Click on the Connect Wallet button found at the top right corner of the page.</p> <p></p> <p>Follow the prompts to connect a wallet that is compatible with the Kalp DLT chain. Make sure your wallet is set up to handle testnet tokens.</p> <p>Enter Your Wallet Address</p> <p></p> <p>After successfully connecting your wallet, the Faucet page will prompt you to enter your wallet address. Copy your wallet address from the connected wallet and paste it into the provided field on the Faucet page.</p> <p>Request Gini Tokens     With your wallet address entered, click on the Receive 50 Gini button. The faucet will initiate the process to send 50 Gini tokens to your wallet.</p> <p>Wait for Confirmation</p> <p></p> <p>Once you have clicked the button to receive Gini, you will see a confirmation message stating that your request is being processed. It may take a few minutes for the tokens to be sent to your wallet, so be patient. Do not refresh the page or press the back button during this process.</p> <p>Check Your Wallet Balance</p> <p>After a few minutes, go back to your wallet section by clicking Kalp Wallet. Here, you should see the updated balance with the newly added 50 Gini tokens.</p> <p></p> <p></p> <p>Understand the Token Usage     Remember, the Gini tokens you have received are test tokens for the Kalp DLT Test Net. These tokens are only valid for testing on the testnet and cannot be used on the main network. Use these tokens to deploy smart contracts, test applications, and debug transactions on the Kalp testnet.</p>"},{"location":"Products/Kalp-Studio-Console/Faucets/Faucets-Get-TestNet-Gini/#conclusion","title":"Conclusion","text":"<p>Using the Kalp Studio faucet is a straightforward process for developers looking to test their decentralized applications on the Kalp DLT Test Net. By following these steps, you can easily obtain free Gini tokens to enhance your development and testing activities. Remember, these tokens are strictly for testing purposes and have no real-world value. Enjoy experimenting on the Kalp platform!</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/","title":"How to get started with ks wallet","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#getting-started-with-ks-wallet-a-wallet-as-a-service-solution-by-kalp-studio","title":"Getting Started with KS Wallet: A Wallet-as-a-Service Solution by KALP Studio","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#introduction","title":"Introduction","text":"<p>The KS Wallet, provided by KALP Studio, is a comprehensive Wallet-as-a-Service (WaaS) solution. It simplifies the creation, management, and integration of digital wallets for developers, businesses, and enterprises. With support for custodial, non-custodial, and MPC (Multi-Party Computation) options, KS Wallet securely manages cryptocurrency private keys, offering unmatched scalability and flexibility.</p> <p>This guide will walk you through getting started with KS Wallet, selecting a subscription plan, and exploring its core features.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#1-what-is-ks-wallet","title":"1. What is KS Wallet?","text":"<p>KS Wallet is a Wallet-as-a-Service platform that enables businesses and developers to: - Create and manage wallets for various blockchain assets. - Integrate wallet functionality into their applications using APIs and widgets. - Offer secure private key management through custodial and non-custodial options.  </p> <p>It is an ideal solution for businesses looking to scale wallet operations without worrying about infrastructure.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#2-accessing-ks-wallet","title":"2. Accessing KS Wallet","text":"<p>To get started:</p> <ol> <li>Log in to KALP Studio:  </li> <li>Go to KALP Studio and sign in with your credentials.</li> </ol> <p></p> <ol> <li>Locate KS Wallet:  </li> <li>From the Dashboard, find the KS Wallet card.  </li> <li>Click \"GET STARTED\" to activate the wallet service.</li> </ol> <p></p> <ol> <li>Subscription Pricing:  </li> <li>KS Wallet starts at $10.00 credits.  </li> <li>Click \"Try Now\" for a quick demo.</li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#3-ks-wallet-subscription-plans","title":"3. KS Wallet Subscription Plans","text":"<p>KS Wallet offers flexible pricing plans to cater to different needs:</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#starter-plan-1000month","title":"Starter Plan - $10.00/month","text":"<ul> <li>Wallet Creation: Up to 50 wallets.  </li> <li>Designed for small businesses or developers testing wallet services.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#developer-plan-2500month","title":"Developer Plan - $25.00/month","text":"<ul> <li>Wallet Creation: Up to 100 wallets.  </li> <li>Open API Access: Integrate wallet features into custom applications.  </li> <li>Connect Widget: Seamlessly connect and manage wallets via a plug-and-play widget.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#enterprise-plan-5000month","title":"Enterprise Plan - $50.00/month","text":"<ul> <li>Wallet Creation: Up to 150 wallets.  </li> <li>Open API Access: Fully accessible.  </li> <li>Connect Widget: Included.  </li> <li>Embedded Wallet: Advanced wallet integration for deep custom use cases.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#4-subscribing-to-ks-wallet","title":"4. Subscribing to KS Wallet","text":"<p>To subscribe to KS Wallet:</p> <ol> <li>Go to the Billing section from the left-side menu.  </li> <li>Choose the plan that meets your needs:  </li> <li>Starter Plan: $10.00/month  </li> <li>Developer Plan: $25.00/month  </li> <li> <p>Enterprise Plan: $50.00/month  </p> </li> <li> <p>Click \"Subscribe\" and confirm your selection.  </p> </li> </ol> <p></p> <ol> <li>Your plan will appear as Active in the Billing dashboard.  </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#5-manage-your-credits","title":"5. Manage Your Credits","text":"<p>KALP Studio uses a credit-based system to pay for services like KS Wallet: </p> <ul> <li>Check your available balance at the top-right under \"My Credit\".  </li> <li>To top up:  </li> <li>Click \"Top Up\".  </li> <li>Add credits securely to maintain uninterrupted services.</li> </ul> <p>Ensure your credit balance covers the subscription renewal to avoid service interruptions.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#6-key-features-of-ks-wallet","title":"6. Key Features of KS Wallet","text":"<p>KS Wallet offers several advanced features that make it an industry-leading Wallet-as-a-Service solution:</p> <ol> <li>Wallet Creation and Management </li> <li> <p>Create and manage up to 150 wallets, depending on your plan.</p> </li> <li> <p>Custodial, Non-Custodial, and MPC Options </p> </li> <li> <p>Choose the wallet type based on your security and operational requirements.</p> </li> <li> <p>Open API Access </p> </li> <li> <p>Available in Developer and Enterprise plans for seamless integration into applications.</p> </li> <li> <p>Connect Widget </p> </li> <li> <p>An embeddable widget to allow end-users to connect and manage wallets easily.</p> </li> <li> <p>Embedded Wallet </p> </li> <li> <p>Available in the Enterprise Plan for full wallet control and deeper application integration.</p> </li> <li> <p>Subscription Management </p> </li> <li>Upgrade your subscription anytime from the Billing section.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#7-connecting-an-existing-wallet","title":"7. Connecting an Existing Wallet","text":"<p>To link an external wallet:</p> <ol> <li>Click the \"+ Connect Wallet\" button on the top-right corner of the dashboard.  </li> <li>Follow the guided steps to integrate your wallet securely.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#8-monitoring-and-managing-your-subscription","title":"8. Monitoring and Managing Your Subscription","text":"<p>After subscribing:</p> <ul> <li>Go to the Billing section to view:  </li> <li>Plan Details: Active status, start date, and renewal date.  </li> <li> <p>Current Usage: Wallet limits based on your subscription plan.  </p> </li> <li> <p>Upgrade to a higher plan anytime to unlock additional features.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#9-why-choose-ks-wallet-as-a-service","title":"9. Why Choose KS Wallet as a Service?","text":"<p>KS Wallet simplifies the complexities of wallet infrastructure with the following benefits:  </p> <ul> <li>Scalable Plans: Start small and scale as you grow.  </li> <li>Secure Solutions: Choose custodial or non-custodial options based on your needs.  </li> <li>Flexible Integration: Leverage APIs, widgets, and embedded wallets for custom workflows.  </li> <li>Cost-Efficient: Pay only for what you use with credit-based pricing.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-get-started-with-ks-wallet/#conclusion","title":"Conclusion","text":"<p>KS Wallet by KALP Studio is a powerful Wallet-as-a-Service solution for businesses and developers. Whether you\u2019re looking to integrate wallets into your platform, securely manage private keys, or scale your wallet operations, KS Wallet offers a comprehensive feature set to meet your needs. With flexible subscription plans, open API access, and seamless wallet integration options, KS Wallet simplifies wallet infrastructure management for businesses of all sizes.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/","title":"How to use connect widget feature in ks wallet","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#how-to-use-the-connect-widget-feature-in-ks-wallet","title":"How to Use the Connect Widget Feature in KS Wallet","text":"<p>The Connect Widget feature in KS Wallet allows users to seamlessly connect their wallets using various authentication options and blockchain preferences. This widget simplifies wallet integration for developers and provides a user-friendly experience for decentralized applications. This article provides a step-by-step guide on configuring and using the Connect Widget feature.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#1-introduction-to-connect-widget","title":"1. Introduction to Connect Widget","text":"<p>The Connect Widget in KS Wallet is a fully customizable Web3 wallet widget that supports:</p> <ul> <li>Multiple authentication methods: Google, email, phone, and social media logins.</li> <li>Wallet integrations: MetaMask, Kalp Wallet, Social Logins.</li> <li>Blockchain and network selection: Ethereum, Polygon, and more.</li> <li>Personalized theme options for seamless design integration.</li> </ul> <p>The widget simplifies the wallet onboarding process for decentralized applications.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#2-accessing-the-connect-widget","title":"2. Accessing the Connect Widget","text":"<ol> <li>Log in to your Kalp Studio account.</li> <li>Locate KS Wallet:</li> <li>From the Dashboard, find the KS Wallet card.</li> </ol> <p> 3. On the left-hand menu, select \"Connect Widget\" as shown in the dashboard.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#_1","title":"How to use connect widget feature in ks wallet","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#3-configuring-the-connect-widget","title":"3. Configuring the Connect Widget","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#step-1-choose-wallet-type","title":"Step 1: Choose Wallet Type","text":"<ol> <li> <p>Navigate to the \"Wallet Type\" section. </p> </li> <li> <p>Select the wallets you want to integrate:</p> </li> <li>Socials (e.g., Google logins).</li> <li>Kalp Wallet.</li> <li>MetaMask.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#step-2-enable-social-login","title":"Step 2: Enable Social Login","text":"<ol> <li> <p>Under \"Social Login\", enable options such as: </p> </li> <li> <p>Google Login.</p> </li> <li>Email Login.</li> <li> <p>Phone Login.</p> </li> <li> <p>Users will be able to log in using the selected options.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#step-3-select-blockchain-options","title":"Step 3: Select Blockchain Options","text":"<ol> <li> <p>In the \"Blockchain Selection\" section, choose supported blockchains such as: </p> </li> <li> <p>Ethereum.</p> </li> <li>Polygon.</li> <li>Kalp DLT.</li> <li>Customize the blockchain preferences for your wallet integration.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#step-4-network-selection","title":"Step 4: Network Selection","text":"<ol> <li>Under \"Network Selection\", enable preferred networks for each blockchain:</li> <li>Ethereum: Holesky, Sepolia, Mainnet.</li> <li>Polygon: Amoy, Mainnet.</li> <li>Kalp DLT: Dev Net, Stage Net.</li> <li>This ensures users can operate on their desired blockchain network.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#step-5-customize-theme-color","title":"Step 5: Customize Theme Color","text":"<ol> <li>In the \"Theme Color\" section:</li> <li>Select the background and text color.</li> <li>Adjust the widget appearance to match your application's theme.</li> <li>This ensures consistent branding.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#4-selecting-and-testing-the-widget","title":"4. Selecting and Testing the Widget","text":"<ol> <li>On the right-hand side, preview the widget configuration.</li> <li>Select any wallet type, e.g., Socials, Kalp Wallet, or MetaMask.</li> <li>Authenticate using your chosen login method (Google, email, or phone).</li> <li>Click \"Continue\" to proceed.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#5-code-configuration","title":"5. Code Configuration","text":"<p>The Code option allows you to embed the Connect Widget into your application using a small script.</p> <p>Steps to Configure the Code:</p> <ol> <li> <p>Navigate to the Code tab under the Connect Widget section.</p> </li> <li> <p>Choose between the following options:</p> <ul> <li>React Code (for React.js applications)</li> <li>JavaScript Code (for HTML/JavaScript applications)</li> </ul> </li> <li> <p>Copy the relevant script or integration code:</p> <ul> <li>React Integration: Code for React-based projects.</li> <li>JavaScript Integration: Script for embedding in a simple HTML file.</li> <li>Embed the code into your application. The widget will appear, enabling wallet connections.</li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#6-customize-the-button","title":"6. Customize the Button","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#1-theme-color","title":"1. Theme Color:","text":"<ul> <li>Adjust the Background Color and Text Color to match your brand or application theme.</li> <li>Use the color picker to set the desired color, or input the HEX code manually.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#2-example","title":"2. Example:","text":"<ul> <li>In the screenshot, the button background is set to a bold red color <code>#CD0606</code>, creating a prominent \"Continue\" button.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#3-apply-changes","title":"3. Apply Changes","text":"<ol> <li>Once you\u2019ve customized the button\u2019s theme:<ul> <li>Click the Apply Changes button to save your configuration.</li> </ul> </li> <li>The updated button will reflect your changes instantly, as seen in the preview.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#4-use-the-button","title":"4. Use the Button","text":"<ul> <li>The button can now be used to trigger wallet connection functionality within your application.</li> <li>Users will see the styled \"Continue\" button and can interact with it to connect their wallet seamlessly.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#7-save-and-apply-changes","title":"7. Save and Apply Changes","text":"<p>After configuring all the options:</p> <ol> <li>Click \"Apply Changes\" to finalize your widget.</li> <li>The widget is now ready to be used and embedded in your application.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-connect-widget-feature-in-ks-wallet/#conclusion","title":"Conclusion","text":"<p>The Connect Widget feature in KS Wallet simplifies wallet integration with customizable options for authentication, blockchain selection, and theming. By following the steps outlined in this guide, developers can enhance user onboarding for decentralized applications while ensuring flexibility and ease of use. Whether you're integrating Google login, MetaMask, or Kalp Wallet, the Connect Widget streamlines the process seamlessly.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket atcare.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-use-embed-widget-feature-in-ks-wallet/","title":"How to use embed widget feature in ks wallet","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/","title":"How to view all wallets","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#how-to-view-all-created-wallets-in-ks-wallet","title":"How to View All Created Wallets in KS Wallet","text":"<p>The KS Wallet, offered by KALP Studio, allows users to create and manage multiple wallets for their blockchain operations seamlessly. To keep track of all wallets you have created, the platform provides a dedicated All Wallets section, ensuring you can easily monitor and organize your wallet activities.</p> <p>This guide explains the step-by-step process for viewing all created wallets in the KS Wallet system.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#1-accessing-the-all-wallets-section","title":"1. Accessing the All Wallets Section","text":"<p>To view your created wallets:</p> <ol> <li>Log in to KALP Studio:  </li> <li> <p>Visit the KALP Studio platform and log in using your credentials.</p> </li> <li> <p>Locate KS Wallet:</p> </li> <li> <p>From the Dashboard, find the KS Wallet card.</p> </li> </ol> <p></p> <ol> <li>Navigate to the All Wallets Page:  </li> <li>On the KS Wallet Dashboard click on left-hand sidebar of All wallets.  </li> </ol> <p></p> <ul> <li>This will open the All Wallets page, displaying a list of all the wallets created under your account.</li> </ul> <p></p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#2-viewing-wallet-creation-details","title":"2. Viewing Wallet Creation Details","text":"<p>On the All Wallets page, you will find the following key details:</p> <p></p> <ul> <li>Wallet Created:  </li> <li> <p>A summary of the total number of wallets created out of the allowed wallet limit (e.g., 0/50).  </p> </li> <li> <p>Create New Wallet:  </p> </li> <li>If you have not reached your wallet creation limit, click on the + Create New Wallet button on the top-right corner to add a new wallet.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#3-monitoring-wallet-limits","title":"3. Monitoring Wallet Limits","text":"<p>The Wallet Created section provides an overview of your wallet usage:</p> <p></p> <ul> <li>Example: If your plan allows for 50 wallets, and you have created 10 wallets, it will display 10/50.  </li> <li>This feature helps you monitor wallet limits based on your active subscription plan.  </li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#4-creating-a-new-wallet","title":"4. Creating a New Wallet","text":"<p>If you need to create an additional wallet:</p> <ol> <li>Click on the + Create New Wallet button in the top-right corner.  </li> <li>Follow the steps to set up the new wallet.  </li> <li>Once created, the new wallet will appear in the All Wallets list.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-all-wallets/#conclusion","title":"Conclusion","text":"<p>The All Wallets section in KS Wallet provides a centralized and user-friendly way to view and manage all created wallets. By keeping track of your wallet usage and limits, you can efficiently organize your operations and scale as needed.</p> <p>For additional wallets or plan upgrades, use the + Create New Wallet button and ensure you are maximizing the features of your KS Wallet subscription.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket atcare.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/","title":"How to view transaction details for wallets","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#how-to-view-all-your-transaction-details-for-ks-wallet","title":"How to View All Your Transaction Details for KS Wallet","text":"<p>The KS Wallet by KALP Studio provides a seamless way to manage, monitor, and track all wallet-related transactions in a single interface. Whether you need to verify transaction statuses, view blockchain details, or troubleshoot activity, the Transactions section keeps everything organized and accessible.</p> <p>This guide will show you step-by-step how to view your transaction details in KS Wallet.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#1-access-the-transactions-section","title":"1. Access the Transactions Section","text":"<p>To view your transaction details:</p> <ol> <li>Log in to KALP Studio:  </li> <li> <p>Go to the KALP Studio platform and log in with your credentials.</p> </li> <li> <p>Locate KS Wallet:</p> </li> <li> <p>From the Dashboard, find the KS Wallet card.</p> </li> </ol> <p></p> <ol> <li> <p>Navigate to the Transactions Page: </p> </li> <li> <p>From the Dashboard; Click On the left-hand sidebar Transactions.  </p> </li> </ol> <p>This will take you to the Transactions dashboard, where you can view and manage all transaction activities related with KS wallet.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#2-viewing-transaction-details","title":"2. Viewing Transaction Details","text":"<p>The Transactions page provides a table that displays all essential transaction information:</p> <p></p> <ul> <li>Transaction ID: A unique identifier for each transaction.  </li> <li>Blockchain: Indicates the blockchain network (e.g., Ethereum, Kalp DLT).  </li> <li>Network: Shows the specific network used (e.g., Mainnet, Testnet).  </li> <li>Time: The exact date and time of the transaction.  </li> <li>Status: The current state of the transaction (e.g., Pending, Success, Failed).  </li> </ul> <p>If there are no transactions, a \"No data found\" message will be displayed.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#3-filtering-transactions","title":"3. Filtering Transactions","text":"<p>To quickly find the transactions you are looking for, you can use the filtering options available on the Transactions page:</p> <ul> <li>Search by Transaction ID: Enter the unique transaction ID in the search bar to filter results.  </li> <li>Sort by Date: Use the Date Range filter to view transactions within a specific time frame.  </li> </ul> <p>These options allow you to efficiently organize and analyze your transaction history.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#4-key-benefits-of-monitoring-transactions","title":"4. Key Benefits of Monitoring Transactions","text":"<p>By regularly checking your transaction details, you can:</p> <ul> <li>Track Payments: Ensure that wallet transfers and payments have been processed successfully.  </li> <li>Verify Status: Identify pending, failed, or successful transactions quickly.  </li> <li>Troubleshoot Issues: Resolve errors or delays by reviewing detailed transaction logs.  </li> <li>Maintain Accountability: Keep a clear record of all blockchain-related activities.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-transaction-details-for-wallets/#conclusion","title":"Conclusion","text":"<p>The Transactions section in KS Wallet offers an organized and transparent way to monitor all your wallet activities. By accessing transaction details, filtering records, and verifying statuses, you can efficiently manage wallet operations.</p> <p>For a smooth experience, ensure your wallet is connected and active on the Dashboard. Use the Help and Support option for assistance with unresolved transactions.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket atcare.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/","title":"How to view your ks wallet subscription details","text":""},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#how-to-view-ks-wallet-subscription-details","title":"How to View KS Wallet Subscription Details","text":"<p>Managing and monitoring your wallet services is essential for ensuring smooth operations. The KS Wallet, a Wallet-as-a-Service (WaaS) solution by KALP Studio, provides an easy way to view and manage your active subscriptions. Whether you are tracking wallet usage, verifying renewal dates, or reviewing your purchase history, KALP Studio offers a user-friendly interface to keep all your subscription details in one place.</p> <p>This guide will walk you through the steps to access and understand your KS Wallet subscription details.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#1-accessing-the-subscription-section","title":"1. Accessing the Subscription Section","text":"<p>To view your subscription details:</p> <ol> <li>Log in to KALP Studio:  </li> <li> <p>Go to the KALP Studio platform and log in with your credentials.</p> </li> <li> <p>Locate KS Wallet:</p> </li> <li> <p>From the Dashboard, find the KS Wallet card.</p> </li> </ol> <p></p> <ol> <li>Navigate to Subscription:  </li> <li>On the left-hand sidebar, click on Subscription.  </li> </ol> <p></p> <p>This will open the subscription management page.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#2-viewing-subscription-overview","title":"2. Viewing Subscription Overview","text":"<p>The Subscription page provides a detailed overview of your KS Wallet plan:</p> <p></p> <ul> <li>Active Plan: Displays your current subscription plan.  </li> <li>Plan Type: Indicates the active plan, e.g., Developer Plan.  </li> <li>Wallet Usage: Tracks the number of wallets created out of the total allowed wallets (e.g., <code>0/100</code>).  </li> <li>Subscription Start Date: The date when your current subscription started (e.g., 16 December 2024).  </li> <li>Renewal Date: The date your subscription will renew (e.g., 15 January 2025).  </li> <li>Subscription Cost: Shows the price of the active plan (e.g., $25.00/month).  </li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#3-reviewing-purchase-history","title":"3. Reviewing Purchase History","text":"<p>Below the subscription overview, you\u2019ll find the Purchase History section. This table contains details about your past subscription transactions, including:</p> <p></p> <ul> <li>Order ID: A unique identifier for each transaction.  </li> <li>Purchased Plan Name: The plan you subscribed to (e.g., Developer Plan, Starter Plan).  </li> <li>Amount: The cost of the plan (e.g., $25.00).  </li> <li>Date: The date and time the subscription was purchased.  </li> <li>Status: Indicates the payment or activation status (e.g., Success).  </li> </ul>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#4-upgrading-your-subscription-plan","title":"4. Upgrading Your Subscription Plan","text":"<p>If you need to upgrade to a higher plan:</p> <ol> <li>Click on the \"Upgrade\" button on the top-right corner of the subscription page.  </li> <li>Select the desired plan (e.g., Enterprise Plan) and confirm your upgrade.  </li> </ol> <p>The system will adjust your subscription and provide updated details accordingly.</p>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#5-key-information-to-monitor","title":"5. Key Information to Monitor","text":"<p>When reviewing your subscription details, pay attention to:</p> <ol> <li>Wallet Usage: Ensure you are within the wallet creation limits based on your plan.  </li> <li>Renewal Date: Top up your credits before the renewal date to avoid service interruptions.  </li> <li>Purchase History: Verify transaction details and statuses to confirm successful payments.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/KS-Wallet/How-to-view-your-ks-wallet-subscription-details/#conclusion","title":"Conclusion","text":"<p>Managing your KS Wallet subscription details in KALP Studio is simple and efficient. By regularly checking your active plan, wallet usage, and renewal dates, you can ensure uninterrupted wallet management and service continuity. Use the Purchase History section to stay on top of transactions, and upgrade your plan anytime to unlock more features.</p> <p>For further assistance, explore the Help and Support section or upgrade your subscription using the \"Upgrade\" button.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket atcare.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/","title":"How to use kalp functions","text":"<p>Kalp Studio provides a visual interface to configure and deploy Web3 Function tasks. This makes it easy for both developers and non-technical operators to create automation flows without writing additional code.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-1-create-a-new-project","title":"Step 1: Create a New Project","text":"<ul> <li>Go to portal.kalp.studio. </li> <li>Go To dashboard and select the Kalp Function to explore.</li> <li>Click \u201c+ Create New Project\u201d from the Kalp Function dashboard and further it will direct you to connect the wallet. </li> <li>After connecting the wallet, you will be directed to the new project page - This will create a project container where you can add one or multiple Web3 Functions.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-2-fill-in-project-details","title":"Step 2: Fill in Project Details","text":"<p>You\u2019ll see the Create Project form:</p> <p></p> <ul> <li>Project Name: A friendly name for your project (e.g., DAO Auto Executor). </li> <li>Supported Network: Select the blockchain network (currently: Ethereum Sepolia, more to be added soon). </li> <li>Funding Wallet Address: Enter the address that will cover gas fees for automated transactions. </li> <li>Wallet Funding Description: Optional notes to describe the wallet\u2019s role (e.g., Treasury Wallet). </li> <li>Runtime Selection: Choose the runtime for your functions (currently: Node.js; Deno support coming soon). </li> </ul> <p>Once you\u2019ve created a project, the next step is to configure a function. This defines when the function should run and what it should trigger.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-3-createconfigure-function-","title":"Step 3: Create/Configure Function-","text":"<p>Within your project, click on \u201c+ Create New Function\u201d and choose:</p> <ul> <li>Trigger Type: Time Interval, Cron, On-Chain Event, or Every Block. </li> <li>Who to Trigger: Solidity Function, Transaction, or Webhook. </li> <li>Contract Details: Enter the target contract address, ABI, and function parameters. </li> </ul> <p>For the detailed description, please follow the introduction part.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-4-set-contract-details","title":"Step 4: Set Contract Details","text":"<ul> <li>Network: Choose the blockchain network (e.g., Ethereum Sepolia). </li> <li>Contract Address: Enter the address of the smart contract you want to connect with. </li> <li>ABI: You can paste a custom ABI or fetch if the contract is verified. </li> </ul> <p>Example: Configure function to listen for the EmployeeAdded(address employee, uint256 salary) event.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-5-select-who-to-trigger","title":"Step 5: Select \u201cWho to Trigger\u201d","text":"<p>Decide what should happen when the trigger condition is met:</p> <ul> <li>Solidity Function: Call a specific function in your smart contract. </li> <li>Automated Transaction: Execute a pre-defined transaction. </li> <li>Webhook: Notify an external system (Slack, Email, custom API). </li> <li>(Coming Soon) Typescript Function for off-chain logic. </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/How-to-use-kalp-functions/#step-6-task-properties","title":"Step 6: Task Properties","text":"<ul> <li>Task Name: Friendly name for your function (e.g., Welcome Function). </li> <li>Optional: Configure advanced execution options (single run vs recurring). </li> </ul> <p>Click Create Function to save. Your task will now appear under the project dashboard, where you can monitor executions, logs, and success/failure states.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/","title":"Overview","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#overview","title":"Overview","text":"<p>KALP Web3 Functions transform smart contracts from passive logic into active, autonomous services. They allow developers to automate execution, schedule transactions, or connect on-chain events with off-chain systems without needing to manage backend infrastructure.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#understanding-your-needs","title":"Understanding Your Needs","text":"<p>On-Chain Only Automation? If your automation logic can be verified entirely on-chain (like executing DAO proposals, claiming rewards, or running scheduled payments), you can use:</p> <ul> <li>Solidity Functions  </li> <li>Automated Transactions  </li> </ul> <p>Off-Chain Notifications or Integrations? If you need to integrate external services (e.g., Slack alerts, email notifications, or bridging blockchain events to Web2 APIs), you can use Webhooks. This makes KALP Web3 Functions suitable for hybrid dApps that combine blockchain execution with real-world integrations.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#implementation-flow","title":"Implementation Flow","text":"Step Action Description 1 Choose Your Trigger Decide how automation should start: time-based intervals, on-chain events, or per-block execution. 2 Decide What to Run Select the execution type: Solidity Function, Automated Transaction, or Webhook. 3 Task Creation Create and configure a Web3 Function task through the KALP Studio portal. 4 Finalize &amp; Monitor Deploy and monitor your tasks to ensure correct execution and adjust settings if needed."},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#core-features","title":"Core Features","text":"<p>KALP Web3 Functions provide serverless automation for on-chain tasks using Solidity. When designing your function, you can select from supported trigger types and execution targets.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#trigger-types","title":"Trigger Types","text":"<ul> <li>Time Interval \u2013 Run after a set duration (e.g., every 30 days).  </li> <li>Cron Expressions \u2013 Schedule with precise timing (e.g., every Monday at 00:00).  </li> <li>On-Chain Event \u2013 Trigger when a specific event is emitted.  </li> <li>Every Block \u2013 Execute with each new block.  </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#execution-targets","title":"Execution Targets","text":"<ul> <li>Solidity Function \u2013 Directly call a contract method (e.g., <code>executeProposal()</code>).  </li> <li>Transaction \u2013 Perform a generic on-chain transaction (e.g., token transfers).  </li> <li>Webhook \u2013 Send a notification to an external system (e.g., Slack, email).  </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#pre-requisites-for-your-smart-contract","title":"Pre-Requisites for Your Smart Contract:","text":"<p>To integrate smoothly with Kalp Web3 Functions, your smart contract and Solidity function should meet the following criteria:</p> <ul> <li>The function should be called programmatically\u2014not necessarily user-facing. </li> <li>It must be public or external. </li> <li>Avoid restricting access with onlyOwner unless the Kalp executor is whitelisted. </li> <li>Do not rely on <code>tx.origin</code> in logic (use <code>msg.sender</code> appropriately). </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Overview/#trigger-types_1","title":"Trigger Types","text":"<p>Kalp Web3 Functions currently support:</p> <ul> <li>Solidity Function </li> <li>Automated Transactions </li> <li>Webhook </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Solidity%20Functions/","title":"Solidity Functions","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Solidity%20Functions/#solidity-functions","title":"Solidity Functions","text":"<p>Solidity Functions in Kalp are automation scripts written directly in Solidity that decide when and how a smart contract action should be executed. They run natively on-chain, making them a reliable choice whenever you need trustless, transparent, and immutable automation.</p> <p> Solidity Functions can be combined with any of the available Trigger Types, enabling precise control over execution. </p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Solidity%20Functions/#why-solidity-functions-matter","title":"Why Solidity Functions Matter","text":"<ul> <li>On-chain Accuracy - Conditions are verified entirely on-chain without relying on external sources. </li> <li>Gas-Aware Execution - Define execution limits and gas thresholds to optimize cost. </li> <li>Immutable &amp; Secure - Once deployed, the logic cannot be altered, ensuring predictable automation. </li> <li>Customizable Conditions Encode logic such as thresholds, ownership checks, or state changes to unlock tailored automation flows. </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Solidity%20Functions/#example-use-cases","title":"Example Use Cases","text":"<ul> <li>DeFi Automations - Auto-liquidate undercollateralized positions in lending protocols. </li> <li>NFT Management - Trigger royalties distribution when NFTs are transferred or sold. </li> <li>Treasury Operations - Automate recurring transfers to community funds based on DAO votes. </li> <li>Risk Control - Halt trading or interactions if a specific state variable reaches a critical threshold. </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Solidity%20Functions/#when-to-choose-solidity-functions","title":"When to Choose Solidity Functions","text":"<p>Use Solidity Functions when:</p> <ul> <li>All conditions can be validated on-chain. </li> <li>You want predictability and security from immutable contracts. </li> <li>Gas optimization and strict execution rules are critical. </li> <li>Off-chain API calls or external data are not required (for that, see our upcoming Typescript Functions). </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/","title":"Transactions","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/#transactions","title":"Transactions","text":"<p>Automated Transactions allow you to schedule and execute smart contract calls without manual intervention. Instead of waiting for a human or an off-chain bot, Kalp Functions automatically initiate transactions when defined conditions are met. This ensures your dApp or protocol runs smoothly, reduces delays, and minimizes the risk of missed operations.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/#why-use-transactions","title":"Why Use Transactions?","text":"<ul> <li>Reliability: Remove human error or dependency on external scripts. </li> <li>Efficiency: Save time by executing repetitive or predictable contract calls. </li> <li>Security: Execute transactions directly from Kalp\u2019s trusted automation layer. </li> <li>Flexibility: Combine with triggers (time, cron, on-chain events) for maximum customization. </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/#common-use-cases","title":"Common Use Cases","text":"<ol> <li>Subscription Renewals </li> <li>Auto-charge users every 30 days for premium access. </li> <li> <p>Trigger: Time Interval (30 days). </p> </li> <li> <p>DAO Proposal Execution </p> </li> <li>Automatically execute approved proposals (no need for manual calls). </li> <li> <p>Trigger: On-chain Event (Proposal Approved). </p> </li> <li> <p>Auto-Claim Rewards </p> </li> <li>Users don\u2019t need to remember to claim; rewards are distributed automatically. </li> <li> <p>Trigger: Cron Expression (Every 24 hours). </p> </li> <li> <p>Treasury Payouts / Payroll </p> </li> <li>Stream salaries, vesting tokens, or community grants. </li> <li>Trigger: Monthly or Weekly Interval. </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/#how-it-works","title":"How It Works","text":"<ol> <li>Define the Transaction: Select the target contract + function (e.g., renewSubscription()). </li> <li>Choose a Trigger: Time, Cron, Event, or Block. </li> <li>Automate via Kalp UI: Configure once, and Kalp handles execution. </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Transactions/#example-flow","title":"Example Flow","text":"<ul> <li>Trigger: Cron (every Friday at 6PM). </li> <li>Action: Call airdropTokens(address[] recipients, uint256 amount). </li> <li>Result: Community members automatically receive tokens weekly. </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/","title":"Trigger types","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#trigger-types-kalp-web3-functions","title":"Trigger Types (Kalp Web3 Functions)","text":"<p>Kalp Web3 Functions provide multiple ways to decide when and how your automation should run. Depending on your use case, you can pick from simple time-based triggers, blockchain-aware events, or external webhooks.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#1-time-interval","title":"1. Time Interval","text":"<p>Use this trigger to execute tasks at fixed intervals  - for example, every 10 minutes or once every 24 hours. Think of it as a recurring alarm clock for your smart contract or automated transaction.</p> <p>\ud83d\udccc screenshot: Kalp Studio dashboard with a simple \u201cEvery 30 mins\u201d interval setup.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#2-cron-expressions","title":"2. Cron Expressions","text":"<p>For more advanced scheduling, you can use cron expressions. This allows fine-grained control like:</p> <ul> <li>\u201cEvery Tuesday at 3 PM\u201d </li> <li>\u201cOn the 1st of every month at midnight\u201d </li> </ul> <p>It\u2019s ideal for precise task scheduling.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#3-on-chain-event","title":"3. On-Chain Event","text":"<p>Perfect when your automation should react directly to blockchain activity.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#example-erc20-token-transfer-event","title":"Example: ERC20 Token Transfer Event","text":"<p>Let\u2019s say you want to trigger an action whenever a user transfers tokens. Most ERC20 tokens emit a Transfer event whenever tokens move between addresses:</p> <pre><code>// Standard ERC20 Transfer event\nevent Transfer(address indexed from, address indexed to, uint256 value);\n</code></pre> <p>Whenever this event occurs, Kalp Web3 Functions can execute the linked action automatically.</p> <p></p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Functions/Trigger-types/#4-every-block","title":"4. Every Block","text":"<p>This trigger runs in sync with the blockchain itself, firing each time a new block is produced. It\u2019s best used for tasks that need to react in real-time to state changes or block-based updates.</p> <p></p> <ol> <li>Webhook Trigger (Kalp Studio Exclusive)</li> </ol> <p>Unlike many other automation platforms, Kalp Functions natively support Webhook triggers. This means your Web3 Function can start when an off-chain API, app, or service sends a request to Kalp.</p> <p>Example use cases:</p> <ul> <li>Alerting via Slack or Email when balances fall below a threshold. </li> <li>Triggering payouts after a successful off-chain payment. </li> <li>Running an oracle update when external data changes. </li> </ul> <p></p> <p>Note</p> <p>Whichever trigger you choose, you can connect it to run any of the following actions in Kalp Web3 Functions:</p> <ul> <li>Solidity Function </li> <li>Automated Transactions </li> <li>Webhook Execution </li> </ul> <p>Coming Soon: Typescript Functions \u2014 for scenarios requiring off-chain data fetches, APIs, and advanced computations.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/","title":"How to Deploy a Smart Contract on Kalp Studio","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#how-to-deploy-a-smart-contract-on-kalp-studio","title":"How to Deploy a Smart Contract on Kalp Studio","text":"<p>Deploying a smart contract on Kalp Studio is a streamlined process that involves a few simple steps. This guide will walk you through the entire procedure, using the screenshots provided as visual aids.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#step-1-access-the-kalp-studio","title":"Step 1: Access the Kalp Studio","text":"<p>Log in to the Kalp Studio Platform and access the Dashboard.</p> <p></p> <p>Click on Get Started and the Kalp Instant Deployer dashboard will appear.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#dashboard-overview","title":"Dashboard Overview","text":"<p>When you first log in to KALP Studio, you'll be greeted by the dashboard. Here, you can see various options like \"Dashboard,\" \"Smart Contract,\" \"API Gateway,\" \"Transaction Monitoring,\" and more on the left-hand side menu.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#subscribing-to-the-smart-contract-deployer","title":"Subscribing to the Smart Contract Deployer","text":"<p>To begin deploying a smart contract, click the \"Subscribe\" button under the \"Smart Contract Deployer\" section. This will allow you to access the smart contract deployment tools.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#step-2-creating-a-new-smart-contract","title":"Step 2: Creating a New Smart Contract","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#building-smart-contracts","title":"Building Smart Contracts","text":"<p>After subscribing, you'll see the main deployment screen. Click on the \"Create New\" button to start building a smart contract.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#entering-smart-contract-details","title":"Entering Smart Contract Details","text":"<p>In this step, you need to enter the details of your smart contract:</p> <ul> <li> <p>Name: Enter a name for your smart contract.</p> </li> <li> <p>Category: Choose a category for your smart contract.</p> </li> <li> <p>Description: Optionally, you can add a description for your smart contract.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#step-3-uploading-the-extension-file","title":"Step 3: Uploading the Extension File","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#uploading-files","title":"Uploading Files","text":"<p>Once the details are filled in, you will be prompted to upload an extension file. You can drag and drop your file into the designated area or browse your computer to select the file. The supported formats include .tar.gz, .tar.xz, and .zip, with a maximum size of 50 MB.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#successful-upload-confirmation","title":"Successful Upload Confirmation","text":"<p>After successfully uploading your file, you will see a confirmation message. If needed, you can change the file at this stage.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#step-4-selecting-a-template","title":"Step 4: Selecting a Template","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#kalp-template-selection","title":"KALP Template Selection","text":"<p>You can choose from a list of ready-to-use templates offered by KALP Studio. These templates can be selected from here and directly the smart contract is deployed, and amended as necessary before re-uploading to obtain API endpoints. This step helps you directly deploy smart contracts using pre-built templates.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#step-5-reviewing-and-deploying","title":"Step 5: Reviewing and Deploying","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#review-details","title":"Review Details","text":"<p>Review all the details of your smart contract, including the name, category, description, and selected template. Make sure everything is correct before proceeding.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-Instant-Deployer/How-to-Deploy-a-Smart-Contract-on-Kalp-Studio/#deployment","title":"Deployment","text":"<p>Finally, click on \"Continue\" to deploy your smart contract. You will receive a confirmation message indicating that the new smart contract has been successfully deployed.</p> <p></p> <p>Deploying a smart contract on Kalp Studio is a user-friendly process that involves subscribing to the smart contract deployer, entering contract details, uploading the necessary files, selecting a template, and reviewing before deploying. Follow these steps, and you'll have your smart contract deployed in no time.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/","title":"How to Create and Connect Wallet to Kalp Studio","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#how-to-create-and-connect-wallet-to-kalp-studio","title":"How to Create and Connect Wallet to Kalp Studio?","text":"<p>Creating or connecting a wallet on Kalp Studio is a straightforward process designed to ensure that users can manage their digital assets securely and efficiently. Here is a detailed guide to help you through each step of the process.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#step-by-step-guide","title":"Step-by-Step Guide","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#1-access-the-wallet-section","title":"1. Access the Wallet Section","text":"<ul> <li>Navigate to the Wallet Section: After logging into Kalp Studio, go to the sidebar menu and click on the 'Wallet' option.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#2-add-a-new-wallet","title":"2. Add a New Wallet","text":"<p>Initiate Wallet Creation: Click on the \"+ Connect Wallet\" button. This will open the wallet creation interface.</p> <ul> <li>When the user clicks on the \"Connect Wallet\" button in the top navigation or within the wallet module, a pop-up will appear for connecting the wallet. The user then selects the \"Create New Wallet\" option.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#3-choose-wallet-type","title":"3. Choose Wallet Type","text":"<ul> <li> <p>Select Wallet Type: You will be presented with options to choose the type of wallet. Kalp Studio supports multiple types of wallets such as:</p> <ul> <li> <p>Self Custody Wallet</p> </li> <li> <p>Custodial Wallet</p> </li> <li> <p>MPC Wallet</p> </li> </ul> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#self-custody-wallet","title":"Self Custody Wallet","text":"<p>Self Custody Wallet: For this guide, we select 'Self Custody Wallet'. Click 'Continue' to proceed.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#1-configure-the-wallet","title":"1. Configure the Wallet","text":"<ul> <li> <p>Select Blockchain and Network: Choose the appropriate blockchain and network for your wallet. This ensures compatibility and proper functionality of your wallet within the ecosystem.</p> </li> <li> <p>Click 'Continue' after making your selections.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#2-generate-seed-phrase","title":"2. Generate Seed Phrase","text":"<ul> <li> <p>Secret Recovery Phrase: You will be provided with a 15-word seed phrase. This phrase is crucial for the security and recovery of your wallet.</p> </li> <li> <p>Save the Seed Phrase: Write down the seed phrase and store it securely. It is recommended to:</p> <ul> <li> <p>Save it in a password manager.</p> </li> <li> <p>Store it in a secure deposit box.</p> </li> <li> <p>Write it down and hide copies in multiple secret spots.</p> </li> </ul> </li> <li> <p>Do Not Share: Never share your seed phrase with anyone.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#3-confirm-seed-phrase","title":"3. Confirm Seed Phrase","text":"<ul> <li>Verification: To ensure you have correctly noted the seed phrase, you will need to confirm it by selecting each word in the correct order.</li> </ul> <ul> <li>Click 'Continue' after confirmation.</li> </ul> <p>After jotting down the seed phrase, you need to arrange the words accordingly.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#4-wallet-creation-successful","title":"4. Wallet Creation Successful","text":"<ul> <li> <p>Wallet Details: Once the seed phrase is confirmed, your wallet will be successfully created. You will be provided with your private and public keys.</p> </li> <li> <p>Copy and Secure: Copy these keys and store them securely. Your private key should be kept confidential.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#select-mpc-wallet","title":"Select MPC Wallet","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#step-1-access-the-wallet-section","title":"Step 1: Access the Wallet Section","text":"<ul> <li> <p>Begin by logging into your KALP Studio account.</p> </li> <li> <p>On the left-hand menu, navigate to the Wallet section.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#step-2-configure-your-wallet","title":"Step 2: Configure Your Wallet","text":"<ul> <li> <p>After selecting the wallet type, you will be asked to choose the blockchain and network for your wallet.</p> <ul> <li> <p>Blockchain: Select the appropriate blockchain, such as KALP.</p> </li> <li> <p>Network: Choose between Testnet (for testing purposes) or Mainnet (for live transactions).</p> </li> </ul> </li> <li> <p>Once your selections are made, click Continue.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#step-4-sign-in-for-verification","title":"Step 4: Sign In for Verification","text":"<ul> <li>To proceed, you need to sign in or verify your account. You will see a prompt to sign in with Google or enter your email address.</li> </ul> <ul> <li>Enter your details, and you may be asked to verify your email by entering a code sent to your inbox.</li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Create-and-Connect-Wallet-to-Kalp-Studio/#step-5-wallet-creation-confirmation","title":"Step 5: Wallet Creation Confirmation","text":"<ul> <li> <p>Upon successful verification, your wallet will be created.</p> </li> <li> <p>A confirmation message will appear, indicating that the wallet has been created successfully.</p> </li> <li> <p>The platform will also credit your wallet with a certain amount of tokens (e.g., 50 Gini) for initial transactions or activities on the platform.</p> </li> </ul> <p>By following the steps outlined in this guide, you can set up various types of wallets, including Self Custody, Custodial, and MPC wallets. Each wallet type offers unique benefits tailored to different needs and preferences.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Navigate-To-kalp-studio-Wallet/","title":"How to Navigate To kalp studio Wallet","text":""},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Navigate-To-kalp-studio-Wallet/#how-to-navigate-to-kalp-studio-wallet","title":"How to Navigate To kalp Studio Wallet?","text":"<p>Efficient digital asset management is crucial, and Kalp Studio offers a professional, user-friendly wallet feature. This guide will help you navigate and use the wallet interface, allowing you to connect, view, and manage your wallets with ease.</p>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Navigate-To-kalp-studio-Wallet/#step-by-step-guide-to-navigate-to-kalp-studio-wallet","title":"Step-by-Step Guide to Navigate to Kalp studio Wallet","text":"<p>Log in to Kalp Studio:</p> <ul> <li> <p>Open your web browser and go to the Kalp Studio login page.</p> </li> <li> <p>Enter your credentials (username and password) and log in to your account.</p> </li> </ul> <p>2 . Access the Main Menu:</p> <ul> <li> <p>Once logged in, you will be directed to the dashboard.</p> </li> <li> <p>On the left-hand side, you will see the main menu with several options.</p> </li> </ul> <p>3 . Navigate to Kalp studio Wallet Section:</p> <ul> <li> <p>In the main menu, locate the \"Wallet\" option. It is represented by an icon of a wallet.</p> </li> <li> <p>Click on the \"Wallet\" option to proceed to the wallet management page.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Navigate-To-kalp-studio-Wallet/#adding-a-wallet","title":"Adding a Wallet","text":"<p>Connect Wallet:</p> <ul> <li> <p>If you have not added a wallet yet, you will see a prompt on the screen saying, \"You need to add or create a wallet to reflect your balance here.\"</p> </li> <li> <p>Click on the \"+ Connect Wallet\" button to add a new wallet.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Console/Kalp-studio-wallet/How-to-Navigate-To-kalp-studio-Wallet/#managing-your-wallet","title":"Managing Your Wallet","text":"<p>Once you have added your wallet, you can view and manage it efficiently. Here's how:</p> <p>1 . Wallet Overview:</p> <ul> <li>After connecting your wallet, you will see an overview of your wallet balance displayed prominently.</li> </ul> <p>2 . View All Created Wallets:</p> <ul> <li>On the right side, there is a section titled \"All Created Wallets\" where you can see all the connected wallets along with their respective balances.</li> </ul> <p>3 . Transactions:</p> <p></p> <ul> <li> <p>Below the wallet balance, you will find the \"Transactions\" section.</p> </li> <li> <p>This section lists all your transactions, including details such as Transaction ID, Blockchain, Time, Network, and Status.</p> </li> <li> <p>Disconnect Wallet:</p> </li> </ul> <p></p> <ul> <li>If you need to disconnect a wallet, click on the \"Disconnect\" button at the bottom right of wallet balance widget.</li> </ul> <p>By following these steps, you can easily navigate to and manage your Kalp Studio wallet within Kalp Studio dashboard, keeping track of your balances and transactions with ease.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Change-the-Password/","title":"How to reset the Password","text":""},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Change-the-Password/#how-to-change-the-password","title":"How to Change the Password","text":"<p>The \"Forgot Password\" feature is an essential component of any website or platform that allows users to recover access to their accounts when they have forgotten their passwords.</p> <p>Resetting a password successfully is a seamless and straightforward process through the Kalp Studio. User(s) cannot enter Kalp Studio without logging in with the individual\u2019s email and a correct password, matching with the database.</p> <p>The below steps describe the user journey throughout the Reset Password process.</p> <p>Step 1:</p> <p></p> <p>Click console.kalp.studio to redirect to the Kalp Studio application page. Click on Forgot Password.</p> <p>Step 2:</p> <p></p> <p>Enter your email ID to receive a link to reset your password. Click on Submit. You will receive an OTP.</p> <p></p> <p>Enter the received OTP and click on Verify button.</p> <p></p> <p>The reset password page is displayed on the screen. Enter your new password.</p> <p>Criteria for selecting a valid password</p> <ul> <li> <p>Password must contain at least 8-20 characters.</p> </li> <li> <p>It should always be an alphanumeric string.</p> </li> <li> <p>Password must contain at least one lowercase and uppercase letter.</p> </li> <li> <p>Password must contain at least one special character, including \u201c!, @, #, $, %, &amp;, *, (), -, +, =, ^\u201d</p> </li> <li> <p>The new password should not match the last 3 passwords.</p> </li> </ul> <p>Repeat your new password on the Confirm Password input box for confirmation.</p> <p>Click on Reset Password. You have successfully changed your password. You will get an email about the successful password change in your registered email ID.</p> <p>Click on Login Now to log in to the Kalp Studio application.</p> <p></p> <p>Hope this article helped with beginning your journey on the Kalp Studio platform.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/","title":"How to Sign Up and Log In to Kalp Studio Platform","text":""},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#how-to-sign-up-and-log-in-to-kalp-studio-platform","title":"How to Sign Up and Log In to Kalp Studio Platform","text":"<p>Welcome to Kalp Studio! This guide will walk you through the simple steps to create your account and sign in, so you can start exploring our amazing products. Whether you're a new user or returning, this article will help you navigate the process with ease.</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#how-to-register-a-new-kalp-studio-account","title":"How to Register a New Kalp Studio Account","text":"<p>If you don\u2019t have an account yet, here\u2019s how to get started:</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-1-navigate-to-the-sign-in-page","title":"Step 1: Navigate to the Sign In Page","text":"<p> 1.  First, visit the Kalp Studio website or app.</p> <ol> <li>On the login page, you will see a \"Sign In\" option. Below it, find and click the \"Register Now\" link. This will take you to the registration page.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-2-begin-creating-your-account","title":"Step 2: Begin Creating Your Account","text":"<p>On the \u201cCreate Kalp Studio Account\u201d page, you\u2019ll need to provide some basic information:</p> <ol> <li> <p>Name: Enter your full name in the \"Name\" field.</p> </li> <li> <p>Email: Enter your email address in the \"Email\" field.</p> </li> <li> <p>Once your email address is entered, click the \"Verify Email\" button. This will send a one-time password (OTP) to your email.</p> <p></p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-3-verify-your-email","title":"Step 3: Verify Your Email","text":"<ol> <li> <p>After clicking \u201cVerify Email,\u201d you will see a field to enter an OTP.</p> </li> <li> <p>Go to your email inbox and copy the OTP you received from Kalp Studio.</p> </li> </ol> <p></p> <ol> <li> <p>Enter the OTP in the provided \"Enter OTP\" field.</p> </li> <li> <p>Click on the \"Verify OTP\" button. If the OTP is correct, the email field will show \"Verified\" in green, confirming your email address.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-4-set-your-password","title":"Step 4: Set Your Password","text":"<ol> <li> <p>In the \u201cCreate Password\u201d field, enter your desired password. Choose a strong password that's easy for you to remember but difficult for others to guess.</p> </li> <li> <p>Use the visibility icon to check whether you've correctly entered your password.</p> </li> </ol> <p>If you have a referral code, enter it in the \"Enter Referral (Optional)\" field. If not, you can leave this field blank.</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-5-review-and-accept-terms","title":"Step 5: Review and Accept Terms","text":"<ol> <li> <p>Read the \"Terms &amp; Conditions\" and \"Privacy Policy\" links.</p> </li> <li> <p>By clicking on the \u201cRegister\u201d button, you agree to these terms.     </p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-6-email-verification-success","title":"Step 6: Email Verification Success","text":"<ol> <li> <p>Once registration is successful, you'll see a confirmation popup saying \u201cEmail Verified\u201d.</p> </li> <li> <p>Click on the \"Welcome\" button to proceed.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#how-to-sign-in-to-your-kalp-studio-account","title":"How to Sign In to Your Kalp Studio Account","text":"<p>Once you have your Kalp Studio account, signing in is quick and easy:</p>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-1-navigate-to-the-sign-in-page_1","title":"Step 1: Navigate to the Sign In Page","text":"<ol> <li>Go back to the Kalp Studio login page.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-2-enter-your-login-credentials","title":"Step 2: Enter Your Login Credentials","text":"<ol> <li> <p>Email: Enter the email address you used during registration in the \"Enter Your Email\" field.</p> </li> <li> <p>Password: Enter your password in the \"Enter Password\" field. Use the visibility icon to check whether you've correctly entered your password.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#step-3-sign-in","title":"Step 3: Sign In","text":"<ol> <li>Click the \u201cSign In\u201d button to access your Kalp Studio account.</li> </ol>"},{"location":"Products/Kalp-Studio-Console/Onboarding/How-to-Sign-Up-and-Log-In-to-Kalp-Studio-Platform/#conclusion","title":"Conclusion","text":"<p>With these steps, you can easily register and sign in to your Kalp Studio account. Start exploring our amazing products and enjoy your experience with us. If you encounter any issues, please contact our support team for further assistance.</p>"},{"location":"Products/Kalp-Studio-Console/Transaction-monitoring/How-can-I-monitor-all-my-transactions/","title":"How can I monitor all my transactions","text":""},{"location":"Products/Kalp-Studio-Console/Transaction-monitoring/How-can-I-monitor-all-my-transactions/#how-can-i-monitor-all-my-transactions","title":"How can I monitor all my transactions?","text":"<p>Monitoring transactions is crucial for managing and auditing financial activities, especially when dealing with blockchain and smart contracts. Kalp Studio provides a comprehensive platform for monitoring transactions effectively.</p> <p>Access the Dashboard:</p> <p>Upon logging into Kalp Studio, you will land on the Dashboard. The dashboard provides an overview of your activities and quick access to essential features.</p> <p></p> <p>Locate the Sidebar Menu: On the left-hand side, you will find a vertical sidebar menu. This menu contains various options including:</p> <ul> <li> <p>Dashboard</p> </li> <li> <p>Credits</p> </li> <li> <p>Docs</p> </li> <li> <p>Wallet</p> </li> <li> <p>Faucet</p> </li> <li> <p>Help and Support</p> </li> </ul> <p>Select the 'Smart Contract' Option:</p> <p>Click on the Smart Contract tab in the sidebar. This will redirect you to the section dedicated to managing and deploying smart contracts.</p> <p></p> <p>Accessing the Transaction Monitoring Section</p> <p>Once you log in to your Kalp Studio platform, navigate to the left-hand sidebar. Here, you will find multiple options including Dashboard, Smart Contract, API Gateway, Subscription, API Key Generation, and Settings. Click on \"Transaction Monitoring\" to access the relevant section.</p> <p></p> <p>If you haven't subscribed to the Transaction Monitoring service, you will see a screen prompting you to subscribe. Simply click on the \"Subscribe Now\" button to activate this feature. Subscribing will enable you to monitor all transactions associated with your account.</p>"},{"location":"Products/Kalp-Studio-Console/Transaction-monitoring/How-can-I-monitor-all-my-transactions/#viewing-your-transactions","title":"Viewing Your Transactions","text":"<p>Once subscribed, you will have access to the Transaction Monitoring dashboard. This section displays a list of smart contracts you have downloaded and used for transactions are displayed here, including their details such as ID, network type, and creation date.</p> <p></p> <p>ou can search for specific transactions using the search bar at the top right by entering the transaction ID or name.</p>"},{"location":"Products/Kalp-Studio-Console/Transaction-monitoring/How-can-I-monitor-all-my-transactions/#detailed-transaction-view","title":"Detailed Transaction View","text":"<p>To view detailed information about a specific smart contract, click on it from the list. This will open a detailed view where you can see the smart contract's ID, category, network, and description.</p> <p></p> <p>You will find a list of all transactions related to this smart contract, including details such as ID, Block ID, transaction hash (TxHash), creation date, status (Success or Failed), and statistic.</p> <p>This detailed view allows you to track the status of each transaction, ensuring that you are aware of all successful and failed transactions.</p>"},{"location":"Products/Kalp-Studio-Console/Transaction-monitoring/How-can-I-monitor-all-my-transactions/#conclusion","title":"Conclusion","text":"<p>Kalp Studio provides a user-friendly and efficient way to monitor all your transactions. By subscribing to the Transaction Monitoring service, you can access detailed information about each smart contract and its associated transactions. This ensures that you have complete visibility and control over your financial activities, helping you maintain transparency and accountability in your operations.</p> <p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/","title":"FAQ","text":""},{"location":"Products/Kalp-Studio-Storage/FAQ/#ks-storage-faq","title":"KS Storage FAQ","text":""},{"location":"Products/Kalp-Studio-Storage/FAQ/#1-what-is-ks-storage","title":"1. What is KS Storage?","text":"<p>Kalp Studio's KS Storage offers a decentralized, secure, and scalable solution for file and folder management. Built on IPFS (InterPlanetary File System), KS Storage allows users to create and organize buckets (top-level containers) and folders (sub-directories) and efficiently upload or manage files, ensuring data resilience and ownership. With decentralized storage, files are stored across a distributed network, reducing dependency on centralized servers and enhancing data security.</p> <p>Key features include easy file sharing, tagging, and efficient handling, empowering users to store and access data securely without requiring programming skills.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#2-what-is-ipfs","title":"2.  What is IPFS?","text":"<p>IPFS, or the InterPlanetary File System, is a decentralized file storage and sharing protocol. Unlike traditional servers that store files in one location, IPFS distributes data across a peer-to-peer network, making files more accessible, resilient, and censorship-resistant. It provides an efficient way to store and share files by allowing users to retrieve data from the nearest node on the network.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#3-what-kind-of-documents-can-be-uploaded-on-ipfs","title":"3. What kind of documents can be uploaded on IPFS?","text":"<p>IPFS supports a wide range of document types, including but not limited to:</p> <ul> <li> <p>Documents (e.g., PDFs, Word documents)</p> </li> <li> <p>Images (e.g., JPEG, PNG, SVG)</p> </li> <li> <p>Audio and Video files (e.g., MP3, MP4, WAV)</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#4-why-is-ipfs-difficult-to-access-and-how-does-kalp-studio-make-it-easier","title":"4. Why is IPFS difficult to access, and how does Kalp Studio make it easier?","text":"<p>IPFS can be challenging to access because it requires users to navigate a decentralized, peer-to-peer network. Without centralized servers, users often need specific tools or gateways to retrieve content using Content IDs (CIDs), which may lead to slower or inconsistent access speeds. Additionally, managing CIDs and ensuring content availability across nodes can be complex for end-users.</p> <p>Kalp Studio simplifies this process by providing an intuitive interface and infrastructure that bridges the complexities of IPFS. Through Kalp Studio, users can easily upload, manage, and access files on IPFS without needing in-depth knowledge of the network's technical intricacies. The platform handles CID generation, file organization, and efficient retrieval, making IPFS access seamless and user-friendly.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#5-what-is-the-content-id-cid-generated-after-uploading-a-file-to-ipfs","title":"5. What is the Content ID (CID) generated after uploading a file to IPFS?","text":"<p>A Content ID (CID) is a unique identifier generated for each file or piece of content uploaded to IPFS. This CID is derived from the file's content using cryptographic hashing, ensuring that the CID is unique to the file's exact data. When a file is modified, even slightly, a new CID is generated to reflect the change. This mechanism ensures data integrity and enables users to retrieve the exact version of a file using its CID.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#6-how-do-i-start-using-ks-storage","title":"6. How do I start using KS Storage?","text":"<ul> <li> <p>After logging into Kalp Studio, navigate to KS Storage from the Dashboard under the Our Products section.</p> </li> <li> <p>Click on Get Started to begin.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#7-what-are-the-available-ks-storage-subscription-plans","title":"7. What are the available KS Storage subscription plans?","text":"<ul> <li> <p>Developer Plan: 100 MB free storage.</p> </li> <li> <p>Business Plan: 3 GB storage for $5.00.</p> </li> <li> <p>Enterprises Plan: 10 GB storage for $10.00.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#8-how-do-i-subscribe-to-a-plan","title":"8. How do I subscribe to a plan?","text":"<ul> <li> <p>Go to the Billing section.</p> </li> <li> <p>Choose your desired plan and click on Subscribe.</p> </li> <li> <p>Confirm your selection in the pop-up window.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#9-how-can-i-upgrade-my-subscription-plan","title":"9. How can I upgrade my subscription plan?","text":"<ul> <li> <p>In the Billing section, under Your Subscription, click on Upgrade.</p> </li> <li> <p>Choose a higher-tier plan and confirm the change.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#10-can-i-downgrade-my-plan","title":"10. Can I downgrade my plan?","text":"<ul> <li>Downgrading to a lower plan is not available through the dashboard. For changes, contact Kalp Studio support.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#11-what-is-the-developer-plan","title":"11. What is the Developer Plan?","text":"<p>The Developer Plan offers 100 MB of free storage, ideal for users who want to test or develop on the KS Storage platform.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#12-how-do-i-create-a-bucket-in-ks-storage","title":"12. How do I create a bucket in KS Storage?","text":"<ul> <li> <p>Navigate to the Storage Dashboard.</p> </li> <li> <p>Click on Create a Bucket to begin upload files.</p> </li> <li> <p>Name your bucket and click Create.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#13-what-is-a-bucket-in-ks-storage","title":"13. What is a bucket in KS Storage?","text":"<p>A bucket is a container used to store and upload your files within KS Storage. You can create multiple buckets to manage different types of data.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#14-how-do-i-upload-files-to-a-bucket","title":"14. How do I upload files to a bucket?","text":"<ul> <li> <p>After creating a bucket, click on Upload Files from the Storage Dashboard.</p> </li> <li> <p>Select the files you want to upload, and they will be stored in your chosen bucket.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#15-how-can-i-view-my-current-storage-usage","title":"15. How can I view my current storage usage?","text":"<ul> <li> <p>Your current storage usage can be viewed from the Storage Dashboard.</p> </li> <li> <p>The dashboard displays the storage limit and the amount of storage you have used.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#16-what-happens-when-i-reach-my-storage-limit","title":"16. What happens when I reach my storage limit?","text":"<ul> <li> <p>You will not be able to upload new files once your storage limit is reached.</p> </li> <li> <p>To continue uploading, either delete existing data or upgrade to a plan with a higher storage capacity.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#17-what-are-the-available-payment-options-for-ks-storage-plans","title":"17. What are the available payment options for KS Storage plans?","text":"<p>Payments are processed in credits, which you can manage through the Wallet in Kalp Studio. Ensure you have enough credits for your selected plan.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#18-can-i-cancel-my-subscription","title":"18. Can I cancel my subscription?","text":"<ul> <li> <p>Yes, you can cancel your subscription through the Billing section or by contacting support.</p> </li> <li> <p>Upon cancellation, access to storage and files may be restricted after your current billing period ends.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#19-what-is-the-purpose-of-api-key-generation","title":"19. What is the purpose of API Key Generation?","text":"<p>API Key Generation allows developers to interact with KS Storage programmatically, enabling integration with external applications for file management, uploads, and downloads.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#20-how-do-i-generate-an-api-key","title":"20. How do I generate an API key?","text":"<ul> <li> <p>Go to API Key Generation from the left-hand navigation menu.</p> </li> <li> <p>Click Create API Auth Key, give it a name and description, and the system will generate the API key.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#21-what-permissions-does-an-api-key-provide","title":"21. What permissions does an API key provide?","text":"<p>API keys allow programmatic access to KS Storage, including actions like creating buckets, uploading files, downloading files, and managing storage.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#22-can-i-revoke-an-api-key","title":"22. Can I revoke an API key?","text":"<ul> <li>Yes, API keys can be revoked by going to the API Key Generation section, finding the key you want to disable, and toggling off its status.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#23-how-do-i-share-files-in-ks-storage","title":"23. How do I share files in KS Storage?","text":"<ul> <li>After uploading files to a bucket, you can share them using the Share file API or by generating shareable links within the storage system.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#24-can-i-set-tags-for-my-stored-files","title":"24. Can I set tags for my stored files?","text":"<ul> <li>Yes, you can add tags to files to help organize and categorize them for easier search and retrieval using the Add tags.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#25-how-do-i-delete-a-bucket-or-files-in-ks-storage","title":"25. How do I delete a bucket or files in KS Storage?","text":"<p>To delete a bucket or specific files in KS Storage, navigate to the Storage Buckets section. You can delete individual files by selecting the Delete option next to each file.</p> <p>However, to delete an entire bucket, you must ensure there are at least two buckets in your storage. Files from the bucket you wish to delete need to be moved to another bucket first. Once all files have been transferred and the bucket is empty, you can delete it by selecting the Delete option next to the bucket.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#26-is-there-a-way-to-monitor-storage-activity","title":"26. Is there a way to monitor storage activity?","text":"<ul> <li>Storage activity logs can be monitored through the API. Each action, such as file upload or download, can be logged using the provided API endpoints.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#27-can-i-share-my-storage-buckets-with-other-users","title":"27. Can I share my storage buckets with other users?","text":"<ul> <li> <p>Yes, you can share your storage buckets with others through the Share file API.</p> </li> <li> <p>You can specify permissions for other users when sharing.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#28-how-secure-is-the-data-stored-in-ks-storage","title":"28. How secure is the data stored in KS Storage?","text":"<ul> <li>Data security is a priority for KS Storage. Files are securely stored, and access can be controlled through API keys, with encryption options available for secure data transfer.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#29-what-should-i-do-if-i-need-more-storage-than-available-in-the-current-plans","title":"29. What should I do if I need more storage than available in the current plans?","text":"<ul> <li>If the available plans don\u2019t meet your needs, contact Kalp Studio support to discuss custom storage solutions or higher-tier plans that may be available beyond the standard offers.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#30-what-are-tags-used-for-in-kalp-storage","title":"30. What are tags used for in Kalp Storage?","text":"<p>Tags in Kalp Storage are used to help users organize, categorize, and quickly locate files. When a user adds tags to a file, it enables more efficient searching and filtering within the storage system. Tags can be descriptive keywords or phrases relevant to the content, making it easier for users to identify and access files without needing to search through multiple folders or rely solely on file names.</p>"},{"location":"Products/Kalp-Studio-Storage/FAQ/#31-how-can-a-user-access-a-file-uploaded-on-ipfs","title":"31. How can a user access a file uploaded on IPFS?","text":"<p>Once a file is uploaded to IPFS, it can be accessed through its Content ID (CID). This CID is a unique hash generated during upload, allowing users to retrieve the file directly from the IPFS network.</p> <p>Alternatively, users can access the file using any IPFS desktop or browser-based application by entering the CID, which fetches the content directly from the decentralized network.</p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/","title":"How to get started with kalp storage","text":""},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#how-to-get-started-with-kalp-studio-storage","title":"How to get started with kalp studio storage","text":"<p>Here is a step-by-step user manual guide based on the screenshots provided, illustrating how to use Kalp Studio for KS Storage. Follow these steps in order to navigate through the platform and utilize its features.</p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-1-login-to-your-kalp-studio-account","title":"Step 1: Login to Your Kalp Studio Account","text":"<ol> <li> <p>Go to the Kalp Studio login page.</p> <ul> <li> <p>Enter your credentials (email and password) to log in.</p> </li> <li> <p>Once logged in, you will land on the Kalp studio console  Dashboard.</p> </li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-2-explore-the-ks-storage-product","title":"Step 2: Explore the KS Storage Product","text":"<ol> <li>From the Kalp Studio console Dashboard, find the product section.</li> </ol> <ul> <li> <p>You will see various products listed, including NFT Creator, Token Creator, and KS Storage.</p> </li> <li> <p>Locate KS Storage and click on Get Started.</p> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-3-choose-a-plan","title":"Step 3: Choose a Plan","text":"<ol> <li>Click on Billing from the left-side navigation menu.</li> </ol> <ol> <li> <ul> <li> <p>Here, you will see different subscription plans: Developer Plan, Business Plan, and Enterprises Plan.</p> </li> <li> <p>Select the Free Plan (Developer plan with 100 MB storage) and click Subscribe.</p> </li> </ul> </li> <li> <p>Confirmation: A pop-up will appear asking you to confirm your subscription to the Developer Plan.</p> <ul> <li>Click Subscribe to confirm your selection.</li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-4-view-your-subscription","title":"Step 4: View Your Subscription","text":"<ol> <li> <p>Once subscribed, go to Billing in the left navigation panel.</p> <ul> <li> <p>Here, you can see your active subscription under Your Subscription.</p> </li> <li> <p>Confirm that the KS Storage plan is active, and your subscription start date is displayed.</p> </li> </ul> </li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-5-explore-ks-storage-dashboard","title":"Step 5: Explore KS Storage Dashboard","text":"<ol> <li> <p>Click Explore under the KS Storage section in Your Products.</p> <ul> <li>You will be redirected to the Storage Dashboard.</li> </ul> </li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-6-create-a-bucket","title":"Step 6: Create a Bucket","text":"<ol> <li> <p>From the Storage Dashboard, you will see a button labeled Create a Bucket.</p> <ul> <li> <p>Click Create a Bucket to begin organizing your storage.</p> </li> <li> <p>Buckets are used to store and organize your files.</p> </li> </ul> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-7-upload-files","title":"Step 7: Upload Files","text":"<ol> <li>After creating a bucket, you will have the option to  Upload Files.</li> </ol> <ol> <li> <p>Click on Upload to add files to the created bucket for storage.</p> </li> <li> <p>You can also create new folder inside the bucket.</p> </li> </ol> <p></p> <p></p> <ol> <li>After creating a folder, the folder name will be displayed under the created bucket name.</li> </ol> <p></p> <ol> <li>After creating a folder, you can also upload files inside it and add tags for easier identification.</li> </ol> <p></p> <ol> <li>Click on add to add files inside the folder with tag for identification.</li> </ol> <p></p>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-8-api-key-generation-optional","title":"Step 8: API Key Generation (Optional)","text":"<ol> <li>Generate API Keys if you plan to interact with KS Storage through APIs.</li> </ol> <ol> <li> <ul> <li>Go to API Key Generation from the left navigation menu.</li> </ul> </li> </ol> <ol> <li>Go to API Key Generation from the left navigation menu.</li> </ol> <ol> <li> <ul> <li>Click Create API Auth Key, give it a name and description (for example, \"Neoblock\").</li> </ul> </li> <li> <ul> <li>The API key will be generated and displayed under the list of API keys.</li> </ul> </li> <li> <p>Use your API Key: You can use the API Auth Key to interact with KS Storage from external applications.</p> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-9-managing-buckets","title":"Step 9: Managing Buckets","text":"<ol> <li> <p>Return to the Storage Buckets section to view the list of your created buckets.</p> <ul> <li> <p>You will see information like the bucket name, the number of files, and other details.</p> </li> <li> <p>You can manage the buckets from this section, including adding, deleting, or viewing files.</p> </li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-10-subscription-management","title":"Step 10: Subscription Management","text":"<ol> <li>Under Subscriptions, you can view your active plan, upgrade to a higher plan (such as Business Plan or Enterprises Plan), and view your Purchase History.</li> </ol> <ul> <li>Purchase history will show details such as order ID, purchased plan, and the amount.</li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#step-11-other-functions-related-with-kalp-storage","title":"Step 11 - Other functions related with kalp storage","text":""},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#1-search-by-bucket-name","title":"1. Search by Bucket Name","text":"<ul> <li> <p>Purpose: To quickly locate specific storage buckets within your Kalp Studio storage account, especially useful when managing multiple buckets.</p> </li> <li> <p>Location: The search bar is located underneath the \"Storage Buckets\" section.</p> </li> <li> <p>Steps:</p> <ol> <li> <p>Click on the Search by Bucket Name input field highlighted at the top of the bucket list.</p> </li> <li> <p>Type the name of the bucket you wish to find. As you type, the list will filter to show only the buckets matching your input.</p> </li> <li> <p>To view all buckets again, simply clear the text from the search field.</p> </li> </ol> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#2-search-by-folder-name","title":"2. Search by Folder Name","text":"<ul> <li> <p>Purpose: To specific folders within a selected bucket, making it easier to manage and organize files.</p> </li> <li> <p>Location: Within each bucket, navigate to the \"Folders\" tab to locate the search function.</p> </li> <li> <p>Steps:</p> <ol> <li> <p>Click on a bucket from the bucket list to view its contents.</p> </li> <li> <p>Inside the bucket, switch to the Folders tab.</p> </li> <li> <p>In the search bar at the top of the folder list, type the folder name or a keyword related to the folder you\u2019re looking for.</p> </li> <li> <p>The list will dynamically filter to display only the folders matching your input.</p> </li> <li> <p>Clear the text in the search field to reset the view and see all folders in that bucket.</p> </li> </ol> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#3-date-range-filter-for-buckets-and-folders","title":"3. Date Range Filter for Buckets and Folders","text":"<ul> <li> <p>Purpose: To narrow down searches by the date a bucket or folder was created or last used.</p> </li> <li> <p>Location: Available beside the search bar as a date filter icon.</p> </li> <li> <p>Steps:</p> <ol> <li> <p>Click on the date filter icon next to the search bar.</p> </li> <li> <p>Select the start and end dates for the time range you want to filter.</p> </li> <li> <p>Once dates are selected, only the buckets or folders created or last used within this range will be displayed.</p> </li> <li> <p>To remove the filter, clear the selected date range by clicking \u201cDone\u201d without selecting dates.</p> </li> </ol> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#4-deleting-a-folder-within-a-bucket","title":"4. Deleting a Folder within a Bucket","text":"<ul> <li> <p>Purpose: To remove a specific folder within a bucket along with its contents.</p> </li> <li> <p>Steps:</p> <ol> <li> <p>Click on the bucket containing the folder you want to delete to view its contents.</p> </li> <li> <p>Navigate to the Folders tab.</p> </li> <li> <p>Locate the folder you wish to delete and click the Delete (trash can) icon next to it.</p> </li> <li> <p>A prompt will appear asking if you are sure you want to delete the folder. Click Yes to proceed or Back to cancel.</p> </li> </ol> </li> </ul>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#5-deleting-a-bucket-in-kalp-studio-storage","title":"5. Deleting a Bucket in Kalp Studio Storage","text":"<p>Purpose:</p> <p>This guide explains the process of deleting a bucket in Kalp Studio Storage and how the platform manages files within the deleted bucket by moving them to a specified parent bucket.</p> <p>Steps to Delete a Bucket</p> <ol> <li> <p>Access the Storage Buckets Section:</p> <ul> <li>Log in to your Kalp Studio Storage account and navigate to the Storage Buckets section on the left panel.</li> </ul> </li> </ol> <p></p> <ol> <li> <p>Locate the Bucket to Delete:</p> <ul> <li>Find the bucket you want to delete from the list.</li> <li>Click on the Delete (trash can) icon located to the right of the bucket name.</li> </ul> </li> </ol> <p></p> <ol> <li> <p>Choose a Destination for Files:</p> <ul> <li>If the bucket contains files, a prompt will appear asking you to move the files to a different bucket before deletion.</li> <li>You will see a list of available buckets where the files can be relocated.</li> <li>Select the desired bucket from the list to serve as the new location for the files.</li> </ul> </li> </ol> <p></p> <ol> <li> <p>Confirm Deletion and File Transfer:</p> <ul> <li>After selecting the destination bucket, a confirmation prompt will appear, stating, \u201cAre you sure you want to move files and delete the folder?\u201d</li> <li>Click Yes to confirm both the file transfer and the deletion of the original bucket, or Back if you wish to cancel.</li> </ul> </li> <li> <p>Completion:</p> <ul> <li>The files from the deleted bucket will be moved to the selected parent bucket, and the original bucket will be permanently deleted.</li> <li>Verify that the files have been successfully transferred to the destination bucket by checking its contents.</li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#6-remove-tags","title":"6. Remove tags","text":"<p>Purpose:</p> <p>Tags are used to categorize and organize files, making them easier to locate. This guide will help you remove a tag from a file if it\u2019s no longer relevant or needed.</p> <p>Steps to Remove a Tag from a File</p> <ol> <li> <p>Navigate to the File:</p> <ul> <li> <p>Go to the Storage Buckets section.</p> </li> <li> <p>Select the bucket and folder containing the file from which you want to remove a tag.</p> </li> </ul> </li> </ol> <p></p> <ol> <li> <p>Locate the Tag Option:</p> <ul> <li> <p>Find the file in the list and look for the Tag column.</p> </li> <li> <p>Click on the Tag icon (pencil/edit icon) next to the current tag(s) to open the tag editing window.</p> </li> </ul> </li> <li> <p>Remove the Tag</p> <ul> <li> <p>In the Edit Tag window, you\u2019ll see the list of tags applied to the file.</p> </li> <li> <p>Click on the \u201cX\u201d next to the tag you wish to remove.</p> </li> </ul> </li> </ol> <p></p> <ol> <li> <ul> <li>The tag will be removed from the tag field.</li> </ul> </li> <li> <p>Save Changes:</p> <ul> <li> <p>Click the Add button to save your changes.</p> </li> <li> <p>The selected tag is now removed from the file.</p> </li> </ul> </li> <li> <p>Confirmation:</p> <ul> <li>Verify that the tag has been successfully removed by checking the Tag column for the file.</li> </ul> </li> </ol>"},{"location":"Products/Kalp-Studio-Storage/How-to-get-started-with-kalp-studio-storage/#conclusion","title":"Conclusion","text":"<p>Kalp Studio's KS Storage offers a streamlined and user-friendly storage management solution, integrating essential features like bucket creation, file organization, tagging, and API connectivity. Designed with ease of use in mind, it enables users to create storage buckets, upload files, and categorize content effectively with folders and tags. The platform\u2019s organized navigation system and straightforward subscription plans allow users to tailor their storage needs efficiently, with flexible options from free to enterprise levels.</p> <p>Through intuitive search and filter capabilities, KS Storage simplifies locating specific content within buckets and folders, and provides quick management actions such as deleting buckets, folders, or individual files, ensuring that users maintain control over their stored content. The API Key Generation option allows developers to integrate KS Storage with external applications, broadening its utility across platforms.</p> <p>Overall, KS Storage within Kalp Studio is a robust, adaptable storage solution that empowers users with a comprehensive toolkit for managing and scaling their digital content, making it an invaluable asset for businesses and developers in decentralized application ecosystems.</p>"},{"location":"Products/Kalp-Studio-Storage/IPFS-OpenAPI-Documentation/","title":"IPFS OpenAPI Documentation","text":"<ul> <li> <p> IPFS API Documentation</p> <p> Check API Reference</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/","title":"How to add user to addresslist","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#how-to-add-user-to-address-list","title":"How To Add User To Address List","text":"<p>To add user to the address list in the Kalp Wallet extension, follow these steps:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#step-1-open-kalp-wallet-extension","title":"Step 1: Open Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#step-2-navigate-to-the-address-book","title":"Step 2: Navigate to the Address Book","text":"<ol> <li> <p>On the wallet's main interface, look for the profile icon.</p> </li> <li> <p>Select \"Address Book\" from the options.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#step-3-add-a-new-address","title":"Step 3: Add a New Address","text":"<ol> <li> <p>In the Address Book, click the \"Add Recipient\" or \"+\" button to create a new entry.</p> </li> <li> <p>A form will appear where you can input the user's details.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#step-4-enter-user-details","title":"Step 4: Enter User Details","text":"<ol> <li> <p>Fill in the fields provided:</p> </li> <li> <p>Wallet Address: Input the user's wallet address accurately. Double-check to avoid errors.</p> </li> <li> <p>NickName: Enter the contact's name for easy identification (e.g., \"John Doe\")</p> </li> <li> <p>Click on Add Member.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#step-6-verify-the-entry","title":"Step 6: Verify the Entry","text":"<ol> <li> <p>Review the Address Book to ensure the user's details are listed correctly.</p> </li> <li> <p>Test the entry by attempting a mock transaction (without confirming) to confirm the wallet recognizes the address.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-add-user-to-addresslist/#tips","title":"Tips:","text":"<ul> <li> <p>Use meaningful names or labels for easy identification.</p> </li> <li> <p>Always double-check wallet addresses before saving to avoid sending tokens to the wrong address.</p> </li> <li> <p>Regularly update your Address Book to keep it organized and relevant.</p> </li> </ul> <p>By following these steps, you can efficiently manage and add user details to the Address Book in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/","title":"How to change Password","text":"<p>To change the password in the Kalp Wallet extension, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your current password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-2-access-the-settings-menu","title":"Step 2: Access the Settings Menu","text":"<ol> <li> <p>Once inside the wallet, locate the Settings option.</p> </li> <li> <p>This is typically represented in the profile icon.</p> </li> <li> <p>Click on Settings to open the configuration options.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-3-navigate-to-the-change-password-section","title":"Step 3: Navigate to the Change Password Section","text":"<ol> <li> <p>In the settings menu, look for a section labeled \"Change Password\".</p> </li> <li> <p>Click on it to access the password-related options.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-4-enter-the-current-password","title":"Step 4: Enter the Current Password","text":"<ol> <li> <p>Enter your current password in the designated field to verify your identity.</p> </li> <li> <p>Enter your new password in the provided field.</p> </li> <li> <p>Ensure it is strong and secure, combining uppercase and lowercase letters, numbers, and special characters.</p> </li> <li> <p>Confirm the new password by re-entering it in the confirmation field.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-5-save-the-changes","title":"Step 5: Save the Changes","text":"<ol> <li> <p>Click on the Save or Update Password button to finalize the change.</p> </li> <li> <p>The wallet will confirm that your password has been updated successfully.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#step-6-test-the-new-password","title":"Step 6: Test the New Password","text":"<ol> <li> <p>Lock the wallet by logging out or closing the extension.</p> </li> <li> <p>Reopen the Kalp Wallet and log in using the new password to ensure it works.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-change-password/#tips-for-password-security","title":"Tips for Password Security:","text":"<ul> <li> <p>Use a unique password that you haven\u2019t used elsewhere.</p> </li> <li> <p>Avoid sharing your password with anyone.</p> </li> <li> <p>Store your password securely, either in a password manager or a safe offline location.</p> </li> </ul> <p>By following these steps, you can easily and securely update your password in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/","title":"How to connect Dapp","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#how-to-connect-dapp","title":"How To Connect Dapp","text":"<p>To connect a DApp (Decentralized Application) to the Kalp Wallet extension, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Unlock the wallet using your password or authentication method.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-2-navigate-to-the-dapp","title":"Step 2: Navigate to the DApp","text":"<ol> <li> <p>Open the browser and visit the website of the DApp you want to connect to.</p> </li> <li> <p>Ensure that the DApp is compatible with the Kalp Wallet (supports Kalp Chain or Ethereum-compatible networks).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-3-initiate-the-connection","title":"Step 3: Initiate the Connection","text":"<ol> <li> <p>Look for a \"Connect Wallet\" button on the DApp's interface, usually located in the top-right corner.</p> </li> <li> <p>Click on the button, and a list of wallet options will appear.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-4-select-kalp-wallet","title":"Step 4: Select Kalp Wallet","text":"<ol> <li> <p>Choose \"Kalp Wallet\" from the list of wallets.</p> <ul> <li>If \"Kalp Wallet\" is not listed explicitly, select an option like \"MetaMask\" or \"WalletConnect\" if the wallet supports similar protocols.</li> </ul> </li> <li> <p>The Kalp Wallet extension will automatically open or prompt for connection approval.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-5-approve-the-connection","title":"Step 5: Approve the Connection","text":"<ol> <li> <p>A pop-up in the Kalp Wallet extension will ask for your permission to connect to the DApp.</p> </li> <li> <p>Review the details, including:</p> </li> <li> <p>The DApp's URL.</p> </li> <li> <p>The requested permissions.</p> </li> <li> <p>Click \"Approve\" or \"Connect\" to allow access.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-6-verify-the-connection","title":"Step 6: Verify the Connection","text":"<ol> <li> <p>Once connected, the DApp will display your wallet address in its interface, indicating a successful connection.</p> </li> <li> <p>Check your Kalp Wallet extension to ensure the DApp is listed under the connected sites.</p> </li> <li> <p>Click on profile icon</p> </li> <li> <p>Click on settings option</p> </li> <li> <p>Click on Connected Dapps section</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#step-7-interact-with-the-dapp","title":"Step 7: Interact with the DApp","text":"<ol> <li> <p>You can now use the features of the DApp, such as:</p> </li> <li> <p>Viewing balances.</p> </li> <li> <p>Signing transactions.</p> </li> <li> <p>Interacting with smart contracts.</p> </li> <li> <p>Each transaction or action will prompt a confirmation in the Kalp Wallet extension. Review and approve transactions carefully.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-connect-Dapp/#tips","title":"Tips:","text":"<ul> <li> <p>Switch Network: Ensure the wallet is on the correct blockchain network (e.g., Kalp Chain) if the DApp requires it. The DApp may prompt a network switch if needed.</p> </li> <li> <p>Security: Only connect to trusted DApps to protect your wallet and funds.</p> </li> <li> <p>Gas Fees: Keep sufficient GINI tokens for transaction fees when using the DApp.</p> </li> </ul> <p>By following these steps, you can seamlessly connect a DApp to the Kalp Wallet extension and utilize its features securely.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-create-new-wallet/","title":"How to create new wallet","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-create-new-wallet/#how-to-create-a-new-wallet","title":"How to Create a New Wallet?","text":"<p>The Kalp Wallet Extension is a secure and user-friendly gateway to the Kalp blockchain ecosystem, designed to simplify your Web3 experience. Effortlessly manage digital assets, interact with decentralized applications, and perform cross-chain transactions with ease. Built with robust security features and optimized for Kalp blockchain compliance, the Kalp Wallet Extension ensures a smooth, efficient, and trustworthy experience for users exploring the decentralized world.</p> <p>Step 1: Installing the Kalp Wallet Extension</p> <ol> <li> <p>Visit the Official Kalp Wallet Page:     Searched for the Kalp Wallet extension on their browser's web store (Chrome Web Store or equivalent).</p> </li> <li> <p>Download and Install:     \u201cAdd to Browser\u201d and installed the extension successfully.</p> </li> </ol> <p>Once installed, the Kalp Wallet icon appeared in the browser toolbar, ready to launch.</p> <p>Step 2: Launching the Kalp Wallet Extension</p> <ol> <li> <p>Open the Extension:     Click on the Kalp Wallet icon, which opens the welcome screen with options to either create a new wallet or import an existing one.</p> </li> <li> <p>Select \"Create a New Wallet\":     Chose the \"Create a New Wallet\" option to begin the setup process.</p> </li> </ol> <p></p> <p>Step 3: Setting Up the Wallet</p> <ol> <li>Create a Strong Password:     The first step is to set a password for accessing the wallet. Ensure the password is strong, combining uppercase letters, numbers, and special characters.</li> </ol> <p></p> <p></p> <ol> <li>Backup Seed Phrase:     After setting a password, Kalp Wallet displays a 12-word seed phrase. Carefully write down the seed phrase on paper and store it in a secure location, understanding its importance for wallet recovery.</li> </ol> <p></p> <p>Pro Tip: Never share the seed phrase with anyone or store it digitally to avoid unauthorized access.</p> <ol> <li>Verify the Seed Phrase:     To complete the process, verify the seed phrase by selecting the words in the correct order. This step ensures you have backed it up correctly.</li> </ol> <p></p> <p></p> <p>Step 4: Accessing the Wallet</p> <p>With the setup complete, it redirects to the main wallet interface:</p> <ul> <li>Dashboard Overview:     You can now view the wallet address, current balance, and transaction history.</li> </ul> <p></p> <ul> <li>Wallet Features:     The interface includes options to send, receive, and manage tokens, as well as connect to Dapps on the Kalp blockchain.</li> </ul> <p>Set up your own wallet today, Happy Exploring!</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-import-tokens/","title":"How to import tokens","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-import-tokens/#how-to-import-tokens","title":"How to Import Tokens?","text":"<p>Importing tokens into your Kalp Wallet allows you to view and manage additional assets within the wallet. Follow the steps below to easily add tokens to your Kalp Wallet.</p> <p>Step 1: Open the Kalp Wallet Extension</p> <ol> <li> <p>Launch your browser and click the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your wallet password if prompted to unlock the wallet.</p> </li> </ol> <p>Step 2: Go to the \"Import Tokens\" Section</p> <ol> <li>On the Kalp Wallet dashboard, locate and click the \"Import Tokens\" .</li> </ol> <p></p> <p>Step 3: Search for the Token</p> <ol> <li>Use the Search Bar to find the token by name or symbol if it is a popular token already listed in the Kalp ecosystem.</li> </ol> <p></p> <ol> <li>Select the token from the search results and click Import.</li> </ol> <p>Step 4: Add a Custom Token (If Not Found)</p> <p>If the token is not listed, you can manually add it using the following details:</p> <ol> <li> <p>Obtain Token Information:</p> </li> <li> <p>Contract Address: Get the token's smart contract address from a trusted source like the official project website or blockchain explorer.</p> </li> <li> <p>Token Symbol: The ticker for the token (e.g., GINI, KALP).</p> </li> <li> <p>Decimals of Precision: The number of decimal places the token uses (e.g., 18).</p> </li> </ol> <p></p> <ol> <li> <p>Input Token Details:</p> </li> <li> <p>Paste the Contract Address into the provided field.</p> </li> <li> <p>Enter the Token Symbol and Decimals in their respective fields.</p> </li> <li> <p>Click Add Token or Import to proceed.</p> </li> </ol> <p></p> <p></p> <p>Step 5: Verify the Token</p> <ol> <li> <p>After importing, the token should appear in the Assets or Balance section of your Kalp Wallet.</p> </li> <li> <p>Confirm the token name, symbol, and balance to ensure everything is correct.</p> </li> </ol> <p></p> <p>Step 6: Manage Your Imported Tokens</p> <ol> <li> <p>Use the tokens for transactions, staking, or interacting with decentralized applications (Dapps).</p> </li> <li> <p>Monitor token activity in the transaction history of your wallet.</p> </li> </ol> <p>Tips for Safe Token Importing</p> <ul> <li> <p>Double-Check the Contract Address: Ensure the smart contract address is accurate and obtained from a trusted source.</p> </li> <li> <p>Beware of Scams: Avoid importing tokens from unverified or suspicious sources.</p> </li> <li> <p>Keep the Wallet Updated: Regular updates ensure compatibility with new tokens and features.</p> </li> </ul> <p>With these steps, you can easily import and manage tokens in your Kalp Wallet, unlocking access to more digital assets in the Kalp ecosystem.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-import-wallet/","title":"How to import wallet","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-import-wallet/#how-to-import-a-wallet","title":"How to Import a Wallet?","text":"<p>Importing your Kalp Wallet into the Kalp Wallet Extension is a simple process. Follow the steps below to securely access your existing wallet:</p> <p>Step 1: Install the Kalp Wallet Extension</p> <ol> <li> <p>Go to the official browser extension store (e.g., Chrome Web Store, Firefox Add-ons).</p> </li> <li> <p>Search for Kalp Wallet Extension.</p> </li> <li> <p>Click Add to Browser or Install to set it up.</p> </li> </ol> <p>Step 2: Launch the Extension</p> <ol> <li> <p>Open your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>If this is your first time using the wallet, you\u2019ll be prompted with two options:</p> </li> <li> <p>Create a New Wallet</p> </li> <li> <p>Import an Existing Wallet</p> </li> </ol> <p></p> <p>Step 3: Select \"Import Wallet\"</p> <ol> <li>Click on the Import Wallet option to start the process.</li> </ol> <p></p> <p>Step 4: Enter Your Secret Recovery Phrase</p> <ol> <li> <p>If you have a Secret Recovery Phrase (Seed Phrase):</p> </li> <li> <p>Enter the 12-word phrase in the given input box.</p> </li> <li> <p>Ensure there are no typos and maintain the correct order of words.</p> </li> </ol> <p></p> <p>Step 5: Set a New Wallet Password</p> <ol> <li>Create a strong and unique password to secure your wallet on the device.</li> </ol> <p></p> <ol> <li> <p>Confirm the password by re-entering it.</p> </li> <li> <p>Click Continue or Import Wallet.</p> </li> </ol> <p></p> <p>Step 6: Verify the Import</p> <ol> <li> <p>Once imported, your wallet's balance, transaction history, and assets should appear in the extension.</p> </li> <li> <p>Check that everything is correct and accessible.</p> </li> </ol> <p></p> <p>Step 7: Secure Your Wallet</p> <ol> <li> <p>Store your recovery phrase in a safe, offline location (e.g., a hardware wallet, paper backup).</p> </li> <li> <p>Avoid sharing your recovery phrase or private key with anyone to prevent unauthorized access.</p> </li> </ol> <p>Tips for a Smooth Import Process</p> <ul> <li> <p>Double-Check Inputs: Ensure your recovery phrase is accurate.</p> </li> <li> <p>Stay Connected: Verify your internet connection for seamless syncing.</p> </li> <li> <p>Use the Official Extension: Always download the Kalp Wallet Extension from trusted sources to avoid phishing attempts.</p> </li> </ul> <p>Congratulations! You've successfully imported your Kalp Wallet and can now manage your digital assets securely on the Kalp blockchain.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/","title":"How to reset password","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#how-to-reset-password","title":"How To reset Password","text":"<p>To reset the password in the Kalp Wallet extension, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your current password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-2-access-the-settings-menu","title":"Step 2: Access the Settings Menu","text":"<ol> <li> <p>Once inside the wallet, locate the Settings option.</p> </li> <li> <p>This is typically represented in the profile icon.</p> </li> <li> <p>Click on Settings to open the configuration options.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-3-navigate-to-the-change-password-section","title":"Step 3: Navigate to the Change Password Section","text":"<ol> <li> <p>In the settings menu, look for a section labeled \"Change Password\".</p> </li> <li> <p>Click on it to access the password-related options.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-4-enter-the-current-password","title":"Step 4: Enter the Current Password","text":"<ol> <li> <p>Enter your current password in the designated field to verify your identity.</p> </li> <li> <p>Enter your new password in the provided field.</p> </li> <li> <p>Ensure it is strong and secure, combining uppercase and lowercase letters, numbers, and special characters.</p> </li> <li> <p>Confirm the new password by re-entering it in the confirmation field.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-5-save-the-changes","title":"Step 5: Save the Changes","text":"<ol> <li> <p>Click on the Save or Update Password button to finalize the change.</p> </li> <li> <p>The wallet will confirm that your password has been updated successfully.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#step-6-test-the-new-password","title":"Step 6: Test the New Password","text":"<ol> <li> <p>Lock the wallet by logging out or closing the extension.</p> </li> <li> <p>Reopen the Kalp Wallet and log in using the new password to ensure it works.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-reset-password/#tips-for-password-security","title":"Tips for Password Security:","text":"<ul> <li> <p>Use a unique password that you haven\u2019t used elsewhere.</p> </li> <li> <p>Avoid sharing your password with anyone.</p> </li> <li> <p>Store your password securely, either in a password manager or a safe offline location.</p> </li> </ul> <p>By following these steps, you can easily and securely update your password in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/","title":"How to search Token","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#how-to-search-token","title":"How to Search Token?","text":"<p>To search for a token on the Kalp Wallet extension, follow these steps:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet extension icon in the toolbar.</p> </li> <li> <p>Enter your password to unlock the wallet, if prompted.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#step-2-navigate-to-the-import-tokens-section","title":"Step 2: Navigate to the \"Import Tokens\" Section","text":"<ol> <li> <p>Once the wallet is open, look for a tab or button labeled \"Import Tokens\" on the main dashboard.</p> </li> <li> <p>Click on this section to view your current token holdings.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#step-3-use-the-search-function","title":"Step 3: Use the Search Function","text":"<ol> <li> <p>At the top of the \"Tokens\" section, locate the search bar.</p> </li> <li> <p>Click inside the search bar and type the name or contract address of the token you are looking for.</p> <ul> <li> <p>Ensure the token is on the same blockchain network as your wallet (e.g., Kalp Chain or Ethereum-compatible chain).</p> </li> <li> <p>If the token doesn't appear, proceed to add it manually.</p> </li> </ul> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#step-4-manually-add-a-token-if-needed","title":"Step 4: Manually Add a Token (If Needed)","text":"<p>If the token isn\u2019t listed:</p> <ol> <li> <p>Look for an \"Add Token\" button (usually at the bottom of the \"Tokens\" section).</p> </li> <li> <p>Enter the token contract address, symbol, and decimal value:</p> <ul> <li> <p>Token Contract Address: Obtain this from the official website or trusted sources.</p> </li> <li> <p>Token Symbol: For example, \"ABC.\"</p> </li> <li> <p>Decimals: Typically provided with the token details (e.g., \"18\").</p> </li> </ul> </li> <li> <p>Click Add or Save to finalize.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#step-5-verify-the-token","title":"Step 5: Verify the Token","text":"<ol> <li> <p>Once added, the token should appear in your list of assets.</p> </li> <li> <p>Check the balance and details to ensure everything is accurate.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-search-token/#tips","title":"Tips","text":"<ul> <li> <p>Ensure you are connected to the correct network in Kalp Wallet.</p> </li> <li> <p>Be cautious with contract addresses; use only trusted sources to avoid scams.</p> </li> <li> <p>If the token still doesn't appear, check if the Kalp Wallet supports it or contact support.</p> </li> </ul> <p>By following these steps, you can easily search for and add tokens in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/","title":"How to see transactions","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/#how-to-see-transactions","title":"How to See Transactions?","text":"<p>To see the transactions in the Kalp Wallet extension, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your current password to unlock the wallet.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/#step-2-access-the-transaction-section","title":"Step 2: Access the Transaction section","text":"<ol> <li> <p>Once inside the wallet, locate the transaction history option.</p> <ul> <li>This is typically represented by a timer icon.</li> </ul> </li> <li> <p>Click on timer icon to open the list of transactions done.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/#step-4-review-the-transaction-list","title":"Step 4: Review the Transaction List","text":"<ol> <li> <p>You will see a list of your recent transactions. Each entry typically includes:</p> <ul> <li> <p>Date and time of the transaction.</p> </li> <li> <p>Type of transaction (e.g., send, receive, or contract interaction).</p> </li> <li> <p>Amount of tokens transferred.</p> </li> <li> <p>Recipient or sender address.</p> </li> <li> <p>Transaction status (e.g., pending, confirmed, or failed).</p> </li> </ul> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-see-transactions/#tips","title":"Tips:","text":"<ul> <li> <p>Ensure your wallet is on the correct network (e.g., Kalp Chain) to view transactions associated with that chain.</p> </li> <li> <p>If transactions are not showing up, refresh the wallet or ensure you have an active internet connection.</p> </li> </ul> <p>By following these steps, you can easily access and review your transaction history in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/","title":"How to send Token","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#how-to-send-a-token","title":"How to Send a Token?","text":"<p>To send tokens using the Kalp Wallet extension, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-1-open-kalp-wallet-extension","title":"Step 1: Open Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in your toolbar.</p> </li> <li> <p>Enter your password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-2-select-the-token","title":"Step 2: Select the Token","text":"<ol> <li> <p>On the wallet's dashboard, navigate to the \"Tokens\" or \"Assets\" section.</p> </li> <li> <p>Click on the token you wish to send.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-3-initiate-the-transfer","title":"Step 3: Initiate the Transfer","text":"<ol> <li> <p>Within the token's details page, locate and click the \"Send\" button.</p> </li> <li> <p>A transfer form will appear.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-4-enter-the-recipients-address","title":"Step 4: Enter the Recipient's Address","text":"<ol> <li> <p>In the \"Recipient Address\" field, input the wallet address of the recipient.</p> </li> <li> <p>Double-check the address to ensure accuracy.</p> </li> <li> <p>Ensure the recipient's wallet is compatible with the token's blockchain network (e.g., Kalp Chain or Ethereum-compatible chain).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-5-specify-the-amount","title":"Step 5: Specify the Amount","text":"<ol> <li> <p>In the \"Amount\" field, enter the number of tokens you want to send.</p> </li> <li> <p>Ensure you have sufficient token balance to cover the transfer and any transaction fees (e.g., GINI tokens on Kalp Chain).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-6-review-and-confirm","title":"Step 6: Review and Confirm","text":"<ol> <li> <p>Click on \"Next\" or \"Review\" to see a summary of your transaction.</p> </li> <li> <p>Verify the recipient address, token type, and transfer amount.</p> </li> <li> <p>Confirm the estimated gas fees (if applicable).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-7-approve-the-transaction","title":"Step 7: Approve the Transaction","text":"<ol> <li> <p>Click \"Send\" to authorize the transaction.</p> </li> <li> <p>If prompted, enter your wallet password or authenticate using your preferred method.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-8-wait-for-transaction-confirmation","title":"Step 8: Wait for Transaction Confirmation","text":"<ol> <li> <p>The wallet will show a notification once the transaction is submitted.</p> </li> <li> <p>Check the transaction status on the wallet dashboard or the blockchain explorer linked to the token's network.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#step-9-verify-the-transaction","title":"Step 9: Verify the Transaction","text":"<ol> <li> <p>Once confirmed, go to the \"Transaction History\" or \"Activity\" tab in Kalp Wallet.</p> </li> <li> <p>Verify that the transaction has been successfully completed.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-send-token/#tips","title":"Tips:","text":"<ul> <li> <p>Always double-check recipient addresses to avoid errors.</p> </li> <li> <p>Ensure you have enough tokens for gas/transaction fees.</p> </li> <li> <p>For larger transfers, consider sending a small test transaction first.</p> </li> </ul> <p>By following these steps, you can easily and securely send tokens using the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-view-seedphrase/","title":"How to view seedphrase","text":""},{"location":"Products/Kalp-Wallet-Extension/How-to-view-seedphrase/#how-to-view-a-seedphrase","title":"How to View a SeedPhrase?","text":"<p>To view a seed phrase, follow the steps given below. Ensure you are in a secure and private location before proceeding, as exposing your seed phrase can compromise your wallet's.</p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-view-seedphrase/#step-1-open-the-kalp-wallet-extension","title":"Step 1: Open the Kalp Wallet Extension","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Unlock the wallet using your password or authentication method.</p> </li> </ol> <p>Step 2: Navigate to the Profile icon</p> <ol> <li> <p>Click on the profile icon</p> </li> <li> <p>Click on Settings</p> </li> <li> <p>Select the option View Seed Phrase</p> </li> </ol> <p></p> <p></p> <p></p> <p>Step 3: View Seed phrase</p> <ul> <li> <p>Wallet will ask for a login credentials. Verify by entering your login password.</p> </li> <li> <p>The wallet will display your seed phrase on the screen.</p> </li> <li> <p>Write it down carefully on paper and store it in a safe place. Do not save it digitally to prevent hacking.</p> </li> </ul> <p></p>"},{"location":"Products/Kalp-Wallet-Extension/How-to-view-seedphrase/#step-6-exit-securely","title":"Step 6: Exit Securely","text":"<ol> <li> <p>Once you have noted the seed phrase, close the seed phrase screen.</p> <ol> <li>Ensure you log out of your wallet and avoid sharing the phrase with anyone.</li> </ol> </li> </ol>"},{"location":"Products/Kalp-Wallet-Extension/How-to-view-seedphrase/#important-notes","title":"Important Notes:","text":"<ul> <li> <p>Never share your seed phrase with anyone, even if they claim to be from support. This is a sensitive piece of information that gives full access to your wallet.</p> </li> <li> <p>Store the seed phrase in a secure, offline location (e.g., a safe or a secure document).</p> </li> <li> <p>If you lose your seed phrase, you may lose access to your funds permanently.</p> </li> </ul> <p>By following these steps, you can securely view and manage your seed phrase in the Kalp Wallet extension.</p>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/","title":"Create a new wallet","text":""},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#how-to-create-a-new-wallet","title":"How to Create a New Wallet?","text":"<p>Creating a new digital wallet is an essential process for securely managing your digital assets. In this guide, we'll walk you through the steps to set up a new wallet using the Kalp Wallet interface. Follow these instructions to create a new wallet and start managing your assets.</p>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-1-start-the-wallet-setup","title":"Step 1: Start the Wallet Setup","text":"<ul> <li> <p>Launch the Kalp Wallet App: Upon opening the app, you'll be greeted with the \"Wallet Setup\" screen.</p> </li> <li> <p>Options Available: You can either create a new wallet or import an existing one. Since we're focusing on creating a new wallet, tap on the \"Create A New Wallet\" button.</p> </li> </ul> <p></p> <ul> <li>Click on \u201cCreate A New Wallet\u201d Option.</li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-2-create-a-password","title":"Step 2: Create a Password","text":"<ul> <li> <p>Password Setup: On the next screen, you'll be prompted to create a password that will unlock your wallet on your device.</p> </li> <li> <p>Password Criteria: The app requires you to create a strong password that meets specific criteria, including lowercase and uppercase letters, a special character, a digit, and a length between 8-20 characters.</p> </li> <li> <p>Biometric Unlock: There's an option to enable biometric unlock (such as fingerprint or face recognition) for easier access to your wallet. Toggle the switch to enable this feature if you prefer.</p> </li> <li> <p>Finalize Password: Once you've entered and confirmed your password, tap on \"Create Password\" to proceed.</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-3-verify-your-password","title":"Step 3: Verify Your Password","text":"<ul> <li>Password Confirmation: If your password meets all the necessary criteria, you\u2019ll proceed to the next step. If there's an issue, such as mismatched passwords, you'll be prompted to correct it.</li> </ul> <p>Unlock with biometric will only appear if the device supports biometrics.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-4-seed-phrase-introduction","title":"Step 4: Seed Phrase Introduction","text":"<ul> <li>Seed Phrase Explanation: The app will now introduce you to the concept of a seed phrase. This phrase is critical for recovering your wallet if you ever lose access to your device.</li> </ul> <ul> <li>Proceed to Seed Phrase: Tap \"Continue\" to move to the next screen where your seed phrase will be displayed.</li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-5-write-down-your-seed-phrase","title":"Step 5: Write Down Your Seed Phrase","text":"<ul> <li> <p>Reveal and Note Down: On this screen, you\u2019ll see your seed phrase. Tap on the area that says \"Tap to reveal your seed phrase.\"</p> </li> <li> <p>Security Reminder: Write down the seed phrase on a piece of paper and keep it in a safe place. Do not share it with anyone or store it digitally to avoid security risks.</p> </li> <li> <p>Confirmation: After you've written down the seed phrase, tap \"I have saved it\" to continue.</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-6-confirm-your-seed-phrase","title":"Step 6: Confirm Your Seed Phrase","text":"<ul> <li> <p>Seed Phrase Verification: The app will now ask you to confirm your seed phrase by entering specific words from the sequence in the correct order.</p> </li> <li> <p>Complete Verification: Select the correct words as prompted to confirm your seed phrase.</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#step-7-wallet-created","title":"Step 7: Wallet Created","text":"<ul> <li> <p>Wallet Dashboard: Once your seed phrase is confirmed, your wallet is successfully created. You\u2019ll be taken to the main wallet dashboard where you can view your balance, manage transactions, and explore other wallet features.</p> </li> <li> <p>Test Net Mode: The wallet is initially set to Test Net mode for practice transactions. You can switch to the main network when you're ready.</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/Create-a-new-wallet/#conclusion","title":"Conclusion","text":"<p>Setting up your Kalp Wallet is a straightforward process, but it's crucial to follow each step carefully, especially when handling your seed phrase. Your seed phrase is the key to your wallet's security, so keep it safe. With your new wallet set up, you can now securely manage your digital assets with confidence.</p> <p>If you need to access or restore your wallet in the future, you'll use the seed phrase, so ensure it's stored securely. Enjoy your new wallet and explore the features offered by Kalp Wallet!</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/","title":"How can I view seed phrase","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#how-can-i-view-seedphrase","title":"How Can I View SeedPhrase?","text":"<p>Your seed phrase is the key to your cryptocurrency. It's a series of words that allows you to recover access to your wallet if you lose your device or forget your password. This article will guide you through the process of viewing your seed phrase in the Kalp Wallet app. It's critically important to remember that your seed phrase should be kept absolutely secret and secure. Never share it with anyone.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-1-open-kalp-wallet","title":"Step 1: Open Kalp Wallet","text":"<p>Launch the Kalp Wallet application on your mobile device.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-2-access-settings","title":"Step 2: Access Settings","text":"<p>Navigate to the settings menu.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-3-locate-view-seed-phrase","title":"Step 3: Locate \"View Seed Phrase\"","text":"<p>Within the Settings menu, find and select the option labelled \"View Seed Phrase.\"</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-4-authentication","title":"Step 4: Authentication","text":"<p>The app will require you to authenticate your identity to protect your seed phrase. You might have the option to use biometric authentication (fingerprint) or enter your password. Choose the appropriate method and proceed</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-5-view-and-record-your-seed-phrase","title":"Step 5: View and Record Your Seed Phrase","text":"<p>Once authenticated, the app will display your seed phrase. This will be a list of words, often twelve. Carefully write down each word in order on paper. Do not take a screenshot or digitally store it. Your seed phrase is extremely sensitive information, and this crucial step prevents loss of access to your funds.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-can-I-view-Seed-Phrase/#step-6-store-your-seed-phrase-securely","title":"Step 6: Store Your Seed Phrase Securely","text":"<p>Keep your written seed phrase in a safe, secure, and private location, away from any potential risks.</p> <p>Viewing your seed phrase is a crucial process for maintaining control over your cryptocurrency assets. By carefully following these steps and prioritizing security, you can ensure that you can regain access to your wallet if necessary.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/","title":"How to add users to the address list","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#how-to-add-users-to-the-address-list","title":"How to Add Users to the Address List?","text":"<p>To add user to the address list in the Kalp Wallet Application, follow these steps:</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#step-1-open-kalp-wallet","title":"Step 1: Open Kalp Wallet","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in the toolbar.</p> </li> <li> <p>Enter your password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#step-2-navigate-to-the-address-book","title":"Step 2: Navigate to the Address Book","text":"<ol> <li> <p>On the wallet's main interface, look for the profile icon.</p> </li> <li> <p>Select \"Address Book\" from the options.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#step-3-add-a-new-address","title":"Step 3: Add a New Address","text":"<ol> <li> <p>In the Address Book, click the \"Add Recipient\" or \"+\" button to create a new entry.</p> </li> <li> <p>A form will appear where you can input the user's details.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#step-4-enter-user-details","title":"Step 4: Enter User Details","text":"<ol> <li> <p>Fill in the fields provided:</p> </li> <li> <p>Wallet Address: Input the user's wallet address accurately. Double-check to avoid errors.</p> </li> <li> <p>NickName: Enter the contact's name for easy identification.</p> </li> <li> <p>Click on Add Member.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#step-6-verify-the-entry","title":"Step 6: Verify the Entry","text":"<ol> <li> <p>Review the Address Book to ensure the user's details are listed correctly.</p> </li> <li> <p>Test the entry by attempting a mock transaction (without confirming) to confirm the wallet recognizes the address.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-add-users-to-the-address-list/#tips","title":"Tips:","text":"<ul> <li> <p>Use meaningful names or labels for easy identification.</p> </li> <li> <p>Always double-check wallet addresses before saving to avoid sending tokens to the wrong address.</p> </li> <li> <p>Regularly update your Address Book to keep it organized and relevant.</p> </li> </ul> <p>By following these steps, you can efficiently manage and add user details to the Address Book in the Kalp Wallet Application.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/","title":"How to change Password","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#how-to-change-password","title":"How to Change Password?","text":"<p>Kalp Wallet is a digital wallet for managing your cryptocurrencies. Security is paramount, and regularly changing your password is a crucial step in protecting your assets. This guide will walk you through the simple process of changing your Kalp Wallet password on your mobile device.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-1-access-the-settings-menu","title":"Step 1: Access the Settings Menu","text":"<p>Open your Kalp Wallet app. Navigate to the settings menu.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-2-locate-the-password-change-option","title":"Step 2: Locate the Password Change Option","text":"<p>Within the Settings menu, find the \"Security &amp; Privacy\" section. Under this, you'll see the option to \"Change Password.\" Tap on this option.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-3-enter-your-current-password","title":"Step 3: Enter Your Current Password","text":"<p>On the next screen, you'll be prompted to enter your current password in the \"Current Password\" field.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-4-create-a-new-password","title":"Step 4: Create a New Password","text":"<p>Next, create your new password in the \"New Password\" field. Kalp Wallet enforces strong password requirements to enhance security. These typically include:</p> <ul> <li> <p>At least one lowercase letter</p> </li> <li> <p>At least one uppercase letter</p> </li> <li> <p>At least one digit</p> </li> <li> <p>At least one special character</p> </li> <li> <p>A minimum password length (typically 8-20 characters)</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-5-confirm-your-new-password","title":"Step 5: Confirm Your New Password","text":"<p>In the \"Confirm Password\" field, re-enter your new password to ensure accuracy.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-change-password/#step-6-change-password-confirmation","title":"Step 6: Change Password Confirmation","text":"<p>Once you've entered and confirmed your new password, tap the \"Change Password\" button. The app will then confirm that your password has been successfully changed.</p> <p></p> <p>Regularly changing your Kalp Wallet password is a simple yet highly effective way to improve the security of your holdings. By following the steps, you can easily update your password and maintain the confidentiality of your digital assets.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/","title":"How to connect Dapp","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#how-to-connect-dapp","title":"How to Connect Dapp?","text":"<p>The world of decentralized applications (DApps) is rapidly expanding, offering innovative services and experiences built on blockchain technology. To interact with these DApps, you need a secure and reliable digital wallet. This guide provides a step-by-step tutorial on how to connect your KALP Studio Wallet to a DApp, enabling you to seamlessly participate in the Web3 ecosystem.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#prerequisites","title":"Prerequisites:","text":"<ul> <li> <p>A KALP Studio Wallet app installed on your device.</p> </li> <li> <p>The DApp you wish to connect to.</p> </li> </ul>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-1-open-the-kalp-studio-wallet-app","title":"Step 1: Open the KALP Studio Wallet App","text":"<p>Launch the KALP Studio Wallet application on your smartphone. You should see your wallet's main screen displaying your current balance and address.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-2-access-wallet-settings","title":"Step 2: Access Wallet Settings","text":"<p>Tap the icon representing your profile (a person icon), usually located in the top left corner. This will open a menu. Select \"Settings\" (represented by a gear icon).</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-3-navigate-to-connected-dapps","title":"Step 3: Navigate to Connected DApps","text":"<p>In the Settings menu, find the option \"Connected DApps\" and tap on it. This will display a list of currently connected DApps (if any) and an option to add a new one.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-4-link-a-new-dapp","title":"Step 4: Link a New DApp","text":"<p>Tap the \"+ Link New DApp\" button. This will initiate the connection process.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-5-select-dlt","title":"Step 5: Select DLT","text":"<p>You'll be presented with a list of wallets you can use to connect to the DApp (This step will only be seen if you have multiple wallets configured.). Select KALP DLT from the list.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-6-scan-the-qr-code","title":"Step 6: Scan the QR Code","text":"<p>You'll then see a QR code displayed on the screen. Open the KALP Studio Wallet app\u2019s QR code scanner (usually found through a \"Scan\" icon within the app menu) and point your device's camera at the QR code displayed on your screen. Alternatively, if the DApp offers a non-QR connection method (such as through a direct URL connection in the DApp's settings), follow those instructions.</p> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-7-approve-the-request","title":"Step 7: Approve the Request","text":"<p>Once the QR code is scanned, the KALP Studio Wallet app will display an \"Approve Request\" screen. This screen will show the DApp's name, its URL, and the permissions it's requesting. Carefully review these permissions. If you are comfortable with the permissions, tap \"Connect\". If not, tap \"Reject\".</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-8-confirmation","title":"Step 8: Confirmation","text":"<p>After successful connection, the app will display a confirmation message (\"DApp Connected Successfully\"). You can then return to the \"Connected DApps\" screen and see the newly connected DApp listed.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-connect-DAPP/#step-9-return-to-dapp","title":"Step 9: Return to DApp","text":"<p>Close the KALP Studio Wallet app and return to the KALP Studio console. You should now be logged in and ready to use the DApp. The console will display the user's wallet address.</p> <p>Connecting your KALP Studio Wallet to decentralized applications (DApps) opens up a world of opportunities in the Web3 space. By following the steps outlined in this guide, you can securely and efficiently interact with various DApps, accessing their unique features and services.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/","title":"How to disconnect DAPP","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#how-to-disconnect-dapp","title":"How to Disconnect Dapp?","text":"<p>Decentralized applications (DApps) often require connection to your cryptocurrency wallet to function. While this connection enables seamless interactions, it's crucial to manage these connections for security. This article guides you through disconnecting a DApp from your Kalp Wallet. Disconnecting a DApp removes its access to your wallet's funds and prevents unauthorized activity.</p> <p>Step 1: Access Wallet Settings</p> <p>Open your Kalp Wallet application. Navigate to the main menu. Select \"Settings\" from the list of options. The location of the settings menu may vary slightly depending on the version of your app.</p> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-2-locate-connected-dapps","title":"Step 2: Locate Connected DApps","text":"<p>Within the \"Settings\" menu, find the \"Connected DApps\" option. Tap or click on it to view the list of currently connected DApps.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-3-select-the-dapp-to-disconnect","title":"Step 3: Select the DApp to Disconnect","text":"<p>You'll see a list of DApps connected to your wallet. Select the DApp you wish to disconnect.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-4-view-connection-details","title":"Step 4: View Connection Details","text":"<p>Upon selecting the DApp, you'll be presented with connection details, including the DApp's name, website URL, your wallet address, the connection date and time, and the network used.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-6-initiate-disconnection","title":"Step 6: Initiate Disconnection","text":"<p>Tap the prominent \"Disconnect\" button. A confirmation prompt will appear to ensure you want to proceed.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-7-confirm-disconnection","title":"Step 7: Confirm Disconnection","text":"<p>Carefully review the confirmation message, confirming that you understand the implications of disconnecting the DApp. It will usually mention that the connection and associated networks will be disconnected. Tap \"Disconnect\" again to proceed.</p> <p>)</p> <p></p> <p>Step 8: Authentication</p> <p>You'll be prompted to authenticate the disconnection. This may involve biometric authentication (like fingerprint or face ID) or entering your wallet password. Follow the on-screen instructions to complete the authentication process.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-disconnect-DAPP/#step-9-confirmation-of-disconnection","title":"Step 9: Confirmation of Disconnection","text":"<p>Once the authentication is successful, a confirmation message will be displayed, indicating that the DApp has been successfully disconnected from your wallet.</p> <p></p> <p></p> <p>Disconnecting a DApp from your Kalp Wallet is a simple yet crucial security measure. Regularly reviewing and disconnecting unused DApps minimizes potential vulnerabilities and enhances the security of your cryptocurrency holdings. By following the steps outlined above, you can effectively manage your DApp connections and maintain control over your digital assets.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/","title":"How to import wallet","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#how-to-import-wallet","title":"How to Import Wallet?","text":"<p>Managing your digital assets securely requires a robust and trustworthy wallet. The Kalp Wallet app offers a convenient way to access your existing crypto holdings. This guide will walk you through the process of importing your wallet using your seed phrases.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#step-1-accessing-the-import-wallet-option","title":"Step 1: Accessing the Import Wallet Option","text":"<p>Launch the Kalp Wallet app. On the main screen, you'll be presented with two options: \"Create A New Wallet\" and \"Import Wallet.\" Since you're importing an existing wallet, select the \"Import Wallet\" button.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#step-2-entering-your-seed-phrases","title":"Step 2: Entering Your Seed Phrases","text":"<p>The next screen will prompt you to \"Enter Seed Phrases.\" This is a crucial step, and extreme caution is advised. Your seed phrases are the key to your cryptocurrency. Never share these phrases with anyone and store them securely offline.</p> <p></p> <p>The camera function Kalp Wallet is typically designed for seed phrase import via image scanning. Instead of manually typing in your 12-24 word seed phrase, you'd use your phone's camera to take a picture of a written or printed copy of your seed phrase.</p> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#step-3-setting-a-new-password-and-biometric-security-optional","title":"Step 3: Setting a New Password and Biometric Security (Optional)","text":"<p>After entering your seed phrases, you'll be asked to create a new password for your Kalp Wallet. The password must meet specific criteria, which are displayed on the screen. This password, combined with your seed phrases, is what you'll use to access your wallet on this particular device. The password security guidelines ensure your funds are protected.</p> <p>The app also gives you the option to unlock your wallet using your device's biometric security (fingerprint or face ID). This is an additional layer of protection, but remember that your seed phrases remain the ultimate key.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#step-4-importing-your-wallet","title":"Step 4: Importing Your Wallet","text":"<p>Once you've entered your seed phrases, created your password, and made your biometric security choice (optional), click the \"Import\" button. The app will verify your seed phrases.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-import-wallet/#step-5-successful-import-and-verification","title":"Step 5: Successful Import and Verification","text":"<p>If the import is successful, the app will display a confirmation message, \"Wallet Imported Successfully.\" You'll then be able to view your wallet balance and transaction history. The app will display your wallet address, which you can use to receive crypto.</p> <p></p> <p>Importing your wallet into the Kalp Wallet app is a straightforward process, provided you follow these steps carefully. The security of your crypto assets depends entirely on the secure storage and handling of your seed phrases. Always prioritize security and double-check all steps to prevent the risk of losing your funds.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/","title":"How to receive token","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#how-to-receive-tokens","title":"How to Receive Tokens?","text":"<p>The Kalp Wallet mobile application provides a seamless way to manage your cryptocurrency holdings. This guide will walk you through the simple process of receiving tokens into your Kalp Wallet.</p> <p>Step 1: Accessing the Receive Function</p> <p>Open your Kalp Wallet application. You'll see your current balance prominently displayed. Click on any token.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#step-2-initiate-the-process","title":"Step 2: Initiate the process","text":"<p>Tap the \"Receive\" icon (it looks like a downward arrow).</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#step-3-qr-code-displayed","title":"Step 3: QR Code Displayed","text":"<p>This action will immediately display a QR code representing your wallet's unique receive address. The actual address will also be shown below the QR code for manual copying or sharing. This QR code can be scanned using another device to expedite the transfer process.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#step-4-copying-your-receive-address","title":"Step 4: Copying Your Receive Address","text":"<p>You can copy your receive address manually by selecting the text field containing your unique address and then selecting the copy option (the clipboard icon beside it). A confirmation message, \"Copied!\", will appear briefly at the top of your screen indicating that your address has been copied.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#step-5-sharing-your-receive-address-optional","title":"Step 5: Sharing Your Receive Address (Optional)","text":"<p>If you need to share your receive address, simply tap the share icon (the square with an arrow pointing upwards) next to the address. You can choose your preferred sharing method, such as Quick Share, uploading to Photos, Google Drive, printing it, or sharing the address through a mapping application. This method offers flexibility in sharing your receive address.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-receive-tokens/#step-6-receiving-tokens","title":"Step 6: Receiving Tokens","text":"<p>Share the QR code or copied address with the sender. They can then scan the QR code or paste the address into their sending application to initiate the transfer of tokens to your Kalp Wallet. Once the sender completes the transaction, the received tokens will appear in your Kalp Wallet balance, allowing you to review your transactions.</p> <p>Receiving tokens on the Kalp Wallet mobile application is a straightforward and secure process. By following the steps outlined above, you can confidently receive digital assets into your wallet.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/","title":"How to reset wallet","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#how-to-reset-wallet","title":"How to Reset Wallet?","text":"<p>Losing access to your digital wallet can be a frustrating experience. The Kalp Wallet app provides a straightforward process for removing and resetting your wallet, ensuring you regain control and protect your assets.</p> <p>It's crucial to understand that \"resetting\" your Kalp Wallet doesn't simply mean changing your password. Instead, removing your wallet from your device permanently deletes all associated data from that particular device. This includes your balance and transaction history. Therefore, before proceeding, you must ensure you have your seed phrase safely stored in a secure location that only you can access. The seed phrase is your recovery key without it, you will lose all access to your funds.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#step-1-access-the-settings-menu","title":"Step 1: Access the Settings Menu","text":"<p>Open your Kalp Wallet app. Navigate to the settings menu.</p> <p></p> <p>Step 2: Locate the \"Remove Wallet\" Option</p> <p>Within the settings, scroll down to find the \"Security &amp; Privacy\" section. You'll find an option labelled \"Remove Wallet,\" often accompanied by a trash can icon. Tap this option.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#step-3-confirmation-and-seed-phrase-reminder","title":"Step 3: Confirmation and Seed Phrase Reminder","text":"<p>The app will present a warning screen explicitly stating that this action will permanently delete your wallet data from the device. A prominent reminder will emphasize the importance of having your seed phrase securely stored. Review this warning carefully.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#step-4-authentication","title":"Step 4: Authentication","text":"<p>Before proceeding, the app requires an additional layer of security. This might involve biometric authentication (fingerprint or face ID) if enabled or, failing that, will prompt you to enter your wallet password. Input the correct credentials to proceed.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#step-5-final-confirmation","title":"Step 5: Final Confirmation:","text":"<p>A final confirmation screen will appear. Once again, you'll be warned about the irreversible nature of this action.</p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-reset-wallet/#step-6-wallet-removal-complete","title":"Step 6: Wallet Removal Complete","text":"<p>After confirmation, your wallet will be successfully removed from your device. You will be returned to the Kalp Wallet's main screen where you can choose to \"Import Wallet\" using your seed phrase or \"Create A New Wallet\".</p> <p>Removing and resetting your Kalp Wallet is a significant action. Following the above steps carefully ensures a smooth and secure process.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/","title":"How to search a token on wallet applications","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#how-to-search-a-token-on-wallet-application","title":"How to Search a Token on Wallet Application?","text":"<p>To search for a token on the Kalp Wallet Application, follow these steps:</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#step-1-open-the-kalp-wallet-application","title":"Step 1: Open the Kalp Wallet Application","text":"<ol> <li> <p>Launch your Kalp Wallet Application</p> </li> <li> <p>Enter your password or biometric to unlock the wallet, if prompted.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#step-2-navigate-to-the-import-tokens-section","title":"Step 2: Navigate to the \"Import Tokens\" Section","text":"<ol> <li> <p>Once the wallet is open, look for a tab or button labeled \"Import Tokens\" on the main dashboard.</p> </li> <li> <p>Click on this section to view your current token holdings.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#step-3-use-the-search-function","title":"Step 3: Use the Search Function","text":"<ol> <li> <p>At the top of the \"Tokens\" section, locate the search bar.</p> </li> <li> <p>Click inside the search bar and type the name or contract address of the token you are looking for.</p> </li> <li> <p>Ensure the token is on the same blockchain network as your wallet (e.g., Kalp Chain or Ethereum-compatible chain).</p> </li> <li> <p>If the token doesn't appear, proceed to add it manually.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#step-4-manually-add-a-token-if-needed","title":"Step 4: Manually Add a Token (If Needed)","text":"<p>If the token isn\u2019t listed:</p> <ol> <li> <p>Look for an \"Add Token\" button (usually at the bottom of the \"Tokens\" section).</p> </li> <li> <p>Enter the token contract address, symbol, and decimal value:</p> </li> <li> <p>Token Contract Address: Obtain this from the official website or trusted sources.</p> </li> <li> <p>Token Symbol: For example, \"ABC.\"</p> </li> <li> <p>Decimals: Typically provided with the token details (e.g., \"18\").</p> </li> <li> <p>Click Add or Save to finalize.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#step-5-verify-the-token","title":"Step 5: Verify the Token","text":"<ol> <li> <p>Once added, the token should appear in your list of assets.</p> </li> <li> <p>Check the balance and details to ensure everything is accurate.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-search-a-token-on-Wallet-Application/#tips","title":"Tips","text":"<ul> <li> <p>Ensure you are connected to the correct network in Kalp Wallet.</p> </li> <li> <p>Be cautious with contract addresses; use only trusted sources to avoid scams.</p> </li> <li> <p>If the token still doesn't appear, check if the Kalp Wallet supports it or contact support.</p> </li> </ul> <p>By following these steps, you can easily search for and add tokens in the Kalp Wallet Application.</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/","title":"How to send tokens from kalp wallet","text":""},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#how-to-send-a-token-from-kalp-wallet","title":"How to Send a Token from Kalp Wallet?","text":"<p>To send tokens using the Kalp Wallet Mobile, follow these step-by-step instructions:</p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-1-open-kalp-wallet","title":"Step 1: Open Kalp Wallet","text":"<ol> <li> <p>Launch your browser and click on the Kalp Wallet icon in your toolbar.</p> </li> <li> <p>Enter your password to unlock the wallet.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-2-select-the-token","title":"Step 2: Select the Token","text":"<ol> <li>Click on the token you wish to send.</li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-3-initiate-the-transfer","title":"Step 3: Initiate the Transfer","text":"<ol> <li> <p>Within the token's details page, locate and click the \"Send\" button.</p> </li> <li> <p>A transfer form will appear.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-4-enter-the-recipients-address","title":"Step 4: Enter the Recipient's Address","text":"<ol> <li>In the \"Recipient Address\" field, input the wallet address of the recipient.</li> </ol> <p>Enter Recipient Address, there are 4 ways to enter address</p> <ul> <li> <ol> <li>Either can type</li> </ol> </li> <li> <ol> <li>From Address book</li> </ol> </li> <li> <ol> <li>By Scanning QR</li> </ol> </li> <li> <ol> <li>From recent address if already made transactions</li> </ol> </li> <li> <p>Double-check the address to ensure accuracy.</p> </li> <li> <p>Ensure the recipient's wallet is compatible with the token's blockchain network (e.g., Kalp Chain or Ethereum-compatible chain).</p> </li> </ul> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-5-specify-the-amount","title":"Step 5: Specify the Amount","text":"<ol> <li> <p>In the \"Amount\" field, enter the number of tokens you want to send.</p> </li> <li> <p>Ensure you have sufficient token balance to cover the transfer and any transaction fees (e.g., GINI tokens on Kalp Chain).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-6-review-and-confirm","title":"Step 6: Review and Confirm","text":"<ol> <li> <p>Click on \"Next\" or \"Review\" to see a summary of your transaction.</p> </li> <li> <p>Verify the recipient address, token type, and transfer amount.</p> </li> <li> <p>Confirm the estimated gas fees (if applicable).</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-7-approve-the-transaction","title":"Step 7: Approve the Transaction","text":"<ol> <li> <p>Click \"Send\" to authorize the transaction.</p> </li> <li> <p>If prompted, enter your wallet password or authenticate using your preferred method.</p> </li> </ol> <p></p> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-8-wait-for-transaction-confirmation","title":"Step 8: Wait for Transaction Confirmation","text":"<ol> <li> <p>The wallet will show a notification once the transaction is submitted.</p> </li> <li> <p>Check the transaction status on the wallet dashboard or the blockchain explorer linked to the token's network.</p> </li> </ol> <p></p>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#step-9-verify-the-transaction","title":"Step 9: Verify the Transaction","text":"<ol> <li> <p>Once confirmed, go to the \"Transaction History\" or \"Activity\" tab in Kalp Wallet.</p> </li> <li> <p>Verify that the transaction has been successfully completed.</p> </li> </ol>"},{"location":"Products/Kalp-Wallet-Mobile/How-to-send-tokens-from-Kalp-Wallet/#tips","title":"Tips:","text":"<ul> <li> <p>Always double-check recipient addresses to avoid errors.</p> </li> <li> <p>Ensure you have enough tokens for gas/transaction fees.</p> </li> <li> <p>For larger transfers, consider sending a small test transaction first.</p> </li> </ul> <p>By following these steps, you can easily and securely send tokens using the Kalp Wallet Mobile Application.</p>"},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/","title":"How to delete NFT","text":""},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/#how-to-delete-nft","title":"How to Delete NFT?","text":"<p>Managing your digital assets is an essential part of maintaining a streamlined and organized NFT portfolio. As your collection grows, you may occasionally need to remove certain NFTs, whether to declutter, replace outdated assets, or make room for new additions.</p> <p>KALP Studio's NFT Creator makes it easy to delete NFTs directly from your portfolio.</p>"},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/#step-1-access-the-nft-portfolio","title":"Step 1: Access the NFT Portfolio","text":"<ol> <li> <p>Open \u2018NFT Creator\u2019 by logging into KALP Studio console.</p> </li> <li> <p>In \u2018NFT Creator\u2019, navigate to the NFT Portfolio section located at the left sidebar menu (Fig.1).</p> </li> </ol>"},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/#step-2-locate-the-nft","title":"Step 2: Locate the NFT","text":"<ol> <li> <p>Find the NFT you want to delete from your list.</p> </li> <li> <p>Once located, click on the Kebab menu (\u22ee) present on the NFT card.</p> </li> <li> <p>In the options menu, click on Delete.</p> </li> </ol> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/#step-3-confirm-deletion","title":"Step 3: Confirm Deletion","text":"<ol> <li> <p>Review the confirmation message that pops-up when deleting the NFT.</p> </li> <li> <p>Click the Delete button on confirmation pop-up to proceed.</p> </li> </ol>"},{"location":"Products/NFT%20Creator/How%20to%20Delete%20an%20NFT/#step-5-otp-verification","title":"Step 5: OTP Verification","text":"<ol> <li> <p>For added security, an OTP (One-Time Password) will be sent to your registered email ID.</p> </li> <li> <p>Enter the 6-digit OTP in the provided fields.</p> </li> <li> <p>Click on Confirm.</p> </li> </ol> <p>No transaction charges will be levied if minted on KALP DLT.</p> <p>This process ensures that your NFT is deleted both from your Kalp Studio portfolio and the blockchain, with secure verification steps in place.</p> <p>Always ensure that you genuinely want to delete the NFT, as this action cannot be undone.</p>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/","title":"How to connect wallet","text":""},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#how-to-connect-wallet","title":"How to Connect Wallet?","text":"<p>Creating or connecting a wallet on NFT Creator is a straightforward process designed to ensure that users can manage their digital assets securely and efficiently. Here is a detailed guide to help you through each step of the process.</p>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#step-by-step-guide","title":"Step-by-Step Guide","text":""},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#1-access-the-wallet-section","title":"1. Access the Wallet Section","text":"<p>Open image-20241028-111818.png</p> <p></p> <ul> <li>Navigate to the Wallet Section: After logging into Kalp Studio, go to the sidebar menu and click on the 'Wallet' option.</li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#2-add-a-new-wallet","title":"2. Add a New Wallet","text":"<p>Open image-20240909-064013.png</p> <p></p> <p>Initiate Wallet Creation: Click on the \"+ Connect Wallet\" button. This will open the wallet creation interface.</p> <ul> <li>When the user clicks on the \"Connect Wallet\" button in the top navigation or within the wallet module, a pop-up will appear for connecting the wallet. The user then selects the \"Create New Wallet\" option.</li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#3-choose-wallet-type","title":"3. Choose Wallet Type","text":"<p>Open image-20240909-064219.png</p> <p></p> <p>If you select \u201cCreate New Wallet\u201d, you get to choose wallet type.</p> <p>Open image-20240916-052205.png</p> <p></p> <ul> <li> <p>Select Wallet Type: You will be presented with options to choose the type of wallet. Kalp Studio supports multiple types of wallets such as:</p> <ol> <li> <p>Self Custody Wallet</p> </li> <li> <p>Custodial Wallet</p> </li> <li> <p>MPC Wallet</p> </li> </ol> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#self-custody-wallet","title":"Self Custody Wallet","text":"<p>Open image?url=https%3A%2F%2F1148605496-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252F4gkv2XhY4CmWY6Vp0djW%252Fuploads%252FkwWFemMDatHKYdB9YvL5%252Fimage.png%3Falt%3Dmedia%26token%3Da3f9fc46-60c0-45a7-a7bc-85c525e9c8be&amp;width=768&amp;dpr=4&amp;quality=100&amp;sign=640ab909&amp;sv=1</p> <p></p> <p>Self Custody Wallet: For this guide, we select 'Self Custody Wallet'. Click 'Continue' to proceed.</p>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#1-configure-the-wallet","title":"1. Configure the Wallet","text":"<p>Open image?url=https%3A%2F%2F1148605496-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252F4gkv2XhY4CmWY6Vp0djW%252Fuploads%252FQPxesAEFtqO3uKXpSmN6%252Fimage.png%3Falt%3Dmedia%26token%3Da1b40dde-e06e-4ec9-bbd1-28bfe9a83390&amp;width=768&amp;dpr=4&amp;quality=100&amp;sign=c99654fd&amp;sv=1</p> <p></p> <ul> <li> <p>Select Blockchain and Network: Choose KALP DLT as your Blockchain and appropriate network from the dropdown list for your wallet. This ensures compatibility and proper functionality of your wallet within the ecosystem.</p> </li> <li> <p>Click 'Continue' after making your selections.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#2-generate-seed-phrase","title":"2. Generate Seed Phrase","text":"<p>Open image-20240912-061514.png</p> <p></p> <ul> <li> <p>Secret Recovery Phrase: You will be provided with a 15-word seed phrase. This phrase is crucial for the security and recovery of your wallet.</p> </li> <li> <p>Save the Seed Phrase: Write down the seed phrase and store it securely. It is recommended to:</p> <ol> <li> <p>Save it in a password manager.</p> </li> <li> <p>Store it in a secure deposit box.</p> </li> <li> <p>Write it down and hide copies in multiple secret spots.</p> </li> </ol> </li> <li> <p>Do Not Share: Never share your seed phrase with anyone.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#3-confirm-seed-phrase","title":"3. Confirm Seed Phrase","text":"<ul> <li>Verification: To ensure you have correctly noted the seed phrase, you will need to confirm it by selecting each word in the correct order.</li> </ul> <p>Open image-20240912-053545.png</p> <p></p> <ul> <li>Click 'Continue' after confirmation.</li> </ul> <p>After jotting down the seed phrase, you need to arrange the words accordingly.</p>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#4-wallet-creation-successful","title":"4. Wallet Creation Successful","text":"<p>Open image?url=https%3A%2F%2F1148605496-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252F4gkv2XhY4CmWY6Vp0djW%252Fuploads%252FwWtJxk14WMQkXGE9MTMv%252Fimage.png%3Falt%3Dmedia%26token%3D5445ccd1-fb48-4447-847d-2598deec74ad&amp;width=768&amp;dpr=4&amp;quality=100&amp;sign=ac7c7b1f&amp;sv=1</p> <p></p> <ul> <li> <p>Wallet Details: Once the seed phrase is confirmed, your wallet will be successfully created.</p> </li> <li> <p>Copy and Secure: Copy these keys and store them securely. Your private key should be kept confidential.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#select-custodial-wallet","title":"Select Custodial Wallet","text":"<p>Open image-20240916-052754.png</p> <p></p> <p>Select Custodial Wallet and click Continue to proceed.</p> <p>Choose Blockchain and Network</p> <p>You will then be asked to choose a blockchain and network to configure your wallet. Use the dropdown menus to select the appropriate options that match your needs.</p> <p>Open image-20240916-052416.png</p> <p></p> <p>Select a Wallet Provider</p> <p>Kalp Studio provides various wallet provider options. You can choose from Kalp Studio's managed wallet or third-party providers like Coinbase and Gemini. Kalp Studio\u2019s wallet is secure and easy to manage, making it a great choice for general use.</p> <p>Open image-20240916-052453.png</p> <p></p> <p>Complete the Wallet Creation</p> <p>Once you\u2019ve selected your provider, you will be redirected to set up your wallet. After completing the process, you will receive a confirmation that your wallet has been successfully created.</p> <p>Wallet Created Successfully</p> <p>Open image-20250130-134404.png</p> <p></p> <p>Upon successful creation, you will receive a congratulatory message along with details such as the public key of the wallet. You will also be credited with 1 GINI, which can be used for transactions on the platform.</p>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#select-mpc-wallet","title":"Select MPC Wallet","text":""},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#step-1-access-the-wallet-section","title":"Step 1: Access the Wallet Section","text":"<p>Open image-20240909-064347.png</p> <p></p> <ul> <li> <p>Begin by logging into your KALP Studio account.</p> </li> <li> <p>On the left-hand menu, navigate to the Wallet section.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#step-2-configure-your-wallet","title":"Step 2: Configure Your Wallet","text":"<p>Open image-20240909-064514.png</p> <p></p> <ul> <li> <p>After selecting the wallet type, you will be asked to choose the blockchain and network for your wallet.</p> <ul> <li> <p>Blockchain: Select the Kalp DLT blockchain</p> </li> <li> <p>Network: Choose network</p> </li> </ul> </li> <li> <p>Once your selections are made, click Continue.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#step-4-sign-in-for-verification","title":"Step 4: Sign In for Verification","text":"<ul> <li>To proceed, you need to sign in or verify your account. You will see a prompt to sign in with Google or enter your email address.</li> </ul> <ul> <li>Enter your details, and you may be asked to verify your email by entering a code sent to your inbox.</li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20connect%20wallet/#step-5-wallet-creation-confirmation","title":"Step 5: Wallet Creation Confirmation","text":"<ul> <li> <p>Upon successful verification, your wallet will be created.</p> </li> <li> <p>A confirmation message will appear, indicating that the wallet has been created successfully.</p> </li> <li> <p>The platform will also credit your wallet with a certain amount of tokens for initial transactions or activities on the platform.</p> </li> </ul> <p>By following the steps outlined in this guide, you can set up various types of wallets, including Self Custody, Custodial, and MPC wallets. Each wallet type offers unique benefits tailored to different needs and preferences.</p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/","title":"How to create NFT","text":""},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#how-to-create-nft","title":"How to create NFT?","text":"<p>Kalp Studio\u2019s NFT Creator is designed for simplicity and efficiency, enabling users to create and manage NFTs in just a few steps. Below, we break down the process from starting with an empty NFT portfolio to successfully creating a NFT.</p> <p></p> <p>Fig.1</p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#step-1-accessing-the-nft-creator","title":"Step 1: Accessing the NFT Creator","text":"<ol> <li> <p>Open \u2018NFT Creator\u2019 by logging into KALP Studio console.</p> </li> <li> <p>In \u2018NFT Creator\u2019, navigate to the NFT Portfolio section located at the left sidebar menu (Fig.1).</p> </li> <li> <p>On the dashboard, if no NFTs are currently created, a message will appear saying, \u201cNo NFT yet!\u201d</p> </li> <li> <p>Now click the \u2018+ Create NFT\u2019 button to start creating a new NFT.</p> </li> </ol> <p>Note: You need to connect a wallet first for creating a NFT, if not connected already.</p> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#step-2-creating-a-new-nft","title":"Step 2: Creating a New NFT","text":"<ol> <li> <p>Once you start creating a new NFT, a \u2018Create NFT\u2019 page will open asking for below details (Fig.2):</p> <ol> <li> <p>Upload Media: Upload the main media file for your NFT. You can upload Video, Audio, Image, Animation, Document and 3D files.     (Supported formats include JPG, JPEG, PNG, GIF, SVG, DOCX, PDF, MP4, WEBM, MP3, WAV, OGG, and GLB, with a maximum file size of 100 MB)</p> </li> <li> <p>Name Your Creation: Enter a unique name for your NFT (Validations are shown next to the text box)</p> </li> <li> <p>Catalog Selection: You can either select an existing catalog you already created OR create a new one. If you\u2019re creating a new catalog, click on \u2018Create New Catalog\u2019* button</p> </li> <li> <p>Description: Provide a description of your NFT to let the audience know about your creation in detail. This helps potential viewers understand the background or value of your NFT.</p> </li> <li> <p>Asset Properties (optional): Add any additional properties you think will be needed to describe your NFT. Under \u2018Asset Properties\u2019, you can add custom details in Key-Value pair like:</p> <ol> <li> <p>Type: NFT</p> </li> <li> <p>Color: Red</p> </li> <li> <p>Genre: Classical music</p> </li> </ol> </li> </ol> </li> </ol> <p>You can add at max 6 properties to your NFT with max character length upto 15 chars.</p> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#step-3-creating-a-new-catalog-optional","title":"Step 3: Creating a New Catalog (Optional)","text":"<ol> <li> <p>Upload Catalog picture: Upload a cover image for your new Catalog.     (Supported formats for thumbnails are JPG, PNG, GIF and WEBP, with a max size of 5 MB)</p> </li> <li> <p>Name your Catalog: Give a name to your new Catalog.</p> </li> <li> <p>Description: Add a brief description about your Catalog's purpose or theme.</p> </li> <li> <p>Click on \u2018Create Catalog\u2019 button at last to create. A confirmation message will appear indicating successful catalog creation.</p> </li> </ol> <p></p> <p>A pop will appear informing that the \u201cCatalog creation started! It may take a few minutes to appear in the catalog listing.\"</p> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#step-4-minting-confirmation","title":"Step 4: Minting Confirmation","text":"<ol> <li> <p>Once you\u2019ve filled in all the required details for your NFT, click on the Create button.</p> </li> <li> <p>A confirmation popup will appear, stating: \"The platform requires to mint the asset and metadata on Blockchain now to create your NFT. Please approve this transaction to continue.\"</p> </li> <li> <p>Click Confirm to proceed. This initiates the blockchain transaction for minting the NFT.</p> </li> </ol> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20NFT/#step-5-approving-the-transaction-through-wallet","title":"Step 5: Approving the Transaction through Wallet","text":"<ol> <li> <p>After confirming, a wallet interface will open, displaying the estimated gas fee required to mint the NFT.</p> </li> <li> <p>Review the Estimated fee and Total amount to ensure the transaction cost is acceptable.</p> </li> <li> <p>Click Confirm in your wallet to authorize the transaction. This will complete the minting process on the blockchain.</p> </li> <li> <p>A success message will appear saying, \u201cYour NFT has been created successfully\u201d with \u2018View NFT\u2019 button to view your created NFT.</p> </li> </ol> <p></p> <p>Kalp Studio\u2019s NFT Creator provides a user-friendly platform for creating, categorizing, and managing NFTs. By following the steps above, you can add your media, categorize it, and ensure it\u2019s ready for the digital marketplace. This streamlined process makes it ideal for artists, musicians, and creators looking to establish their digital assets.</p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20a%20catalog/","title":"How to create a catalog","text":""},{"location":"Products/NFT%20Creator/How%20to%20create%20a%20catalog/#how-to-create-a-catalog","title":"How to Create a Catalog?","text":"<p>Creating a catalog for your NFTs can make managing and organizing multiple assets on DLT chain simple and efficient. With Kalp Studio's NFT Creator, you can quickly set up a catalog tailored to your unique collection. Here\u2019s a step-by-step guide to setting up a catalog within Kalp Studio.</p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20a%20catalog/#step-1-accessing-the-nft-portfolio","title":"Step 1: Accessing the NFT Portfolio","text":"<ol> <li> <p>Open \u2018NFT Creator\u2019 by logging into KALP Studio console.</p> </li> <li> <p>In \u2018NFT Creator\u2019, navigate to the NFT Portfolio section located at the left sidebar menu (Fig.1).</p> </li> <li> <p>On the dashboard, if no NFTs are currently created, a message will appear saying, \u201cNo NFT yet!\u201d</p> </li> <li> <p>Now click the \u2018+ Create NFT\u2019 button to start creating a new NFT.</p> </li> </ol> <p>Note: You need to connect a wallet first for creating a NFT, if not connected already.</p>"},{"location":"Products/NFT%20Creator/How%20to%20create%20a%20catalog/#step-2-initiating-catalog-creation","title":"Step 2: Initiating Catalog Creation","text":"<ol> <li> <p>On the Create NFT screen, beside \u2018Select Catalog\u2019 field, a \"Create New Catalog\u201d button is provided.</p> </li> <li> <p>Click on the Create New Catalog button. This opens a pop-up where you can easily set up your Catalog details to match your style and collection needs.</p> </li> </ol>"},{"location":"Products/NFT%20Creator/How%20to%20create%20a%20catalog/#step-3-setting-up-your-new-catalog","title":"Step 3: Setting Up Your New Catalog","text":"<ol> <li> <p>Upload Catalog picture: Upload a cover image for your new Catalog.     (Supported formats for thumbnails are JPG, PNG, GIF and WEBP, with a max size of 5 MB)</p> </li> <li> <p>Name your Catalog: Give a name to your new Catalog.</p> </li> <li> <p>Description: Add a brief description about your Catalog's purpose or theme.</p> </li> <li> <p>Click on \u2018Create Catalog\u2019 button at last to create. A confirmation message will appear indicating successful catalog creation.</p> <ul> <li>Note: You can create upto 50 NFTs within a custom Catalog.</li> </ul> </li> </ol> <p>https://docs-images-kalp-studio.s3.ap-south-1.amazonaws.com/NFT+Creator+Articles+STG/create+catalog/cc4.png</p> <p>A pop will appear informing that the \u201cCatalog creation started! It may take a few minutes to appear in the catalog listing.\"</p>"},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/","title":"How to see all asset details","text":""},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/#how-to-see-all-asset-details","title":"How to see all asset details?","text":"<p>NFT Creator provides a comprehensive and user-friendly platform for viewing, organizing, and tracking your NFT portfolio. With a streamlined interface, NFT Creator allows users to explore asset details effortlessly, from basic information like asset names and categories to in-depth data such as blockchain identifiers and ownership verification.</p>"},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/#step-1-accessing-your-nft-portfolio","title":"Step 1: Accessing Your NFT Portfolio","text":"<p>Open \u2018NFT Creator\u2019 by logging into KALP Studio console.</p> <ol> <li> <p>Navigate to the NFT Portfolio on the left sidebar. This is where you can view all your NFT-related assets. The sidebar offers various options, like \u201cAll NFTs,\u201d \u201cMy Catalogs,\u201d and \u201cSubscription.\u201d</p> </li> <li> <p>Select \u201cAll NFTs\u201d from the portfolio options. This option displays the entire collection of NFTs available in your account for the selected wallet.</p> </li> </ol> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/#step-2-viewing-all-nfts","title":"Step 2: Viewing All NFTs","text":"<p>Once in the \u201cAll NFTs\u201d section, you\u2019ll see a grid of NFT assets, each represented with a thumbnail and basic details. The interface offers:</p> <ul> <li> <p>Thumbnail Preview: A quick visual representation of the NFT.</p> </li> <li> <p>Catalog Name and NFT Title: Each NFT card shows the NFT name and the Catalog name under which it was created.</p> </li> <li> <p>Catalog ID: Each asset displays its unique catalog ID, enabling easy identification on the blockchain.</p> </li> </ul> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/#step-3-searching-and-filtering-nfts","title":"Step 3: Searching and Filtering NFTs","text":"<p>The search bar at the top allows for easy searching of assets by keywords, such as asset or catalog names. This feature is handy for quickly locating a specific NFT, especially when managing a large collection.</p>"},{"location":"Products/NFT%20Creator/How%20to%20see%20all%20asset%20details/#step-4-accessing-detailed-asset-information","title":"Step 4: Accessing Detailed Asset Information","text":"<ol> <li> <p>Select an Asset: Click on the NFT you wish to view in detail. For instance, choosing the \u201c10 points\u201d asset from the \u201cEmber Sword\u201d collection opens up a dedicated details page.</p> </li> <li> <p>Detailed View: The detail page offers an expanded view with more comprehensive information about the selected NFT, including:</p> <ol> <li> <p>NFT Preview: A preview section which showcases your actual NFT media (including the play/pause controls for video, music NFTs and a renderer for 3D NFTs)</p> </li> <li> <p>Blockchain: Information on which blockchain the NFT is minted.</p> </li> <li> <p>Creator\u2019s Address: Shows the wallet address of the asset creator, providing transparency and ownership verification.</p> </li> <li> <p>Asset Description: A detailed section where the NFT description is visible.</p> </li> <li> <p>Asset Properties: The additional info metadata embedded with your NFT.</p> </li> </ol> </li> </ol> <p></p> <p></p> <p>The detailed asset page also includes an \u201cAsset ID\u201d and the \u201cCatalog ID\u201d, along with a \u201cView on Blockchain\u201d link. This link enables direct access to the blockchain record of the asset, where you can verify its authenticity, transaction history, and other blockchain-specific details.</p> <p>By following these steps, users can easily navigate Kalp Studio to manage, verify, and understand each asset\u2019s details. This layout simplifies NFT management, ensuring that every asset is easily accessible.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/","title":"How to view all your NFTs","text":""},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/#how-to-view-all-your-nfts","title":"How to view all your NFTs?","text":"<p>Kalp Studio offers a streamlined interface for viewing and managing your NFT portfolio. This guide will walk you through accessing and viewing your NFTs in both grid and list formats.</p> <p>Make sure to connect your wallet first to see all NFTs created on that network.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/#step-1-access-the-nft-portfolio","title":"Step 1: Access the NFT Portfolio","text":"<ol> <li> <p>Open \u2018NFT Creator\u2019 by logging into KALP Studio console.</p> </li> <li> <p>In \u2018NFT Creator\u2019, navigate to the NFT Portfolio section located at the left sidebar menu.</p> </li> <li> <p>Select \u2018All NFTs\u2019 under the NFT Portfolio to view all your created NFTs.</p> </li> </ol>"},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/#step-2-viewing-nfts-in-grid-layout","title":"Step 2: Viewing NFTs in Grid Layout","text":"<p>The grid layout is the default view for NFTs in Kalp Studio\u2019s NFT Creator, presenting assets visually with easy-to-read thumbnails.</p> <p></p> <ol> <li> <p>Upon entering the All NFTs section, you will see your assets displayed as tiles.</p> </li> <li> <p>Each tile provides the following details:</p> </li> <li> <p>Asset Thumbnail: A preview image of the NFT.</p> </li> <li> <p>Asset Name: The title or name of the NFT.</p> </li> <li> <p>Catalog Name: The Collection name under which the NFT was created.</p> </li> <li> <p>Catalog ID: A unique identifier for the catalog, useful for tracking and referencing.</p> </li> <li> <p>Network logo: A logo of the chain on which the NFT was created is also presented on NFT cards.</p> </li> </ol>"},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/#step-3-switching-to-list-layout","title":"Step 3: Switching to List Layout","text":"<p>If you prefer a detailed, table-based view, switch to the list layout by following these steps:</p> <ol> <li> <p>Click on the List Icon (highlighted in red in the screenshot) located at the top right of the grid view.</p> </li> <li> <p>This will switch your NFTs to a list format with detailed rows for each NFT.</p> </li> </ol> <p>In the list view, you\u2019ll find:</p> <ul> <li> <p>Asset Name: The name of each NFT.</p> </li> <li> <p>Asset ID: A unique identifier assigned to each NFT, essential for inventory management.</p> </li> <li> <p>Catalog ID: This is the catalog's blockchain address, making it easy to track on-chain data.</p> </li> <li> <p>Catalog Name: The category to which each NFT belongs.</p> </li> <li> <p>View on Blockchain: A clickable link to view the NFT transaction details on the blockchain.</p> </li> </ul>"},{"location":"Products/NFT%20Creator/How%20to%20view%20all%20your%20NFTs%20%28Grid%20and%20List%20views%29/#step-4-viewing-nfts-on-the-blockchain","title":"Step 4: Viewing NFTs on the Blockchain","text":"<p>For each NFT, the platform provides a direct link to view its blockchain record.</p> <ol> <li> <p>In the list view, locate the View on Blockchain column.</p> </li> <li> <p>Click the link next to an NFT to view it on the Blockchain explorer in a new tab.</p> </li> <li> <p>This provides complete insights of your NFT transaction on that Blockchain.</p> </li> </ol> <p>NFT Creator\u2019s dual viewing modes - grid and list offer flexibility for users to explore their NFTs conveniently. Whether you need a quick visual overview or detailed metadata, these options make it easy to manage your NFT portfolio effectively.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/","title":"How to view your catalog","text":""},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#how-to-view-all-your-catalog","title":"How to view all your Catalog?","text":"<p>Navigating through digital assets is essential in any NFT platform, and Kalp Studio\u2019s NFT Creator provides an intuitive and user-friendly interface to view and manage NFT Catalogs.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#step-1-log-into-nft-creator","title":"Step 1: Log into NFT Creator","text":"<p>Start by logging into your Kalp Studio account. Once logged in, open \u2018NFT Creator\u2019 under products and you will be directed to the main dashboard, which offers various options for managing and creating NFTs.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#step-2-navigate-to-the-nft-portfolio-section","title":"Step 2: Navigate to the NFT Portfolio Section","text":"<p>On the left-hand side of the dashboard, you\u2019ll see a navigation menu. Click on the NFT Portfolio option to expand it.</p> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#step-3-access-my-catalogs","title":"Step 3: Access 'My Catalogs'","text":"<p>Within the NFT Portfolio section, select My Catalogs. This opens the catalog view, where you can see all your custom created catalogs along with the default Catalog.</p> <p>Catalogs that have at least 1 NFT within them will only be shown on \u2018My Catalogs\u2019 screen.</p> <p></p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#step-4-explore-your-catalogs","title":"Step 4: Explore Your Catalogs","text":"<p>Once in the My Catalogs section, you\u2019ll see a grid displaying each catalog as a card. Each catalog card includes a representative image, the catalog name, and the total number of NFTs it contains.</p>"},{"location":"Products/NFT%20Creator/How%20to%20view%20your%20Catalog/#step-5-view-catalog-details","title":"Step 5: View Catalog Details","text":"<ul> <li> <p>Clicking on any catalog opens its detailed view, allowing you to explore the NFTs stored within.  </p> </li> <li> <p>The Catalog screen also shows essential details about the catalog like:</p> <ul> <li> <p>Catalog Name</p> </li> <li> <p>Catalog thumbnail</p> </li> <li> <p>Creator's address</p> </li> <li> <p>Catalog description</p> </li> </ul> </li> </ul> <p></p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/","title":"How to connect wallet","text":""},{"location":"Products/Token-Studio/How-to-connect-wallet/#how-to-connect-your-wallet-to-get-started-with-token-studio-on-kalp-studio","title":"How to Connect Your Wallet to Get Started with Token Studio on Kalp Studio","text":"<p>Connecting your wallet is a necessary step to start creating tokens on Kalp Studio\u2019s Token Studio. The wallet connection allows you to securely interact with blockchain features and manage your assets directly. Here\u2019s a detailed guide on how to connect your wallet to begin using the Token studio tool.</p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-1-access-the-kalp-token-studio-dashboard","title":"Step 1: Access the Kalp Token Studio Dashboard","text":"<p>Once you\u2019re logged in, navigate to the Dashboard within Kalp Studio and click on  explore Token studio. Here, you\u2019ll see options for Token Creation Wizard, List of Tokens Created, and Subscription. Select the Create New Token option to begin the token creation process.</p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-2-trigger-the-wallet-connection","title":"Step 2: Trigger the Wallet Connection","text":"<p>If you haven\u2019t connected a wallet yet, clicking Create New Token will prompt a popup message asking you to connect your wallet. This is necessary as the Token studio requires access to your wallet to deploy tokens on the blockchain.</p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-3-select-a-wallet-provider","title":"Step 3: Select a Wallet Provider","text":"<p>In the wallet connection dialog, you\u2019ll see a list of supported wallet providers. Kalp Studio currently supports popular options such as:</p> <ul> <li> <p>Kalp DLT</p> </li> <li> <p>Kalp Studio Wallet</p> </li> <li> <p>Socials</p> </li> </ul> <p>Choose the wallet provider you prefer. For this example, we\u2019ll proceed with MetaMask.</p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-4-connect-your-kalp-studio-wallet","title":"Step 4: Connect Your Kalp studio Wallet","text":"<p>Once you select MetaMask, the MetaMask extension or application (if installed) will open and prompt you to confirm the connection. Follow these steps:</p> <p></p> <ol> <li> <p>Open MetaMask: If prompted, enter your MetaMask password to unlock your wallet.</p> </li> <li> <p>Select Account: Choose the account you wish to connect to Kalp Studio.</p> </li> <li> <p>Confirm Connection: Click Next, then Connect to allow Kalp Studio to access your MetaMask account.  </p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-5-verify-connection","title":"Step 5: Verify Connection","text":"<p>After confirming the connection, you\u2019ll see your wallet connected on the Kalp Token Studio interface. Now, you are ready to use the Token studio to create and deploy your tokens.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#step-6-start-creating-tokens","title":"Step 6: Start Creating Tokens","text":"<p>Now that your wallet is connected, go back to Dashboard and click Create New Token again. The platform will allow you to proceed with the token creation process. You can set parameters like token name, symbol, and standard as per your requirements.</p> <p>Note</p> <p>When connecting your wallet, ensure you are using a secure and trusted environment.  Avoid connecting your wallet on public or unsecured networks to prevent  Unauthorized access to your funds.</p>"},{"location":"Products/Token-Studio/How-to-connect-wallet/#conclusion","title":"Conclusion","text":"<p>By following these steps, you can easily connect your wallet to Kalp Studio and start creating tokens. Wallet integration makes the Token studio feature fully operational, enabling a seamless experience in deploying and managing blockchain tokens. Whether you're using MetaMask or another supported wallet, the process is straightforward and secure.</p>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/","title":"How to create token with Kalp DLT","text":""},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#how-to-create-token-with-kalp-dlt","title":"How to create token with kalp DLT","text":"<p>This guide will walk you through the process of creating your own digital tokens using the Kalp DLT within the Kalp Studio platform. Kalp Studio provides an easy-to-use interface for developers and creators to get started with their digital assets.</p>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>A valid Kalp Studio Account.</p> </li> <li> <p>A connected Kalp DLT wallet.</p> </li> <li> <p>An active subscription for Token Studio, API Gateway and Kalp Instant Deployer</p> </li> </ul>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-1-access-token-studio","title":"Step 1: Access Token Studio","text":"<ol> <li>Log in to your Kalp Studio account. You will be directed to your Dashboard.</li> </ol> <ol> <li>Locate the Token Studio card in the \"Our Products\" section.</li> </ol> <ol> <li> <p>Click the EXPLORE button within the Token Studio card. This will direct you to the Token Studio dashboard.</p> </li> <li> <p>Select your Plan out of the given three options.</p> <p></p> </li> <li> <p>Subscribe to the plan.</p> </li> </ol> <p></p> <ol> <li> <p>Your subscriptions will be visible on the billing section. You have an option to upgrade your current subscription is visible on the billing section. You have an option to upgrade your current subscription.</p> <p></p> </li> <li> <p>Once subscribed, you can explore the product.</p> <p></p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-2-begin-creating-a-token","title":"Step 2: Begin Creating a Token","text":"<ol> <li> <p>Within the Token Studio dashboard, you'll see a section labeled Create a New Token.</p> <p></p> </li> <li> <p>Click on the + Create New Token button.</p> </li> <li> <p>If your wallet is not connected, the system will prompt you to connect one.</p> <p></p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-3-connect-your-wallet","title":"Step 3: Connect Your Wallet","text":"<ol> <li> <p>You'll see a Connect Wallet popup.</p> </li> <li> <p>Click on the + Connect Wallet button located on the top right corner of the page.</p> </li> </ol> <p> </p> <ol> <li> <p>You will be presented with a list of wallet options.</p> </li> <li> <p>Select KALP DLT. This will ensure your tokens are associated with your specific Kalp DLT wallet.</p> </li> </ol> <p> </p> <ol> <li>Once the wallet is connected, the wallet address will be visible.</li> </ol> <p></p>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-4-enter-token-details","title":"Step 4: Enter Token Details","text":"<ol> <li> <p>The Create Token form will appear.</p> </li> <li> <p>Fill in the required fields with the following:</p> </li> <li> <p>Name: Give your token a name</p> </li> <li> <p>Symbol: Choose a short ticker symbol</p> </li> <li> <p>Type: Select Type (Fungible or Non-Fungible)</p> </li> <li> <p>Decimals: Enter a decimal value for your token.</p> </li> <li> <p>Description: Provide a description for your token.</p> </li> <li> <p>Icon Image: Upload a suitable icon for your token</p> </li> <li> <p>Token Initial Supply: Determine the number of tokens initially minted.</p> </li> <li> <p>Token Maximum Supply: Define the maximum number of tokens that can exist in the supply.</p> </li> <li> <p>Owner Wallet Address: This will automatically be populated with the address of the connected wallet.</p> </li> <li> <p>Features: Choose the token features you want to use from the dropdown.</p> </li> <li> <p>Once you have filled in all details, click the Create Token button.</p> <p></p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-5-confirm-token-details","title":"Step 5: Confirm Token Details","text":"<ol> <li> <p>A Confirm Details modal will appear, displaying all your token's information.</p> </li> <li> <p>Carefully review the details to ensure all information is accurate.</p> </li> <li> <p>Click Continue to proceed.</p> <p></p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-6-token-creation-confirmation","title":"Step 6: Token Creation Confirmation","text":"<ol> <li> <p>Upon successful creation, you will receive a Token created successfully confirmation message.</p> </li> <li> <p>The new token will now be created within your Kalp DLT wallet.</p> <p></p> </li> </ol>"},{"location":"Products/Token-Studio/How-to-create-token-with-kalp-dlt/#step-7-view-created-token","title":"Step 7: View Created Token","text":"<ol> <li> <p>Navigate to List of Token Created tab from the navigation menu on the left.</p> </li> <li> <p>You will see the newly created token pending.</p> </li> </ol> <p>If you are on a limited tier plan, you may encounter a message at the top saying \"You've reached the limit for creating tokens on your current plan\". In that case you can choose to upgrade your plan by clicking on the Upgrade button.If you are on a limited tier plan, you may encounter a message at the top saying \"You've reached the limit for creating tokens on your current plan\". In that case you can choose to upgrade your plan by clicking on the Upgrade button.</p> <p>Creating tokens with Kalp DLT on the Kalp Studio platform is a straightforward process designed for users of all skill levels. By following these steps, you can bring your token ideas to life effectively. With Kalp Studio, the complexities of token development are simplified, so you can focus on building your applications and assets.</p>"},{"location":"Products/Token-Studio/How-to-create-token/","title":"How to create token","text":""},{"location":"Products/Token-Studio/How-to-create-token/#getting-started-with-token-creation-using-kalp-studios-token-studio","title":"Getting Started with Token Creation Using Kalp Studio\u2019s Token Studio","text":"<p>Kalp Studio's Token Studio tool provides a easy way to create and manage blockchain tokens through kalp studio console, enabling both beginners and experienced users to design tokens with customizable parameters. This guide will walk you through the steps to create a token using the Token Studio on Kalp Studio.</p>"},{"location":"Products/Token-Studio/How-to-create-token/#step-1-access-the-token-studio","title":"Step 1: Access the Token Studio","text":"<p>Once you\u2019ve logged into Kalp Studio and connected your wallet, navigate to the Dashboard. Under Our Products, locate Token Studio and click Explore to access the token creation interface.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-create-token/#step-2-start-the-token-creation-wizard","title":"Step 2: Start the Token Creation Wizard","text":"<p>In the Kalp Token Studio, click Create New Token. This will take you to the Token Creation Wizard, where you\u2019ll set the details and characteristics of your token.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-create-token/#step-3-define-token-details","title":"Step 3: Define Token Details","text":"<p>The Token Creation Wizard provides fields for you to define the fundamental attributes of your token:</p> <p></p> <ul> <li> <p>Name: Enter the name of your token (e.g., \u201cMyToken\u201d).</p> </li> <li> <p>Symbol: Set the token symbol, a short code representing your token (up to 10 characters).</p> </li> <li> <p>Decimals: Specify the decimal places (precision) for your token.</p> </li> <li> <p>Description: Provide a brief description to clarify the purpose of your token.</p> </li> <li> <p>Icon Image: Upload an icon to represent your token. Recommended format: JPG/PNG, up to 2MB in size, and a resolution of 700x500 pixels.</p> </li> </ul> <p></p> <ul> <li> <p>Token Initial Supply: Set the initial supply, which is the number of tokens created when the contract is deployed.</p> </li> <li> <p>Token Maximum Supply: Define the maximum supply limit if applicable (leave blank for an unlimited supply).</p> </li> <li> <p>Owner (Wallet Address): Input the owner\u2019s wallet address, which will hold the initial token supply and control token management features.</p> </li> </ul> <p>Kalp Studio\u2019s Token Studio offers several optional features to enhance token functionality:</p> <ul> <li> <p>Burnable: Enables the option to burn (destroy) tokens, reducing the total supply.</p> </li> <li> <p>Pausable: Allows the owner to pause all token transactions in case of emergencies.</p> </li> </ul> <p>Toggle these options as per your token\u2019s requirements.</p>"},{"location":"Products/Token-Studio/How-to-create-token/#step-6-create-your-token","title":"Step 6: Create Your Token","text":"<p>Once you have configured all the parameters, double-check your entries. When you are ready, click Create Token. The platform will process your token creation request, deploying the token contract on the blockchain.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-create-token/#step-7-view-and-manage-created-tokens","title":"Step 7: View and Manage Created Tokens","text":"<p>After successfully creating your token, navigate to List of Token Created in the sidebar. Here, you can view details of all tokens you've created and manage them as needed.</p> <p></p> <p></p>"},{"location":"Products/Token-Studio/How-to-create-token/#important-considerations","title":"Important Considerations","text":"<ul> <li> <p>Gas Fees: Blockchain networks may charge gas fees for deploying your token, so ensure your wallet has sufficient funds.</p> </li> <li> <p>Security: Make sure to verify all details before deployment, as transactions on the blockchain are irreversible. </p> </li> </ul>"},{"location":"Products/Token-Studio/How-to-create-token/#conclusion","title":"Conclusion","text":"<p>Kalp Studio\u2019s Token Studio provides a powerful and user-friendly interface for creating tokens with customizable options. By following these steps, you can quickly deploy a new token and start utilizing it within your blockchain applications. Whether for asset management, rewards programs, or utility purposes, Kalp Studio enables you to bring your tokenization ideas to life efficiently and securely.</p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/","title":"How to get started with token creator","text":""},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#how-to-get-started-with-token-studio-on-kalp-studio","title":"How to Get Started with Token Studio on Kalp Studio","text":"<p>Kalp Studio\u2019s Token Studio simplifies the process of creating and managing tokens across popular standards including ERC20. It\u2019s designed for both beginners and advanced users who want to manage tokens efficiently on the blockchain. Here\u2019s a step-by-step guide to getting started with the Token studio tool on Kalp Studio.</p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-1-access-the-dashboard","title":"Step 1: Access the Dashboard","text":"<p>Click on the Try Now button to explore the app for free, or connect your preferred wallet for full access to token creation.</p> <p></p> <p>Log into kalp studio account. Once you\u2019ve logged into Kalp Studio, navigate to the Dashboard on the left sidebar. Here, you\u2019ll find various tools and applications available, including Token Studio. Click on  Get Started under Token studio to explore available plans. </p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-2-choose-a-plan","title":"Step 2: Choose a Plan","text":"<p>Kalp Studio offers different subscription plans for the Token Studio, based on your needs and usage. The plans available are:</p> <p></p> <ul> <li> <p>Starter Plan: $20 per day, with a token creation limit of 100 per day.</p> </li> <li> <p>Developer Plan: $45 per month, with a token creation limit of 200 tokens.</p> </li> <li> <p>Enterprise Plan: $75 per month, with a token creation limit of 300 tokens.</p> </li> </ul> <p>Choose a plan that suits your requirements and click Subscribe under the chosen plan. A confirmation dialog will appear. Once you confirm, your subscription will be active, and you can start creating tokens immediately.</p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-3-confirm-subscription","title":"Step 3: Confirm Subscription","text":"<p>After selecting a plan, you\u2019ll see a confirmation popup. This popup confirms your chosen plan, subscription type, and cost. If you are certain about your choice, click on Subscribe to proceed. </p> <p>Note</p> <p>Upgrading to a higher plan will restrict downgrading to a previous plan later, so Choose wisely.</p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-4-verify-your-subscription","title":"Step 4: Verify Your Subscription","text":"<p>To verify your subscription, go back to the Billing section. Here, you\u2019ll see your active subscription plan details, including the start date and renewal date. This ensures your plan is activated and ready to use.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-5-start-creating-tokens","title":"Step 5: Start Creating Tokens","text":"<p>Now that you\u2019re subscribed, return to the Dashboard and explore Token Studio. This tool offers a user-friendly interface to create tokens effortlessly. Simply follow the guided steps to set your token\u2019s attributes, such as its name, symbol, and other specifications depending on the token standard (e.g., ERC20).</p> <p></p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#step-6-managing-your-tokens","title":"Step 6: Managing Your Tokens","text":"<p>Once created, you can manage your tokens through the same interface. Kalp Studio provides additional functionalities like token distribution, minting, and tracking, making it easy to handle all aspects of token management in one place.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-get-started-with-token-studio/#conclusion","title":"Conclusion","text":"<p>Kalp Studio\u2019s Token Studio is an efficient tool for managing tokens on the blockchain. By subscribing to the plan that suits your needs and following these steps, you can start creating and managing tokens effortlessly. Whether you're a developer or an enterprise, Kalp Studio's Token Studio simplifies the blockchain token management experience.</p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/","title":"How to view list of token created","text":""},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#how-to-view-the-list-of-tokens-created-on-kalp-studio","title":"How to View the List of Tokens Created on Kalp Studio","text":"<p>Kalp Studio's Token Studio not only enables you to create tokens but also provides a convenient way to manage and view all tokens you've created. Here\u2019s a step-by-step guide on how to access the list of your created tokens.</p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#step-1-access-the-dashboard","title":"Step 1: Access the Dashboard","text":"<p>Log into your Kalp Studio account and navigate to the Dashboard. Ensure that you have a valid subscription to the Token Studio and have connected your wallet to proceed with token creation and management.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#step-2-navigate-to-the-list-of-token-created-section","title":"Step 2: Navigate to the \"List of Token Created\" Section","text":"<p>On the left sidebar of the dashboard, you\u2019ll see various options such as Token Creation Wizard, List of Token Created, and Subscription. Click on List of Token Created to access a detailed list of all tokens you've created using Kalp Studio\u2019s Token Studio.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#step-3-explore-the-token-details","title":"Step 3: Explore the Token Details","text":"<p>In the List of Token Created section, you\u2019ll see a list of all tokens, including important information such as:</p> <p></p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#detailed-information-available","title":"Detailed Information Available","text":"<p>Each token entry includes the following key attributes:</p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#a-symbol","title":"a. Symbol","text":"<ul> <li>The unique shorthand identifier for the token (e.g., BTC for Bitcoin, ETH for Ethereum).</li> <li>This is user-defined during the token creation process.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#b-name","title":"b. Name","text":"<ul> <li>The full name of the token as specified during creation (e.g., \"MyToken\").</li> <li>Provides a descriptive name to easily identify the token.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#c-type","title":"c. Type","text":"<ul> <li>Indicates the type of token:<ul> <li>Fungible Tokens: Interchangeable tokens like ERC20 (e.g., cryptocurrency).</li> </ul> </li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#d-initial-supply","title":"d. Initial Supply","text":"<ul> <li>The number of tokens that were created at the time of deployment.</li> <li>Represents the starting quantity of tokens available.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#e-maximum-supply","title":"e. Maximum Supply","text":"<ul> <li>The upper limit of tokens that can ever exist for this token.</li> <li>Ensures users can cap the total number of tokens to prevent inflation.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#f-blockchain","title":"f. Blockchain","text":"<ul> <li>The blockchain on which the token resides (e.g., Kalp DLT).</li> <li>Helps users track the token's compatibility with specific blockchain networks.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#g-network","title":"g. Network","text":"<ul> <li>Indicates the specific network within the blockchain ecosystem where the token was deployed (e.g., Kalp's  Devnet, Mainnet).</li> <li>Helps identify whether the token is in a testing or live environment.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#h-transaction-id","title":"h. Transaction ID","text":"<ul> <li>A unique identifier generated when the token is deployed on the blockchain.</li> <li>Used to verify and track the deployment transaction.</li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#clickable-transaction-id","title":"Clickable Transaction ID**","text":"<ul> <li>The Transaction ID is a clickable link.</li> <li>Clicking the link redirects you to the blockchain explorer of the respective network.</li> <li> <p>On the blockchain explorer, users can view:</p> <ol> <li> <p>Detailed transaction history.</p> </li> <li> <p>Timestamp of the token deployment.</p> </li> <li> <p>Gas fees paid for deployment.</p> </li> <li> <p>Contract address of the token.</p> </li> </ol> </li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#step-4-manage-each-token","title":"Step 4: Manage Each Token","text":"<p>Each token entry might include additional actions based on its type and your subscription plan. You can view detailed statistics, manage token distribution, or even pause/resume token activity if you enabled the Pausable feature during creation.</p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#step-5-filter-and-search-tokens","title":"Step 5: Filter and Search Tokens","text":"<p>If you have created multiple tokens, you can use the search bar or filter options to quickly locate specific tokens by their name, symbol, or status. This makes it easier to manage large token portfolios within the Kalp Studio environment.</p>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#important-tips","title":"Important Tips","text":"<ul> <li> <p>Organize with Descriptions: When creating tokens, add a clear description to each one. This will make it easier to identify them in the list.</p> </li> <li> <p>Monitor Active Status: Regularly check the status of your tokens, especially if they are part of active blockchain projects.</p> </li> </ul>"},{"location":"Products/Token-Studio/How-to-view-list-of-token-created/#conclusion","title":"Conclusion","text":"<p>Kalp Studio provides a user-friendly interface to not only create tokens but also manage them efficiently. By following these steps, you can easily view and monitor the list of tokens you've created, ensuring you stay informed about each token\u2019s status and details. This feature is particularly valuable for users managing multiple tokens or developing comprehensive blockchain applications with Kalp Studio\u2019s Token Studio.</p>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/","title":"How to view subscription details","text":""},{"location":"Products/Token-Studio/How-to-view-subscription-details/#how-to-view-subscription-details-for-token-studio-on-kalp-studio","title":"How to View Subscription Details for Token studio on Kalp Studio","text":"<p>Kalp Studio provides an easy way to check your subscription details for the Token Studio service. This includes information on your current plan, renewal dates, and payment history. Follow these steps to view your subscription details.</p>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#step-1-access-the-dashboard","title":"Step 1: Access the Dashboard","text":"<p>Log into your Kalp Studio account and navigate to the Dashboard. Make sure you\u2019re on the main dashboard where all your products and services are listed. Click on explore of Token Studio.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#step-2-navigate-to-the-subscription-section","title":"Step 2: Navigate to the \"Subscription\" Section","text":"<p>On the left sidebar of the dashboard, locate and click on the Subscription tab. This will take you to the page where all your subscription information is stored.</p> <p></p>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#step-3-view-subscription-details","title":"Step 3: View Subscription Details","text":"<p>In the Subscription section, you will find details related to your Token studio subscription, such as:</p> <p></p> <ul> <li> <p>Plan Name: The specific subscription plan you are on (e.g., Starter Plan, Developer Plan).</p> </li> <li> <p>Subscription Status: Whether your subscription is active or inactive.</p> </li> <li> <p>Renewal Date: The date when your subscription will be automatically renewed.</p> </li> <li> <p>Start Date: The initial date when you subscribed to the plan.</p> </li> <li> <p>Pricing: The cost of the current plan, either on a daily or monthly basis, depending on the plan you selected.</p> </li> </ul>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#step-4-review-purchase-history","title":"Step 4: Review Purchase History","text":"<p>Below the subscription details, you may find a Purchase History section. This section provides:</p> <p></p> <ul> <li> <p>Order ID: Unique identifier for each transaction.</p> </li> <li> <p>Purchased Plan Name: The specific product or service name (e.g., Token studio).</p> </li> <li> <p>Amount: The payment amount for each transaction.</p> </li> <li> <p>Date: The date and time of each transaction.</p> </li> <li> <p>Status: Status of the payment, such as success or pending.</p> </li> </ul>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#step-5-manage-subscription","title":"Step 5: Manage Subscription","text":"<p>If you need to upgrade, your subscription, you may find relevant options on this page. For example, there may be an Upgrade button if you wish to switch to a higher plan.</p>"},{"location":"Products/Token-Studio/How-to-view-subscription-details/#conclusion","title":"Conclusion","text":"<p>Kalp Studio\u2019s subscription management interface makes it simple to keep track of your Token studio subscription details. By following these steps, you can stay informed about your subscription status, payment history, and upcoming renewals, ensuring smooth access to the Token studio features.</p>"},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/","title":"Release notes version 1.0.0","text":""},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/#release-notes-kalp-studio-version-10","title":"Release Notes - Kalp studio Version 1.0","text":""},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/#introduction","title":"Introduction","text":"<p>This update marks the official launch of Kalp Studio (Version 1.0)! We've introduced a suite of features to streamline the user experience.</p>"},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/#release-summary","title":"Release Summary","text":"<p>Product Name</p> <p>Kalp Studio</p> <p>Release version</p> <p>v1.0.0</p> <p>Build Number</p> <p>1.10.13</p> <p>Release Date</p> <p>April 03, 2024</p>"},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/#release-features","title":"Release Features","text":"<ul> <li> <p>User Management:</p> <ul> <li> <p>Onboarding: Streamlined account creation process for individual developers.</p> </li> <li> <p>Subscription Model: Platform access requires a subscription (details forthcoming).</p> </li> <li> <p>Notifications: Integration with a notification engine for receiving platform updates.</p> </li> </ul> </li> <li> <p>Security:</p> <ul> <li> <p>User Verification: Mandatory identity and KYC (Know Your Customer) verification for user accounts, including KALP ID integration.</p> <ul> <li> <p>KYC - KYC process for user verification.</p> </li> <li> <p>KALP ID - Secure and unique KALP IDs for each user with an integrated wallet for both the testnet and mainnet.</p> </li> </ul> </li> </ul> </li> <li> <p>Kalp Wallet (Testnet):</p> <ul> <li> <p>Testnet Wallets: Secure wallets for managing assets within the testnet environment.</p> </li> <li> <p>Free Testnet Credits: 100 free credits are provided for testnet exploration.</p> </li> <li> <p>Payment Integration: Functionality for adding funds to wallets through the payment engine (details forthcoming).    </p> </li> </ul> </li> <li> <p>Project and Smart Contract Management:</p> <ul> <li> <p>Project Creation: Ability to create projects for organizing and managing smart contracts.</p> </li> <li> <p>Smart Contract Lifecycle: Create, deploy, and manage smart contracts on the testnet.</p> </li> <li> <p>Automatic API Endpoints: Automatic generation of API endpoints for deployed smart contracts.</p> </li> <li> <p>Transaction Monitoring: Monitor transactions associated with deployed smart contracts.</p> </li> <li> <p>Pre-built Templates: Pre-built smart contract templates for common standards (ERC-721, ERC-1155, ERC-20).</p> </li> </ul> </li> <li> <p>Transaction Monitoring: Keep track of your transactions for complete transparency.</p> </li> <li> <p>API Access &amp; Security</p> <ul> <li>API Key Generation: Functionality to generate API authentication keys to interact with deployed contracts.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-1.0.0/release-notes-version-1.0.0/#support-and-feedback","title":"Support and Feedback","text":"<p>Get the most out of Kalp Studio with our library of informative Support Articles and FAQs. They'll guide you through every step, from onboarding to advanced functionalities, ensuring a smooth and successful development experience.</p> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter. Please reach out to our support team at care@kalp.studio.</p>"},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/","title":"Release notes version 1.1.0","text":""},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/#release-notes-kalp-studio-version-110","title":"Release Notes - Kalp studio Version 1.1.0","text":""},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/#introduction","title":"Introduction","text":"<p>Having released kalp studio version 1.0.0 successfully, we are bringing the following changes into version 1.1.0, which will improve and stabilize kalp studio user experience with this release.</p>"},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/#kalp-studio-release-summary","title":"Kalp studio release summary","text":"<p>Product Name</p> <p>Kalp Studio</p> <p>Launch Date</p> <p>19 April, 2024</p> <p>Release Version</p> <p>V1.1.0</p> <p>Build Number</p> <p>1.1.0</p>"},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/#new-features-and-improvements","title":"New Features and Improvements","text":"<ul> <li> <p>Removing KYC from TestNet - To reduce entry barriers, we have removed the Know Your Customer (KYC) verification requirement for users operating on the TestNet environment. In the previous version Just to deploy smart contract, KYC was mandatory.</p> </li> <li> <p>UI Changes - Implemented UI changes to improve usability and aesthetics across the Kalp Studio platform. These enhancements include a more intuitive layout, improved navigation, and updated visual elements designed to provide a more user-friendly experience.</p> </li> <li> <p>Maintaining request access for main net - To ensure security and compliance on our MainNet environment, access will continue to be controlled through a request process on Kalp studio platform.</p> </li> <li> <p>Pricing plan changes in the webapp of Kalp studio - We have updated our pricing plans to better align with the needs of our diverse user base. The new plans are designed to be more flexible, allowing developers to choose options that best fit their project scales and durations.</p> </li> </ul> <p>Following are the changes for pricing in the Subscription Model for kalp studio.</p> <ol> <li> <p>Student- $0/month</p> </li> <li> <p>Developer- $19/month</p> </li> <li> <p>Business- $49/month</p> </li> </ol>"},{"location":"Release-notes/release-version-1.1.0/release-notes-version-1.1.0/#support-and-feedback","title":"Support and Feedback","text":"<p>Get the most out of Kalp Studio with our library of informative  Support Articles. They'll guide you through every step, from onboarding to advanced functionalities, ensuring a smooth and successful development experience.</p> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/","title":"Release notes version 1.1.1","text":""},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/#release-notes-kalp-studio-version-111","title":"Release Notes - Kalp studio Version 1.1.1","text":""},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/#introduction","title":"Introduction","text":"<p>Having released kalp studio version 1.0 &amp; 1.1.0 successfully, we are bringing the following changes into version 1.1.1, which is patch release for kalp studio.</p>"},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/#kalp-studio-release-summary","title":"Kalp studio release summary","text":"<p>Product Name</p> <p>Kalp Studio</p> <p>Launch Date</p> <p>25 April, 2024</p> <p>Release Version</p> <p>V1.1.1</p> <p>Build Number</p> <p>1.11.4</p>"},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/#improvements","title":"Improvements","text":"<ul> <li> <p>Main Net Access Request: Users can now request access to the Main Net directly from the network selection page while deploying smart contracts.</p> </li> <li> <p>Super Admin Endpoint Updates: We've implemented minor fixes and updates across multiple endpoints for super administrators.</p> </li> <li> <p>Admin Request for Main Net via Email: To streamline access requests to kalp studio main net, users can now send an email directly to the system administrator to request access to the Main Net.</p> </li> </ul>"},{"location":"Release-notes/release-version-1.1.1/release-notes-version-1.1.1/#support-and-feedback","title":"Support and Feedback","text":"<p>Get the most out of Kalp Studio with our library of informative  Support Articles. They'll guide you through every step, from onboarding to advanced functionalities, ensuring a smooth and successful development experience.</p> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/","title":"Release notes version 2.0.0","text":""},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#release-notes-kalp-studio-version-200","title":"Release notes - Kalp studio version 2.0.0","text":""},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#introduction","title":"Introduction","text":"<p>Welcome to the latest release of the Kalp Studio Console Dashboard. This update includes significant improvements and new features across various modules to enhance user experience and streamline blockchain and decentralized application development. Below is a detailed, module-wise breakdown of the new features and improvements.</p>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#new-features","title":"New Features","text":""},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#onboarding","title":"Onboarding","text":"<ul> <li>Streamlined Sign-Up Process: New users can now enjoy a more intuitive and faster registration process with clear instructions and prompts.</li> <li>$50 Onboarding Credit: Every new user receives a complimentary $50 credit to explore and utilize Kalp Studio\u2019s features.</li> <li>Verification Steps: Enhanced email verification and OTP validation for secure account setup.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#dashboard","title":"Dashboard","text":"<ul> <li>Centralized Overview: The redesigned dashboard provides a comprehensive overview of user activities, credit balances, and quick access to key features.</li> <li>Quick Actions: Added quick action buttons for frequently used functions such as connecting wallets, building smart contracts, and accessing community resources.</li> <li>Enhanced Navigation: Improved sidebar navigation with clear labels and icons for easy access to different sections.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#billing","title":"Billing","text":"<ul> <li>Pay-As-You-Go Model: Transparent and flexible billing system allowing users to pay only for the services they use.</li> <li>Billing Summary: New billing summary section displaying total bill due, due dates, active subscriptions, and upcoming renewals.</li> <li>Subscription Management: Easy access to manage, upgrade, or renew subscription plans directly from the billing page.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#credits","title":"Credits","text":"<ul> <li>Credit Management: Enhanced interface for viewing and managing credits, including a detailed transaction summary.</li> <li>Add Credits: Simplified process for adding credits with real-time currency conversion and transaction confirmation.</li> <li>Credit Overview: Clear display of total credits available and recent credit activities.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#wallets","title":"Wallets","text":"<ul> <li>Wallet Integration: Seamless integration with various wallet providers, including self-custody, custodial, and MPC wallets.</li> <li>Wallet Management: Enhanced wallet management features including viewing balances, transaction histories, and disconnecting wallets.</li> <li>Connect Wallet: Simplified process to connect and configure new wallets with detailed instructions and secure seed phrase handling.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#kalp-instant-deployer","title":"Kalp Instant Deployer","text":"<ul> <li>Smart Contract Deployment: Streamlined process for creating and deploying smart contracts using the instant deployer tool.</li> <li>Template Selection: New pre-built templates available for quick deployment of various smart contract types (e.g., NFT, Token, DEX, DAO).</li> <li>File Uploads: Enhanced support for uploading extension files with confirmation messages and the ability to re-upload if needed.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#api-gateway","title":"API Gateway","text":"<ul> <li>API Management: Comprehensive API management interface allowing users to create, manage, and monitor API endpoints.</li> <li>Subscription Plans: Various subscription plans available, including Free, Starter, Pro, and Business, tailored to different team sizes and needs.</li> <li>Endpoint Generation: Simplified process for generating and viewing API endpoints with detailed parameter information.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#api-key-generation","title":"API Key Generation","text":"<ul> <li>Key Creation: Easy creation of new API keys with customizable names and descriptions.</li> <li>Key Management: Centralized management of API keys including activation, deactivation, and viewing usage statistics.</li> <li>Security: Enhanced security measures for API keys to ensure safe and controlled access to services.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#transaction-monitoring","title":"Transaction Monitoring","text":"<ul> <li>Real-Time Monitoring: Advanced transaction monitoring features providing real-time updates on transaction statuses.</li> <li>Detailed Views: Comprehensive views of transaction details including transaction IDs, block IDs, function types, hashes, and statuses.</li> <li>Subscription Activation: Easy activation of the transaction monitoring service with clear subscription options.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#settings","title":"Settings","text":"<ul> <li>KYC Management: Enhanced KYC management interface allowing users to start and monitor their KYC status.</li> <li>Template Management: Simplified management of purchased templates with options to download and utilize them in projects.</li> </ul>"},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#improvements","title":"Improvements","text":""},{"location":"Release-notes/release-version-2.0.0/release-notes-version-2.0.0/#new-user-interface","title":"New User Interface","text":"<ul> <li>Enhanced UI Design: A completely revamped user interface for a more modern and intuitive user experience.</li> <li>Responsive Design: Improved responsiveness for better usability across different devices and screen sizes.</li> <li>Visual Consistency: Consistent visual elements and icons across all modules for a cohesive look and feel.</li> </ul> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/","title":"Release notes version 2.6.0","text":""},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#kalp-studio-version-260-release-notes","title":"Kalp Studio Version 2.6.0 Release Notes","text":""},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#introduction","title":"Introduction","text":"<p>Welcome to the latest release of the Kalp Studio Console Dashboard.  We are excited to announce the release of Kalp Studio Version 2.6.0, introducing the Kalp Storage module. These updates aim to improve user experience and streamline storage management in the blockchain with IPFS.</p> <p>Below are the key enhancements listed :</p>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#key-enhancements","title":"Key Enhancements","text":""},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#1-enhanced-user-interface-for-ks-storage","title":"1.  Enhanced User Interface for KS Storage","text":"<ul> <li>Streamlined Navigation: Simplified access to KS Storage from the main dashboard, facilitating quicker navigation.<ul> <li>Intuitive Dashboard: Redesigned dashboard providing a clear overview of storage buckets, folders, and files.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#2-flexible-subscription-plans","title":"2.  Flexible Subscription Plans","text":"<ul> <li>Diverse Options: Introduction of multiple subscription plans, including Developer, Business, and Enterprise tiers, catering to varying storage needs.<ul> <li>Easy Plan Management: Simplified subscription process with clear plan details and straightforward upgrade paths.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#3-advanced-storage-management-features","title":"3.  Advanced Storage Management Features","text":"<ul> <li>Bucket and Folder Operations: Enhanced capabilities for creating, organizing, and managing buckets and folders.<ul> <li>File Upload and Tagging: Improved file upload process with support for tagging, aiding in efficient file categorization and retrieval.\\</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#4-robust-search-and-filter-capabilities","title":"4.  Robust Search and Filter Capabilities","text":"<ul> <li>Bucket and Folder Search: Implementation of search functionality to quickly locate specific buckets and folders.<ul> <li>Date Range Filters: Addition of date range filters to refine searches based on creation or modification dates.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#5-api-key-generation-for-external-integrations","title":"5.  API Key Generation for External Integrations","text":"<ul> <li>Seamless Integration: Introduction of API key generation feature, enabling secure interaction with KS Storage from external applications.</li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#6-comprehensive-subscription-management","title":"6.  Comprehensive Subscription Management","text":"<ul> <li>Detailed Billing Information: Access to billing details, active subscriptions, and purchase history for transparent account management.<ul> <li>Plan Upgrades: Easy upgrade options to higher-tier plans as storage requirements grow.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.6.0/release-notes-version-2.6.0/#7-improved-content-management-tools","title":"7.  Improved Content Management Tools","text":"<ul> <li>Tag Management: Ability to add or remove tags from files for better organization.<ul> <li>Deletion Controls: Enhanced options for deleting folders and buckets, with prompts to manage contents appropriately.</li> </ul> </li> </ul> <p>These enhancements are designed to provide a more efficient and user-friendly experience within the KS Storage module of Kalp Studio. We encourage users to explore these new features to optimize their storage management workflows.</p> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/","title":"Release notes version 2.7.0","text":""},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#kalp-studio-version-270-release-notes","title":"Kalp Studio Version 2.7.0 Release Notes","text":""},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#introduction","title":"Introduction","text":"<p>Welcome to the latest release of the Kalp Studio Console Dashboard.  We are excited to announce the release of Kalp Studio Version 2.7.0, introducing the NFT Creator module, Which streamline your NFT creation and management experience.</p> <p>Below are the key enhancements listed :</p>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#release-notes-kalp-studio-nft-creator-version-270","title":"Release Notes Kalp Studio - NFT Creator Version 2.7.0","text":"<p>We are excited to announce the release of Kalp Studio NFT Creator Version 2.7.0, introducing significant enhancements to streamline your NFT creation and management experience.</p>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#key-enhancements","title":"Key Enhancements","text":""},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#1-seamless-wallet-integration","title":"1.  Seamless Wallet Integration","text":"<ul> <li>Enhanced Connectivity: Simplified process for connecting your digital wallet to the NFT Creator, ensuring secure and efficient transactions.<ul> <li>Comprehensive Support: Compatibility with a wide range of wallets, providing flexibility and convenience for users.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#2-intuitive-nft-creation-process","title":"2.  Intuitive NFT Creation Process","text":"<ul> <li>User-Friendly Interface: Redesigned NFT creation workflow with step-by-step guidance, making it accessible for users of all experience levels.<ul> <li>Advanced Metadata Management: Improved tools for adding and editing metadata, allowing for more detailed and descriptive NFTs.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#3-evm-chain-catalog-creation","title":"3.  EVM Chain Catalog Creation","text":"<ul> <li>Dedicated Catalogs: Ability to create and manage catalogs specifically for Ethereum Virtual Machine (EVM) compatible chains, enhancing organization and accessibility.<ul> <li>Cross-Chain Compatibility: Streamlined processes for handling NFTs across multiple EVM chains, broadening your reach and audience.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#4-efficient-nft-deletion","title":"4.  Efficient NFT Deletion","text":"<ul> <li>Simplified Removal: New functionality to delete NFTs directly from your catalog, providing better control over your digital assets.<ul> <li>Confirmation Prompts: Added safeguards to prevent accidental deletions, ensuring the security of your creations.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#5-enhanced-viewing-options","title":"5.  Enhanced Viewing Options","text":"<ul> <li>Grid and List Views: Flexible display options for viewing your NFT collection, allowing you to choose the layout that best suits your preferences.<ul> <li>Detailed Asset Insights: Access to comprehensive asset details, including metadata and transaction history, directly within the platform.</li> </ul> </li> </ul>"},{"location":"Release-notes/release-version-2.7.0/release-notes-version-2.7.0/#6-improved-catalog-management","title":"6.  Improved Catalog Management","text":"<ul> <li>Organized Collections: Tools to create, edit, and manage catalogs, facilitating better organization of your NFTs.<ul> <li>Search and Filter Capabilities: Enhanced features to quickly locate specific assets within your catalogs, improving efficiency.</li> </ul> </li> </ul> <p>These updates are designed to provide a more robust and user-friendly experience within the Kalp Studio NFT Creator. We encourage you to explore these new features to enhance your NFT creation and management workflows.</p> <p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/","title":"Release version 2.8.0","text":""},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#release-notes-kalp-studio-token-creator-version-280","title":"Release Notes - Kalp Studio Token Creator - Version: 2.8.0","text":"<p>Kalp Studio is excited to announce the release of the Token Creator feature, designed to creation, deployment, and management of tokens on the blockchain. The Token Creator enables users to create custom tokens with ease, using a guided wizard, while providing a comprehensive dashboard for subscription management and token analytics. Here\u2019s what\u2019s new in this release:</p>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#new-features","title":"New Features","text":""},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#token-creation-wizard","title":"Token Creation Wizard","text":"<ul> <li>Simplified Token Creation: A step-by-step wizard to guide users through the process of creating custom tokens, supporting popular standards like ERC20, ERC721, and ERC1155.</li> <li> <p>Token Customization Options: Users can configure token details such as name, symbol, decimals, initial supply, and maximum supply.</p> </li> <li> <p>Icon Upload: Personalize tokens with an icon upload option (supports JPG and PNG formats up to 2MB).</p> </li> <li> <p>Advanced Features: Optional token attributes like burnable and pausable functionalities for greater control and flexibility.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#wallet-integration","title":"Wallet Integration","text":"<ul> <li> <p>Seamless Wallet Connection: Connect your preferred wallet (such as MetaMask or Kalp Studio Wallet) for easy access to token creation and management.</p> </li> <li> <p>Secure Access: Wallet-based authentication provides a secure and decentralized way to manage your tokens on the platform.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#subscription-management","title":"Subscription Management","text":"<ul> <li> <p>Flexible Plans: Choose from multiple subscription plans (e.g., Starter, Developer, Enterprise) based on usage needs and token limits.</p> </li> <li> <p>Billing and Payment History: Access a detailed subscription page to view your plan details, renewal dates, and complete transaction history.</p> </li> <li> <p>Upgrade/Downgrade Options: Upgrade to a higher plan as your needs scale, with easy access to billing details and payment records.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#token-management-dashboard","title":"Token Management Dashboard","text":"<ul> <li> <p>List of Created Tokens: Access a comprehensive list of all tokens created with Kalp Studio Token Creator, including information such as token name, type, supply, and blockchain network.</p> </li> <li> <p>Real-Time Status Monitoring: Monitor the status of each token and manage additional settings directly from the dashboard.</p> </li> <li> <p>Transaction Details: View transaction details including blockchain network and transaction IDs for each created token.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#improvements","title":"Improvements","text":"<ul> <li> <p>User Interface Enhancements: Streamlined UI/UX for a smoother experience in navigating between the dashboard, token creation wizard, and subscription management pages.</p> </li> <li> <p>Optimized Load Times: Enhanced performance for faster loading across dashboard sections, improving the user experience.</p> </li> <li> <p>Tooltips and Guidance: Added tooltips and information icons to provide users with relevant tips and explanations, helping them better understand available options and features.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#known-issues","title":"Known Issues","text":"<ul> <li> <p>Icon Image Preview: In some instances, the token icon preview may not display immediately after uploading. Refreshing the page resolves this issue.</p> </li> <li> <p>Network Delay: On rare occasions, there might be a slight delay in reflecting transaction status on the dashboard due to network congestion.</p> </li> </ul>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#getting-started","title":"Getting Started","text":"<p>To get started with Kalp Studio Token Creator:</p> <ol> <li> <p>Log in to your Kalp Studio account.</p> </li> <li> <p>Connect your preferred wallet for access to token creation.</p> </li> <li> <p>Choose your subscription plan under Billing in the dashboard.</p> </li> <li> <p>Navigate to Token Creation Wizard to start creating your custom tokens.</p> </li> </ol>"},{"location":"Release-notes/release-version-2.8.0/release-notes-version-2.8.0/#feedback","title":"Feedback","text":"<p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/","title":"Release version 2.9.0","text":""},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#release-notes-for-ks-query-v290","title":"Release Notes for KS Query v2.9.0","text":"<p>Release Date: November 25, 2024  </p> <p>We are excited to announce the release of KS Query v2.9.0, packed with new features, user interface improvements, and enhanced functionality to streamline your blockchain data management and API usage. Below is an overview of the updates introduced in this version.</p>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#whats-new","title":"What's New?","text":""},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#1-improved-dashboard-functionality","title":"1. Improved Dashboard Functionality","text":"<ul> <li>Enhanced API Request Metrics:</li> <li>Displays the total number of API requests allowed per subscription plan.</li> <li>Interactive date range filter to view API hits over custom periods (e.g., daily, weekly, or monthly views).</li> <li>API request consumption visualized through a graph for easier analysis and monitoring.</li> <li>Quick links for plan upgrades and subscription details ensure seamless access to plan management.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#2-subscription-management-enhancements","title":"2. Subscription Management Enhancements","text":"<ul> <li>Detailed Subscription Information:</li> <li>Displays active plan name, pricing, renewal date, and subscription start date in an organized layout.</li> <li>Purchase History now includes order IDs, plan names, amounts, and timestamps for all subscription transactions.</li> <li>Upgrade Plan Option:</li> <li>Users can upgrade directly from the subscription section for a more flexible and scalable experience.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#3-blockchain-and-network-selection","title":"3. Blockchain and Network Selection","text":"<ul> <li>Simplified network selection with a dedicated Blockchain &amp; Network modal.</li> <li>Supports multiple networks such as Kalp Chain Devnet.</li> <li>Upcoming support for Ethereum (Holseky, Sepolia, Mainnet) and Binance Smart Chain (Testnet, Mainnet).</li> <li>Confirmation prompt for secure blockchain network connection.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#4-api-key-generation","title":"4. API Key Generation","text":"<ul> <li>Create API Authentication Keys:</li> <li>Users can easily generate new API keys by specifying the key name and an optional description.</li> <li>A straightforward interface with a \u201cCreate Now\u201d button for instant key creation.</li> <li>Intuitive API key management improves security and operational flexibility.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#5-all-apis-overview","title":"5. All APIs Overview","text":"<ul> <li>Comprehensive API Explorer:</li> <li>Categorized API endpoints for:<ul> <li>Channels</li> <li>Smart Contracts</li> <li>Blocks</li> <li>Transactions</li> <li>Network List</li> </ul> </li> <li>\"Check Params\" button added for quick parameter validation.</li> <li>Real-time API hit tracking displays usage statistics for precise monitoring.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#bug-fixes-and-optimizations","title":"Bug Fixes and Optimizations","text":"<ul> <li>Fixed minor UI glitches in the dashboard and subscription pages.</li> <li>Improved loading times for the All APIs page and blockchain network selection modal.</li> <li>Enhanced stability and error handling for API requests.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#how-to-use-the-new-features","title":"How to Use the New Features","text":"<ol> <li>Monitor API Metrics: Navigate to the Dashboard to view API hits and request limits using the new graph and filters.</li> <li>Manage Subscriptions: Visit the Subscription section for detailed plan information, purchase history, and plan upgrades.</li> <li>Select Networks: Choose a blockchain network from the All APIs page or during API key generation.</li> <li>Generate API Keys: Use the API Key Generation section to create and manage secure authentication keys.</li> </ol>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#known-issues","title":"Known Issues","text":"<ul> <li>Blockchain support for Ethereum and Binance Smart Chain networks is listed as \"coming soon.\"</li> <li>Minor performance degradation on older browsers. Updating to the latest version is recommended.</li> </ul>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#conclusion","title":"Conclusion","text":"<p>KS Query v2.9.0 delivers a more streamlined experience for blockchain developers and users with enhanced subscription management, real-time API tracking, and simplified network selection. These updates ensure better control, flexibility, and efficiency for all KS Query users. We are committed to continuously improving our platform and value your feedback.</p>"},{"location":"Release-notes/release-version-2.9.0/release-notes-version-2.9.0/#feedback","title":"Feedback","text":"<p>We value your feedback and encourage you to share any suggestions or report any issues you encounter, Raise a ticket at - care@kalp.studio.</p> <p>We look forward to your continued support as we work towards a stable and feature-rich release.</p>"},{"location":"Video-Tutorials/Connect-wallet-on-Kalp-studio/","title":"Connect wallet on Kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/Create-wallet-on-Kalp-studio/","title":"Create wallet on Kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/Deploy-a-smart-contract-on-Kalp-studio/","title":"Deploy smart contract on Kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/How-to-generate-API-endpoints/","title":"Generate API endpoints on kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/How-to-send-transactions-on-kalp-studio/","title":"How to send transaction on kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/Login-into-Kalp-studio/","title":"Login into Kalp studio","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"},{"location":"Video-Tutorials/Subscribe-to-Kalp-studio-products/","title":"Subscribe to Kalp studio products","text":"<p>Note</p> <p>If you encounter any issues related to Kalp Studio, please raise a support ticket at care.kalp.studio. Our dedicated development team will assist you in finding the best possible solution.</p>"}]}